
Aula_03_UART_USART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004170  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00404170  00404170  00014170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00404178  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000100  200009c0  00404b38  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20000ac0  00404c38  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000ef21  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000022cc  00000000  00000000  0002f964  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003801  00000000  00000000  00031c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000880  00000000  00000000  00035431  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007e0  00000000  00000000  00035cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000131b6  00000000  00000000  00036491  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00009a7c  00000000  00000000  00049647  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00055e9b  00000000  00000000  000530c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f74  00000000  00000000  000a8f60  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	c0 3a 00 20 d9 08 40 00 d5 08 40 00 d5 08 40 00     .:. ..@...@...@.
  400010:	d5 08 40 00 d5 08 40 00 d5 08 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	d5 08 40 00 d5 08 40 00 00 00 00 00 d5 08 40 00     ..@...@.......@.
  40003c:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.
  40004c:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.
  40005c:	d5 08 40 00 d5 08 40 00 d5 08 40 00 00 00 00 00     ..@...@...@.....
  40006c:	5d 07 40 00 71 07 40 00 85 07 40 00 d5 08 40 00     ].@.q.@...@...@.
  40007c:	d5 08 40 00 00 00 00 00 00 00 00 00 d5 08 40 00     ..@...........@.
  40008c:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.
  40009c:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.
  4000ac:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.
  4000bc:	d5 08 40 00 d5 08 40 00 d5 08 40 00 d5 08 40 00     ..@...@...@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00404178 	.word	0x00404178

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00404178 	.word	0x00404178
  40012c:	200009c4 	.word	0x200009c4
  400130:	00404178 	.word	0x00404178
  400134:	00000000 	.word	0x00000000

00400138 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40013c:	b980      	cbnz	r0, 400160 <_read+0x28>
  40013e:	460c      	mov	r4, r1
  400140:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400142:	2a00      	cmp	r2, #0
  400144:	dd0f      	ble.n	400166 <_read+0x2e>
  400146:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400148:	4e08      	ldr	r6, [pc, #32]	; (40016c <_read+0x34>)
  40014a:	4d09      	ldr	r5, [pc, #36]	; (400170 <_read+0x38>)
  40014c:	6830      	ldr	r0, [r6, #0]
  40014e:	4621      	mov	r1, r4
  400150:	682b      	ldr	r3, [r5, #0]
  400152:	4798      	blx	r3
		ptr++;
  400154:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400156:	42bc      	cmp	r4, r7
  400158:	d1f8      	bne.n	40014c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40015a:	4640      	mov	r0, r8
  40015c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400160:	f04f 38ff 	mov.w	r8, #4294967295
  400164:	e7f9      	b.n	40015a <_read+0x22>
	for (; len > 0; --len) {
  400166:	4680      	mov	r8, r0
  400168:	e7f7      	b.n	40015a <_read+0x22>
  40016a:	bf00      	nop
  40016c:	20000a90 	.word	0x20000a90
  400170:	20000a88 	.word	0x20000a88

00400174 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400174:	6943      	ldr	r3, [r0, #20]
  400176:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40017a:	bf1d      	ittte	ne
  40017c:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400180:	61c1      	strne	r1, [r0, #28]
	return 0;
  400182:	2000      	movne	r0, #0
		return 1;
  400184:	2001      	moveq	r0, #1
}
  400186:	4770      	bx	lr

00400188 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400188:	6943      	ldr	r3, [r0, #20]
  40018a:	f013 0f01 	tst.w	r3, #1
  40018e:	d005      	beq.n	40019c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400190:	6983      	ldr	r3, [r0, #24]
  400192:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400196:	600b      	str	r3, [r1, #0]

	return 0;
  400198:	2000      	movs	r0, #0
  40019a:	4770      	bx	lr
		return 1;
  40019c:	2001      	movs	r0, #1
}
  40019e:	4770      	bx	lr

004001a0 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001a0:	3801      	subs	r0, #1
  4001a2:	2802      	cmp	r0, #2
  4001a4:	d815      	bhi.n	4001d2 <_write+0x32>
{
  4001a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001aa:	460e      	mov	r6, r1
  4001ac:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001ae:	b19a      	cbz	r2, 4001d8 <_write+0x38>
  4001b0:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001b2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4001ec <_write+0x4c>
  4001b6:	4f0c      	ldr	r7, [pc, #48]	; (4001e8 <_write+0x48>)
  4001b8:	f8d8 0000 	ldr.w	r0, [r8]
  4001bc:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001c0:	683b      	ldr	r3, [r7, #0]
  4001c2:	4798      	blx	r3
  4001c4:	2800      	cmp	r0, #0
  4001c6:	db0a      	blt.n	4001de <_write+0x3e>
  4001c8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4001ca:	3c01      	subs	r4, #1
  4001cc:	d1f4      	bne.n	4001b8 <_write+0x18>
  4001ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001d2:	f04f 30ff 	mov.w	r0, #4294967295
  4001d6:	4770      	bx	lr
	for (; len != 0; --len) {
  4001d8:	4610      	mov	r0, r2
  4001da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4001de:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001e6:	bf00      	nop
  4001e8:	20000a8c 	.word	0x20000a8c
  4001ec:	20000a90 	.word	0x20000a90

004001f0 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4001f0:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4001f2:	23ac      	movs	r3, #172	; 0xac
  4001f4:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4001f6:	680b      	ldr	r3, [r1, #0]
  4001f8:	684a      	ldr	r2, [r1, #4]
  4001fa:	fbb3 f3f2 	udiv	r3, r3, r2
  4001fe:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400200:	1e5c      	subs	r4, r3, #1
  400202:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  400206:	4294      	cmp	r4, r2
  400208:	d80b      	bhi.n	400222 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  40020a:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  40020c:	688b      	ldr	r3, [r1, #8]
  40020e:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400210:	f240 2302 	movw	r3, #514	; 0x202
  400214:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  400218:	2350      	movs	r3, #80	; 0x50
  40021a:	6003      	str	r3, [r0, #0]

	return 0;
  40021c:	2000      	movs	r0, #0
}
  40021e:	bc10      	pop	{r4}
  400220:	4770      	bx	lr
		return 1;
  400222:	2001      	movs	r0, #1
  400224:	e7fb      	b.n	40021e <uart_init+0x2e>

00400226 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400226:	6943      	ldr	r3, [r0, #20]
  400228:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40022c:	bf1a      	itte	ne
  40022e:	61c1      	strne	r1, [r0, #28]
	return 0;
  400230:	2000      	movne	r0, #0
		return 1;
  400232:	2001      	moveq	r0, #1
}
  400234:	4770      	bx	lr

00400236 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400236:	6943      	ldr	r3, [r0, #20]
  400238:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40023c:	bf1d      	ittte	ne
  40023e:	6983      	ldrne	r3, [r0, #24]
  400240:	700b      	strbne	r3, [r1, #0]
	return 0;
  400242:	2000      	movne	r0, #0
		return 1;
  400244:	2001      	moveq	r0, #1
}
  400246:	4770      	bx	lr

00400248 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400248:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40024a:	480e      	ldr	r0, [pc, #56]	; (400284 <sysclk_init+0x3c>)
  40024c:	4b0e      	ldr	r3, [pc, #56]	; (400288 <sysclk_init+0x40>)
  40024e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400250:	213e      	movs	r1, #62	; 0x3e
  400252:	2000      	movs	r0, #0
  400254:	4b0d      	ldr	r3, [pc, #52]	; (40028c <sysclk_init+0x44>)
  400256:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400258:	4c0d      	ldr	r4, [pc, #52]	; (400290 <sysclk_init+0x48>)
  40025a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40025c:	2800      	cmp	r0, #0
  40025e:	d0fc      	beq.n	40025a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400260:	4b0c      	ldr	r3, [pc, #48]	; (400294 <sysclk_init+0x4c>)
  400262:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400264:	4a0c      	ldr	r2, [pc, #48]	; (400298 <sysclk_init+0x50>)
  400266:	4b0d      	ldr	r3, [pc, #52]	; (40029c <sysclk_init+0x54>)
  400268:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40026a:	4c0d      	ldr	r4, [pc, #52]	; (4002a0 <sysclk_init+0x58>)
  40026c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40026e:	2800      	cmp	r0, #0
  400270:	d0fc      	beq.n	40026c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400272:	2010      	movs	r0, #16
  400274:	4b0b      	ldr	r3, [pc, #44]	; (4002a4 <sysclk_init+0x5c>)
  400276:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400278:	4b0b      	ldr	r3, [pc, #44]	; (4002a8 <sysclk_init+0x60>)
  40027a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40027c:	4801      	ldr	r0, [pc, #4]	; (400284 <sysclk_init+0x3c>)
  40027e:	4b02      	ldr	r3, [pc, #8]	; (400288 <sysclk_init+0x40>)
  400280:	4798      	blx	r3
  400282:	bd10      	pop	{r4, pc}
  400284:	07270e00 	.word	0x07270e00
  400288:	00400a95 	.word	0x00400a95
  40028c:	004007fd 	.word	0x004007fd
  400290:	00400851 	.word	0x00400851
  400294:	00400861 	.word	0x00400861
  400298:	20133f01 	.word	0x20133f01
  40029c:	400e0400 	.word	0x400e0400
  4002a0:	00400871 	.word	0x00400871
  4002a4:	00400799 	.word	0x00400799
  4002a8:	00400985 	.word	0x00400985

004002ac <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  4002ac:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4002ae:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4002b2:	4b46      	ldr	r3, [pc, #280]	; (4003cc <board_init+0x120>)
  4002b4:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4002b6:	200b      	movs	r0, #11
  4002b8:	4c45      	ldr	r4, [pc, #276]	; (4003d0 <board_init+0x124>)
  4002ba:	47a0      	blx	r4
  4002bc:	200c      	movs	r0, #12
  4002be:	47a0      	blx	r4
  4002c0:	200d      	movs	r0, #13
  4002c2:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  4002c4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4002c8:	2013      	movs	r0, #19
  4002ca:	4c42      	ldr	r4, [pc, #264]	; (4003d4 <board_init+0x128>)
  4002cc:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  4002ce:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4002d2:	2014      	movs	r0, #20
  4002d4:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  4002d6:	4940      	ldr	r1, [pc, #256]	; (4003d8 <board_init+0x12c>)
  4002d8:	2023      	movs	r0, #35	; 0x23
  4002da:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  4002dc:	493f      	ldr	r1, [pc, #252]	; (4003dc <board_init+0x130>)
  4002de:	204c      	movs	r0, #76	; 0x4c
  4002e0:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  4002e2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  4002e6:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  4002ea:	483d      	ldr	r0, [pc, #244]	; (4003e0 <board_init+0x134>)
  4002ec:	4b3d      	ldr	r3, [pc, #244]	; (4003e4 <board_init+0x138>)
  4002ee:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  4002f0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4002f4:	2000      	movs	r0, #0
  4002f6:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  4002f8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4002fc:	2008      	movs	r0, #8
  4002fe:	47a0      	blx	r4

	/* PWMH0 configuration */
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
  400300:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400304:	2052      	movs	r0, #82	; 0x52
  400306:	47a0      	blx	r4
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400308:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40030c:	200c      	movs	r0, #12
  40030e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400310:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400314:	200d      	movs	r0, #13
  400316:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400318:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40031c:	200e      	movs	r0, #14
  40031e:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400320:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400324:	200b      	movs	r0, #11
  400326:	47a0      	blx	r4
#  endif
#endif /* CONF_BOARD_SPI */

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  400328:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40032c:	2015      	movs	r0, #21
  40032e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  400330:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400334:	2016      	movs	r0, #22
  400336:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
#endif

#ifdef CONF_BOARD_ADM3312_EN
	/* Configure ADM33312 enable pin */
	gpio_configure_pin(PIN_USART1_EN_IDX, PIN_USART1_EN_FLAGS);
  400338:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  40033c:	2017      	movs	r0, #23
  40033e:	47a0      	blx	r4
	gpio_set_pin_low(PIN_USART1_EN_IDX);
  400340:	2017      	movs	r0, #23
  400342:	4b29      	ldr	r3, [pc, #164]	; (4003e8 <board_init+0x13c>)
  400344:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  400346:	4d29      	ldr	r5, [pc, #164]	; (4003ec <board_init+0x140>)
  400348:	4629      	mov	r1, r5
  40034a:	2040      	movs	r0, #64	; 0x40
  40034c:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  40034e:	4629      	mov	r1, r5
  400350:	2041      	movs	r0, #65	; 0x41
  400352:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  400354:	4629      	mov	r1, r5
  400356:	2042      	movs	r0, #66	; 0x42
  400358:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  40035a:	4629      	mov	r1, r5
  40035c:	2043      	movs	r0, #67	; 0x43
  40035e:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400360:	4629      	mov	r1, r5
  400362:	2044      	movs	r0, #68	; 0x44
  400364:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  400366:	4629      	mov	r1, r5
  400368:	2045      	movs	r0, #69	; 0x45
  40036a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  40036c:	4629      	mov	r1, r5
  40036e:	2046      	movs	r0, #70	; 0x46
  400370:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  400372:	4629      	mov	r1, r5
  400374:	2047      	movs	r0, #71	; 0x47
  400376:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  400378:	4629      	mov	r1, r5
  40037a:	204b      	movs	r0, #75	; 0x4b
  40037c:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  40037e:	4629      	mov	r1, r5
  400380:	2048      	movs	r0, #72	; 0x48
  400382:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  400384:	4629      	mov	r1, r5
  400386:	204f      	movs	r0, #79	; 0x4f
  400388:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  40038a:	4629      	mov	r1, r5
  40038c:	2053      	movs	r0, #83	; 0x53
  40038e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400390:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400394:	204d      	movs	r0, #77	; 0x4d
  400396:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_ADS7843
	/* Configure Touchscreen SPI pins */
	gpio_configure_pin(BOARD_ADS7843_IRQ_GPIO,BOARD_ADS7843_IRQ_FLAGS);
  400398:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
  40039c:	4629      	mov	r1, r5
  40039e:	2010      	movs	r0, #16
  4003a0:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ADS7843_BUSY_GPIO, BOARD_ADS7843_BUSY_FLAGS);
  4003a2:	4629      	mov	r1, r5
  4003a4:	2011      	movs	r0, #17
  4003a6:	47a0      	blx	r4
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  4003a8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003ac:	200c      	movs	r0, #12
  4003ae:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4003b0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003b4:	200d      	movs	r0, #13
  4003b6:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4003b8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003bc:	200e      	movs	r0, #14
  4003be:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  4003c0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003c4:	200b      	movs	r0, #11
  4003c6:	47a0      	blx	r4
  4003c8:	bd38      	pop	{r3, r4, r5, pc}
  4003ca:	bf00      	nop
  4003cc:	400e1450 	.word	0x400e1450
  4003d0:	00400881 	.word	0x00400881
  4003d4:	004004fd 	.word	0x004004fd
  4003d8:	28000079 	.word	0x28000079
  4003dc:	28000059 	.word	0x28000059
  4003e0:	400e0e00 	.word	0x400e0e00
  4003e4:	0040061d 	.word	0x0040061d
  4003e8:	004004e1 	.word	0x004004e1
  4003ec:	08000001 	.word	0x08000001

004003f0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4003f0:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4003f2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4003f6:	d039      	beq.n	40046c <pio_set_peripheral+0x7c>
  4003f8:	d813      	bhi.n	400422 <pio_set_peripheral+0x32>
  4003fa:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4003fe:	d025      	beq.n	40044c <pio_set_peripheral+0x5c>
  400400:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400404:	d10a      	bne.n	40041c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400406:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400408:	4313      	orrs	r3, r2
  40040a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40040c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40040e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400410:	400b      	ands	r3, r1
  400412:	ea23 0302 	bic.w	r3, r3, r2
  400416:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400418:	6042      	str	r2, [r0, #4]
  40041a:	4770      	bx	lr
	switch (ul_type) {
  40041c:	2900      	cmp	r1, #0
  40041e:	d1fb      	bne.n	400418 <pio_set_peripheral+0x28>
  400420:	4770      	bx	lr
  400422:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400426:	d020      	beq.n	40046a <pio_set_peripheral+0x7a>
  400428:	d809      	bhi.n	40043e <pio_set_peripheral+0x4e>
  40042a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40042e:	d1f3      	bne.n	400418 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400430:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400432:	4313      	orrs	r3, r2
  400434:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400436:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400438:	4313      	orrs	r3, r2
  40043a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40043c:	e7ec      	b.n	400418 <pio_set_peripheral+0x28>
	switch (ul_type) {
  40043e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400442:	d012      	beq.n	40046a <pio_set_peripheral+0x7a>
  400444:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400448:	d00f      	beq.n	40046a <pio_set_peripheral+0x7a>
  40044a:	e7e5      	b.n	400418 <pio_set_peripheral+0x28>
{
  40044c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  40044e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400450:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400452:	43d3      	mvns	r3, r2
  400454:	4021      	ands	r1, r4
  400456:	461c      	mov	r4, r3
  400458:	4019      	ands	r1, r3
  40045a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40045c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40045e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400460:	400b      	ands	r3, r1
  400462:	4023      	ands	r3, r4
  400464:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400466:	6042      	str	r2, [r0, #4]
}
  400468:	bc10      	pop	{r4}
  40046a:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  40046c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40046e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400470:	400b      	ands	r3, r1
  400472:	ea23 0302 	bic.w	r3, r3, r2
  400476:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400478:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40047a:	4313      	orrs	r3, r2
  40047c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40047e:	e7cb      	b.n	400418 <pio_set_peripheral+0x28>

00400480 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400480:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400482:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400486:	bf14      	ite	ne
  400488:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40048a:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40048c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400490:	bf14      	ite	ne
  400492:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400494:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400496:	f012 0f02 	tst.w	r2, #2
  40049a:	d107      	bne.n	4004ac <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  40049c:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  4004a0:	bf18      	it	ne
  4004a2:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  4004a6:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  4004a8:	6001      	str	r1, [r0, #0]
  4004aa:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  4004ac:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  4004b0:	e7f9      	b.n	4004a6 <pio_set_input+0x26>

004004b2 <pio_set_output>:
{
  4004b2:	b410      	push	{r4}
  4004b4:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  4004b6:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4004b8:	b944      	cbnz	r4, 4004cc <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  4004ba:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  4004bc:	b143      	cbz	r3, 4004d0 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  4004be:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  4004c0:	b942      	cbnz	r2, 4004d4 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  4004c2:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4004c4:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  4004c6:	6001      	str	r1, [r0, #0]
}
  4004c8:	bc10      	pop	{r4}
  4004ca:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  4004cc:	6641      	str	r1, [r0, #100]	; 0x64
  4004ce:	e7f5      	b.n	4004bc <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  4004d0:	6541      	str	r1, [r0, #84]	; 0x54
  4004d2:	e7f5      	b.n	4004c0 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  4004d4:	6301      	str	r1, [r0, #48]	; 0x30
  4004d6:	e7f5      	b.n	4004c4 <pio_set_output+0x12>

004004d8 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4004d8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4004da:	4770      	bx	lr

004004dc <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4004dc:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4004de:	4770      	bx	lr

004004e0 <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4004e0:	0943      	lsrs	r3, r0, #5
  4004e2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4004e6:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4004ea:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  4004ec:	f000 001f 	and.w	r0, r0, #31
  4004f0:	2201      	movs	r2, #1
  4004f2:	fa02 f000 	lsl.w	r0, r2, r0
  4004f6:	6358      	str	r0, [r3, #52]	; 0x34
  4004f8:	4770      	bx	lr
	...

004004fc <pio_configure_pin>:
{
  4004fc:	b570      	push	{r4, r5, r6, lr}
  4004fe:	b082      	sub	sp, #8
  400500:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400502:	0943      	lsrs	r3, r0, #5
  400504:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400508:	f203 7307 	addw	r3, r3, #1799	; 0x707
  40050c:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  40050e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400512:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400516:	d053      	beq.n	4005c0 <pio_configure_pin+0xc4>
  400518:	d80a      	bhi.n	400530 <pio_configure_pin+0x34>
  40051a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40051e:	d02d      	beq.n	40057c <pio_configure_pin+0x80>
  400520:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400524:	d03b      	beq.n	40059e <pio_configure_pin+0xa2>
  400526:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40052a:	d015      	beq.n	400558 <pio_configure_pin+0x5c>
		return 0;
  40052c:	2000      	movs	r0, #0
  40052e:	e023      	b.n	400578 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400530:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400534:	d055      	beq.n	4005e2 <pio_configure_pin+0xe6>
  400536:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40053a:	d052      	beq.n	4005e2 <pio_configure_pin+0xe6>
  40053c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400540:	d1f4      	bne.n	40052c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400542:	f000 011f 	and.w	r1, r0, #31
  400546:	2601      	movs	r6, #1
  400548:	462a      	mov	r2, r5
  40054a:	fa06 f101 	lsl.w	r1, r6, r1
  40054e:	4620      	mov	r0, r4
  400550:	4b2f      	ldr	r3, [pc, #188]	; (400610 <pio_configure_pin+0x114>)
  400552:	4798      	blx	r3
	return 1;
  400554:	4630      	mov	r0, r6
		break;
  400556:	e00f      	b.n	400578 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400558:	f000 001f 	and.w	r0, r0, #31
  40055c:	2601      	movs	r6, #1
  40055e:	4086      	lsls	r6, r0
  400560:	4632      	mov	r2, r6
  400562:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400566:	4620      	mov	r0, r4
  400568:	4b2a      	ldr	r3, [pc, #168]	; (400614 <pio_configure_pin+0x118>)
  40056a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40056c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400570:	bf14      	ite	ne
  400572:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400574:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400576:	2001      	movs	r0, #1
}
  400578:	b002      	add	sp, #8
  40057a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40057c:	f000 001f 	and.w	r0, r0, #31
  400580:	2601      	movs	r6, #1
  400582:	4086      	lsls	r6, r0
  400584:	4632      	mov	r2, r6
  400586:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40058a:	4620      	mov	r0, r4
  40058c:	4b21      	ldr	r3, [pc, #132]	; (400614 <pio_configure_pin+0x118>)
  40058e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400590:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400594:	bf14      	ite	ne
  400596:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400598:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40059a:	2001      	movs	r0, #1
  40059c:	e7ec      	b.n	400578 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40059e:	f000 001f 	and.w	r0, r0, #31
  4005a2:	2601      	movs	r6, #1
  4005a4:	4086      	lsls	r6, r0
  4005a6:	4632      	mov	r2, r6
  4005a8:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4005ac:	4620      	mov	r0, r4
  4005ae:	4b19      	ldr	r3, [pc, #100]	; (400614 <pio_configure_pin+0x118>)
  4005b0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4005b2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4005b6:	bf14      	ite	ne
  4005b8:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4005ba:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4005bc:	2001      	movs	r0, #1
  4005be:	e7db      	b.n	400578 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4005c0:	f000 001f 	and.w	r0, r0, #31
  4005c4:	2601      	movs	r6, #1
  4005c6:	4086      	lsls	r6, r0
  4005c8:	4632      	mov	r2, r6
  4005ca:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4005ce:	4620      	mov	r0, r4
  4005d0:	4b10      	ldr	r3, [pc, #64]	; (400614 <pio_configure_pin+0x118>)
  4005d2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4005d4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4005d8:	bf14      	ite	ne
  4005da:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4005dc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4005de:	2001      	movs	r0, #1
  4005e0:	e7ca      	b.n	400578 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4005e2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4005e6:	f000 011f 	and.w	r1, r0, #31
  4005ea:	2601      	movs	r6, #1
  4005ec:	ea05 0306 	and.w	r3, r5, r6
  4005f0:	9300      	str	r3, [sp, #0]
  4005f2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4005f6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4005fa:	bf14      	ite	ne
  4005fc:	2200      	movne	r2, #0
  4005fe:	2201      	moveq	r2, #1
  400600:	fa06 f101 	lsl.w	r1, r6, r1
  400604:	4620      	mov	r0, r4
  400606:	4c04      	ldr	r4, [pc, #16]	; (400618 <pio_configure_pin+0x11c>)
  400608:	47a0      	blx	r4
	return 1;
  40060a:	4630      	mov	r0, r6
		break;
  40060c:	e7b4      	b.n	400578 <pio_configure_pin+0x7c>
  40060e:	bf00      	nop
  400610:	00400481 	.word	0x00400481
  400614:	004003f1 	.word	0x004003f1
  400618:	004004b3 	.word	0x004004b3

0040061c <pio_configure_pin_group>:
{
  40061c:	b570      	push	{r4, r5, r6, lr}
  40061e:	b082      	sub	sp, #8
  400620:	4605      	mov	r5, r0
  400622:	460e      	mov	r6, r1
  400624:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400626:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  40062a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40062e:	d03d      	beq.n	4006ac <pio_configure_pin_group+0x90>
  400630:	d80a      	bhi.n	400648 <pio_configure_pin_group+0x2c>
  400632:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400636:	d021      	beq.n	40067c <pio_configure_pin_group+0x60>
  400638:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40063c:	d02a      	beq.n	400694 <pio_configure_pin_group+0x78>
  40063e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400642:	d00e      	beq.n	400662 <pio_configure_pin_group+0x46>
		return 0;
  400644:	2000      	movs	r0, #0
  400646:	e017      	b.n	400678 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400648:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40064c:	d03a      	beq.n	4006c4 <pio_configure_pin_group+0xa8>
  40064e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400652:	d037      	beq.n	4006c4 <pio_configure_pin_group+0xa8>
  400654:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400658:	d1f4      	bne.n	400644 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  40065a:	4b23      	ldr	r3, [pc, #140]	; (4006e8 <pio_configure_pin_group+0xcc>)
  40065c:	4798      	blx	r3
	return 1;
  40065e:	2001      	movs	r0, #1
		break;
  400660:	e00a      	b.n	400678 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400662:	460a      	mov	r2, r1
  400664:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400668:	4b20      	ldr	r3, [pc, #128]	; (4006ec <pio_configure_pin_group+0xd0>)
  40066a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40066c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400670:	bf14      	ite	ne
  400672:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400674:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400676:	2001      	movs	r0, #1
}
  400678:	b002      	add	sp, #8
  40067a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  40067c:	460a      	mov	r2, r1
  40067e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400682:	4b1a      	ldr	r3, [pc, #104]	; (4006ec <pio_configure_pin_group+0xd0>)
  400684:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400686:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40068a:	bf14      	ite	ne
  40068c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40068e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400690:	2001      	movs	r0, #1
  400692:	e7f1      	b.n	400678 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400694:	460a      	mov	r2, r1
  400696:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40069a:	4b14      	ldr	r3, [pc, #80]	; (4006ec <pio_configure_pin_group+0xd0>)
  40069c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40069e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4006a2:	bf14      	ite	ne
  4006a4:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4006a6:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  4006a8:	2001      	movs	r0, #1
  4006aa:	e7e5      	b.n	400678 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  4006ac:	460a      	mov	r2, r1
  4006ae:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4006b2:	4b0e      	ldr	r3, [pc, #56]	; (4006ec <pio_configure_pin_group+0xd0>)
  4006b4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4006b6:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4006ba:	bf14      	ite	ne
  4006bc:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4006be:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  4006c0:	2001      	movs	r0, #1
  4006c2:	e7d9      	b.n	400678 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4006c4:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  4006c8:	f004 0301 	and.w	r3, r4, #1
  4006cc:	9300      	str	r3, [sp, #0]
  4006ce:	f3c4 0380 	ubfx	r3, r4, #2, #1
  4006d2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4006d6:	bf14      	ite	ne
  4006d8:	2200      	movne	r2, #0
  4006da:	2201      	moveq	r2, #1
  4006dc:	4631      	mov	r1, r6
  4006de:	4628      	mov	r0, r5
  4006e0:	4c03      	ldr	r4, [pc, #12]	; (4006f0 <pio_configure_pin_group+0xd4>)
  4006e2:	47a0      	blx	r4
	return 1;
  4006e4:	2001      	movs	r0, #1
		break;
  4006e6:	e7c7      	b.n	400678 <pio_configure_pin_group+0x5c>
  4006e8:	00400481 	.word	0x00400481
  4006ec:	004003f1 	.word	0x004003f1
  4006f0:	004004b3 	.word	0x004004b3

004006f4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4006f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006f8:	4681      	mov	r9, r0
  4006fa:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4006fc:	4b12      	ldr	r3, [pc, #72]	; (400748 <pio_handler_process+0x54>)
  4006fe:	4798      	blx	r3
  400700:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400702:	4648      	mov	r0, r9
  400704:	4b11      	ldr	r3, [pc, #68]	; (40074c <pio_handler_process+0x58>)
  400706:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400708:	4005      	ands	r5, r0
  40070a:	d013      	beq.n	400734 <pio_handler_process+0x40>
  40070c:	4c10      	ldr	r4, [pc, #64]	; (400750 <pio_handler_process+0x5c>)
  40070e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400712:	e003      	b.n	40071c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400714:	42b4      	cmp	r4, r6
  400716:	d00d      	beq.n	400734 <pio_handler_process+0x40>
  400718:	3410      	adds	r4, #16
		while (status != 0) {
  40071a:	b15d      	cbz	r5, 400734 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40071c:	6820      	ldr	r0, [r4, #0]
  40071e:	42b8      	cmp	r0, r7
  400720:	d1f8      	bne.n	400714 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400722:	6861      	ldr	r1, [r4, #4]
  400724:	4229      	tst	r1, r5
  400726:	d0f5      	beq.n	400714 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400728:	68e3      	ldr	r3, [r4, #12]
  40072a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40072c:	6863      	ldr	r3, [r4, #4]
  40072e:	ea25 0503 	bic.w	r5, r5, r3
  400732:	e7ef      	b.n	400714 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400734:	4b07      	ldr	r3, [pc, #28]	; (400754 <pio_handler_process+0x60>)
  400736:	681b      	ldr	r3, [r3, #0]
  400738:	b123      	cbz	r3, 400744 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40073a:	4b07      	ldr	r3, [pc, #28]	; (400758 <pio_handler_process+0x64>)
  40073c:	681b      	ldr	r3, [r3, #0]
  40073e:	b10b      	cbz	r3, 400744 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400740:	4648      	mov	r0, r9
  400742:	4798      	blx	r3
  400744:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400748:	004004d9 	.word	0x004004d9
  40074c:	004004dd 	.word	0x004004dd
  400750:	200009dc 	.word	0x200009dc
  400754:	20000a94 	.word	0x20000a94
  400758:	20000a4c 	.word	0x20000a4c

0040075c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  40075c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  40075e:	210b      	movs	r1, #11
  400760:	4801      	ldr	r0, [pc, #4]	; (400768 <PIOA_Handler+0xc>)
  400762:	4b02      	ldr	r3, [pc, #8]	; (40076c <PIOA_Handler+0x10>)
  400764:	4798      	blx	r3
  400766:	bd08      	pop	{r3, pc}
  400768:	400e0e00 	.word	0x400e0e00
  40076c:	004006f5 	.word	0x004006f5

00400770 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400770:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400772:	210c      	movs	r1, #12
  400774:	4801      	ldr	r0, [pc, #4]	; (40077c <PIOB_Handler+0xc>)
  400776:	4b02      	ldr	r3, [pc, #8]	; (400780 <PIOB_Handler+0x10>)
  400778:	4798      	blx	r3
  40077a:	bd08      	pop	{r3, pc}
  40077c:	400e1000 	.word	0x400e1000
  400780:	004006f5 	.word	0x004006f5

00400784 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400784:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400786:	210d      	movs	r1, #13
  400788:	4801      	ldr	r0, [pc, #4]	; (400790 <PIOC_Handler+0xc>)
  40078a:	4b02      	ldr	r3, [pc, #8]	; (400794 <PIOC_Handler+0x10>)
  40078c:	4798      	blx	r3
  40078e:	bd08      	pop	{r3, pc}
  400790:	400e1200 	.word	0x400e1200
  400794:	004006f5 	.word	0x004006f5

00400798 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400798:	4a17      	ldr	r2, [pc, #92]	; (4007f8 <pmc_switch_mck_to_pllack+0x60>)
  40079a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40079c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4007a0:	4318      	orrs	r0, r3
  4007a2:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4007a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4007a6:	f013 0f08 	tst.w	r3, #8
  4007aa:	d10a      	bne.n	4007c2 <pmc_switch_mck_to_pllack+0x2a>
  4007ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4007b0:	4911      	ldr	r1, [pc, #68]	; (4007f8 <pmc_switch_mck_to_pllack+0x60>)
  4007b2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4007b4:	f012 0f08 	tst.w	r2, #8
  4007b8:	d103      	bne.n	4007c2 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4007ba:	3b01      	subs	r3, #1
  4007bc:	d1f9      	bne.n	4007b2 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4007be:	2001      	movs	r0, #1
  4007c0:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4007c2:	4a0d      	ldr	r2, [pc, #52]	; (4007f8 <pmc_switch_mck_to_pllack+0x60>)
  4007c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4007c6:	f023 0303 	bic.w	r3, r3, #3
  4007ca:	f043 0302 	orr.w	r3, r3, #2
  4007ce:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4007d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4007d2:	f013 0f08 	tst.w	r3, #8
  4007d6:	d10a      	bne.n	4007ee <pmc_switch_mck_to_pllack+0x56>
  4007d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4007dc:	4906      	ldr	r1, [pc, #24]	; (4007f8 <pmc_switch_mck_to_pllack+0x60>)
  4007de:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4007e0:	f012 0f08 	tst.w	r2, #8
  4007e4:	d105      	bne.n	4007f2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4007e6:	3b01      	subs	r3, #1
  4007e8:	d1f9      	bne.n	4007de <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4007ea:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4007ec:	4770      	bx	lr
	return 0;
  4007ee:	2000      	movs	r0, #0
  4007f0:	4770      	bx	lr
  4007f2:	2000      	movs	r0, #0
  4007f4:	4770      	bx	lr
  4007f6:	bf00      	nop
  4007f8:	400e0400 	.word	0x400e0400

004007fc <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4007fc:	b9c8      	cbnz	r0, 400832 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4007fe:	4a11      	ldr	r2, [pc, #68]	; (400844 <pmc_switch_mainck_to_xtal+0x48>)
  400800:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400802:	0209      	lsls	r1, r1, #8
  400804:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400806:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40080a:	f023 0303 	bic.w	r3, r3, #3
  40080e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400812:	f043 0301 	orr.w	r3, r3, #1
  400816:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400818:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40081a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40081c:	f013 0f01 	tst.w	r3, #1
  400820:	d0fb      	beq.n	40081a <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400822:	4a08      	ldr	r2, [pc, #32]	; (400844 <pmc_switch_mainck_to_xtal+0x48>)
  400824:	6a13      	ldr	r3, [r2, #32]
  400826:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  40082a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40082e:	6213      	str	r3, [r2, #32]
  400830:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400832:	4904      	ldr	r1, [pc, #16]	; (400844 <pmc_switch_mainck_to_xtal+0x48>)
  400834:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400836:	4a04      	ldr	r2, [pc, #16]	; (400848 <pmc_switch_mainck_to_xtal+0x4c>)
  400838:	401a      	ands	r2, r3
  40083a:	4b04      	ldr	r3, [pc, #16]	; (40084c <pmc_switch_mainck_to_xtal+0x50>)
  40083c:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40083e:	620b      	str	r3, [r1, #32]
  400840:	4770      	bx	lr
  400842:	bf00      	nop
  400844:	400e0400 	.word	0x400e0400
  400848:	fec8fffc 	.word	0xfec8fffc
  40084c:	01370002 	.word	0x01370002

00400850 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400850:	4b02      	ldr	r3, [pc, #8]	; (40085c <pmc_osc_is_ready_mainck+0xc>)
  400852:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400854:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400858:	4770      	bx	lr
  40085a:	bf00      	nop
  40085c:	400e0400 	.word	0x400e0400

00400860 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400860:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400864:	4b01      	ldr	r3, [pc, #4]	; (40086c <pmc_disable_pllack+0xc>)
  400866:	629a      	str	r2, [r3, #40]	; 0x28
  400868:	4770      	bx	lr
  40086a:	bf00      	nop
  40086c:	400e0400 	.word	0x400e0400

00400870 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400870:	4b02      	ldr	r3, [pc, #8]	; (40087c <pmc_is_locked_pllack+0xc>)
  400872:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400874:	f000 0002 	and.w	r0, r0, #2
  400878:	4770      	bx	lr
  40087a:	bf00      	nop
  40087c:	400e0400 	.word	0x400e0400

00400880 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400880:	2822      	cmp	r0, #34	; 0x22
  400882:	d81e      	bhi.n	4008c2 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400884:	281f      	cmp	r0, #31
  400886:	d80c      	bhi.n	4008a2 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400888:	4b11      	ldr	r3, [pc, #68]	; (4008d0 <pmc_enable_periph_clk+0x50>)
  40088a:	699a      	ldr	r2, [r3, #24]
  40088c:	2301      	movs	r3, #1
  40088e:	4083      	lsls	r3, r0
  400890:	4393      	bics	r3, r2
  400892:	d018      	beq.n	4008c6 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400894:	2301      	movs	r3, #1
  400896:	fa03 f000 	lsl.w	r0, r3, r0
  40089a:	4b0d      	ldr	r3, [pc, #52]	; (4008d0 <pmc_enable_periph_clk+0x50>)
  40089c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40089e:	2000      	movs	r0, #0
  4008a0:	4770      	bx	lr
		ul_id -= 32;
  4008a2:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4008a4:	4b0a      	ldr	r3, [pc, #40]	; (4008d0 <pmc_enable_periph_clk+0x50>)
  4008a6:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4008aa:	2301      	movs	r3, #1
  4008ac:	4083      	lsls	r3, r0
  4008ae:	4393      	bics	r3, r2
  4008b0:	d00b      	beq.n	4008ca <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4008b2:	2301      	movs	r3, #1
  4008b4:	fa03 f000 	lsl.w	r0, r3, r0
  4008b8:	4b05      	ldr	r3, [pc, #20]	; (4008d0 <pmc_enable_periph_clk+0x50>)
  4008ba:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4008be:	2000      	movs	r0, #0
  4008c0:	4770      	bx	lr
		return 1;
  4008c2:	2001      	movs	r0, #1
  4008c4:	4770      	bx	lr
	return 0;
  4008c6:	2000      	movs	r0, #0
  4008c8:	4770      	bx	lr
  4008ca:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4008cc:	4770      	bx	lr
  4008ce:	bf00      	nop
  4008d0:	400e0400 	.word	0x400e0400

004008d4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4008d4:	e7fe      	b.n	4008d4 <Dummy_Handler>
	...

004008d8 <Reset_Handler>:
{
  4008d8:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4008da:	4b21      	ldr	r3, [pc, #132]	; (400960 <Reset_Handler+0x88>)
  4008dc:	4a21      	ldr	r2, [pc, #132]	; (400964 <Reset_Handler+0x8c>)
  4008de:	429a      	cmp	r2, r3
  4008e0:	d928      	bls.n	400934 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  4008e2:	4b21      	ldr	r3, [pc, #132]	; (400968 <Reset_Handler+0x90>)
  4008e4:	4a1e      	ldr	r2, [pc, #120]	; (400960 <Reset_Handler+0x88>)
  4008e6:	429a      	cmp	r2, r3
  4008e8:	d20c      	bcs.n	400904 <Reset_Handler+0x2c>
  4008ea:	3b01      	subs	r3, #1
  4008ec:	1a9b      	subs	r3, r3, r2
  4008ee:	f023 0303 	bic.w	r3, r3, #3
  4008f2:	3304      	adds	r3, #4
  4008f4:	4413      	add	r3, r2
  4008f6:	491b      	ldr	r1, [pc, #108]	; (400964 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  4008f8:	f851 0b04 	ldr.w	r0, [r1], #4
  4008fc:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  400900:	429a      	cmp	r2, r3
  400902:	d1f9      	bne.n	4008f8 <Reset_Handler+0x20>
	__NOP();
  400904:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  400906:	4b19      	ldr	r3, [pc, #100]	; (40096c <Reset_Handler+0x94>)
  400908:	4a19      	ldr	r2, [pc, #100]	; (400970 <Reset_Handler+0x98>)
  40090a:	429a      	cmp	r2, r3
  40090c:	d20a      	bcs.n	400924 <Reset_Handler+0x4c>
  40090e:	3b01      	subs	r3, #1
  400910:	1a9b      	subs	r3, r3, r2
  400912:	f023 0303 	bic.w	r3, r3, #3
  400916:	3304      	adds	r3, #4
  400918:	4413      	add	r3, r2
		*pDest++ = 0;
  40091a:	2100      	movs	r1, #0
  40091c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  400920:	429a      	cmp	r2, r3
  400922:	d1fb      	bne.n	40091c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  400924:	4b13      	ldr	r3, [pc, #76]	; (400974 <Reset_Handler+0x9c>)
  400926:	4a14      	ldr	r2, [pc, #80]	; (400978 <Reset_Handler+0xa0>)
  400928:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40092a:	4b14      	ldr	r3, [pc, #80]	; (40097c <Reset_Handler+0xa4>)
  40092c:	4798      	blx	r3
	main();
  40092e:	4b14      	ldr	r3, [pc, #80]	; (400980 <Reset_Handler+0xa8>)
  400930:	4798      	blx	r3
  400932:	e7fe      	b.n	400932 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  400934:	4b0a      	ldr	r3, [pc, #40]	; (400960 <Reset_Handler+0x88>)
  400936:	4a0b      	ldr	r2, [pc, #44]	; (400964 <Reset_Handler+0x8c>)
  400938:	429a      	cmp	r2, r3
  40093a:	d2e3      	bcs.n	400904 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40093c:	4b0a      	ldr	r3, [pc, #40]	; (400968 <Reset_Handler+0x90>)
  40093e:	4808      	ldr	r0, [pc, #32]	; (400960 <Reset_Handler+0x88>)
  400940:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400942:	4611      	mov	r1, r2
  400944:	3a04      	subs	r2, #4
  400946:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  400948:	2800      	cmp	r0, #0
  40094a:	d0db      	beq.n	400904 <Reset_Handler+0x2c>
  40094c:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  400950:	f852 0904 	ldr.w	r0, [r2], #-4
  400954:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  400958:	42ca      	cmn	r2, r1
  40095a:	d1f9      	bne.n	400950 <Reset_Handler+0x78>
  40095c:	e7d2      	b.n	400904 <Reset_Handler+0x2c>
  40095e:	bf00      	nop
  400960:	20000000 	.word	0x20000000
  400964:	00404178 	.word	0x00404178
  400968:	200009c0 	.word	0x200009c0
  40096c:	20000ac0 	.word	0x20000ac0
  400970:	200009c0 	.word	0x200009c0
  400974:	e000ed00 	.word	0xe000ed00
  400978:	00400000 	.word	0x00400000
  40097c:	00400dad 	.word	0x00400dad
  400980:	00400d19 	.word	0x00400d19

00400984 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  400984:	4b3c      	ldr	r3, [pc, #240]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  400986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400988:	f003 0303 	and.w	r3, r3, #3
  40098c:	2b03      	cmp	r3, #3
  40098e:	d80e      	bhi.n	4009ae <SystemCoreClockUpdate+0x2a>
  400990:	e8df f003 	tbb	[pc, r3]
  400994:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400998:	4b38      	ldr	r3, [pc, #224]	; (400a7c <SystemCoreClockUpdate+0xf8>)
  40099a:	695b      	ldr	r3, [r3, #20]
  40099c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4009a0:	bf14      	ite	ne
  4009a2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4009a6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4009aa:	4b35      	ldr	r3, [pc, #212]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  4009ac:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009ae:	4b32      	ldr	r3, [pc, #200]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  4009b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009b2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009b6:	2b70      	cmp	r3, #112	; 0x70
  4009b8:	d055      	beq.n	400a66 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009ba:	4b2f      	ldr	r3, [pc, #188]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  4009bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4009be:	4930      	ldr	r1, [pc, #192]	; (400a80 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009c0:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4009c4:	680b      	ldr	r3, [r1, #0]
  4009c6:	40d3      	lsrs	r3, r2
  4009c8:	600b      	str	r3, [r1, #0]
  4009ca:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4009cc:	4b2a      	ldr	r3, [pc, #168]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  4009ce:	6a1b      	ldr	r3, [r3, #32]
  4009d0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4009d4:	d003      	beq.n	4009de <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4009d6:	4a2b      	ldr	r2, [pc, #172]	; (400a84 <SystemCoreClockUpdate+0x100>)
  4009d8:	4b29      	ldr	r3, [pc, #164]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  4009da:	601a      	str	r2, [r3, #0]
  4009dc:	e7e7      	b.n	4009ae <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4009de:	4a2a      	ldr	r2, [pc, #168]	; (400a88 <SystemCoreClockUpdate+0x104>)
  4009e0:	4b27      	ldr	r3, [pc, #156]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  4009e2:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4009e4:	4b24      	ldr	r3, [pc, #144]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  4009e6:	6a1b      	ldr	r3, [r3, #32]
  4009e8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009ec:	2b10      	cmp	r3, #16
  4009ee:	d005      	beq.n	4009fc <SystemCoreClockUpdate+0x78>
  4009f0:	2b20      	cmp	r3, #32
  4009f2:	d1dc      	bne.n	4009ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4009f4:	4a23      	ldr	r2, [pc, #140]	; (400a84 <SystemCoreClockUpdate+0x100>)
  4009f6:	4b22      	ldr	r3, [pc, #136]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  4009f8:	601a      	str	r2, [r3, #0]
			break;
  4009fa:	e7d8      	b.n	4009ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4009fc:	4a23      	ldr	r2, [pc, #140]	; (400a8c <SystemCoreClockUpdate+0x108>)
  4009fe:	4b20      	ldr	r3, [pc, #128]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a00:	601a      	str	r2, [r3, #0]
			break;
  400a02:	e7d4      	b.n	4009ae <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400a04:	4b1c      	ldr	r3, [pc, #112]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  400a06:	6a1b      	ldr	r3, [r3, #32]
  400a08:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400a0c:	d018      	beq.n	400a40 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400a0e:	4a1d      	ldr	r2, [pc, #116]	; (400a84 <SystemCoreClockUpdate+0x100>)
  400a10:	4b1b      	ldr	r3, [pc, #108]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a12:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400a14:	4b18      	ldr	r3, [pc, #96]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  400a16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a18:	f003 0303 	and.w	r3, r3, #3
  400a1c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400a1e:	4a16      	ldr	r2, [pc, #88]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  400a20:	bf07      	ittee	eq
  400a22:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400a24:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400a26:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400a28:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  400a2a:	4815      	ldr	r0, [pc, #84]	; (400a80 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  400a2c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400a30:	6803      	ldr	r3, [r0, #0]
  400a32:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  400a36:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400a38:	fbb3 f3f2 	udiv	r3, r3, r2
  400a3c:	6003      	str	r3, [r0, #0]
  400a3e:	e7b6      	b.n	4009ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400a40:	4a11      	ldr	r2, [pc, #68]	; (400a88 <SystemCoreClockUpdate+0x104>)
  400a42:	4b0f      	ldr	r3, [pc, #60]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a44:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400a46:	4b0c      	ldr	r3, [pc, #48]	; (400a78 <SystemCoreClockUpdate+0xf4>)
  400a48:	6a1b      	ldr	r3, [r3, #32]
  400a4a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400a4e:	2b10      	cmp	r3, #16
  400a50:	d005      	beq.n	400a5e <SystemCoreClockUpdate+0xda>
  400a52:	2b20      	cmp	r3, #32
  400a54:	d1de      	bne.n	400a14 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400a56:	4a0b      	ldr	r2, [pc, #44]	; (400a84 <SystemCoreClockUpdate+0x100>)
  400a58:	4b09      	ldr	r3, [pc, #36]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a5a:	601a      	str	r2, [r3, #0]
					break;
  400a5c:	e7da      	b.n	400a14 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400a5e:	4a0b      	ldr	r2, [pc, #44]	; (400a8c <SystemCoreClockUpdate+0x108>)
  400a60:	4b07      	ldr	r3, [pc, #28]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a62:	601a      	str	r2, [r3, #0]
					break;
  400a64:	e7d6      	b.n	400a14 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400a66:	4a06      	ldr	r2, [pc, #24]	; (400a80 <SystemCoreClockUpdate+0xfc>)
  400a68:	6813      	ldr	r3, [r2, #0]
  400a6a:	4909      	ldr	r1, [pc, #36]	; (400a90 <SystemCoreClockUpdate+0x10c>)
  400a6c:	fba1 1303 	umull	r1, r3, r1, r3
  400a70:	085b      	lsrs	r3, r3, #1
  400a72:	6013      	str	r3, [r2, #0]
  400a74:	4770      	bx	lr
  400a76:	bf00      	nop
  400a78:	400e0400 	.word	0x400e0400
  400a7c:	400e1410 	.word	0x400e1410
  400a80:	20000000 	.word	0x20000000
  400a84:	00b71b00 	.word	0x00b71b00
  400a88:	003d0900 	.word	0x003d0900
  400a8c:	007a1200 	.word	0x007a1200
  400a90:	aaaaaaab 	.word	0xaaaaaaab

00400a94 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400a94:	4b1a      	ldr	r3, [pc, #104]	; (400b00 <system_init_flash+0x6c>)
  400a96:	4298      	cmp	r0, r3
  400a98:	d914      	bls.n	400ac4 <system_init_flash+0x30>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400a9a:	4b1a      	ldr	r3, [pc, #104]	; (400b04 <system_init_flash+0x70>)
  400a9c:	4298      	cmp	r0, r3
  400a9e:	d919      	bls.n	400ad4 <system_init_flash+0x40>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400aa0:	4b19      	ldr	r3, [pc, #100]	; (400b08 <system_init_flash+0x74>)
  400aa2:	4298      	cmp	r0, r3
  400aa4:	d91d      	bls.n	400ae2 <system_init_flash+0x4e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400aa6:	4b19      	ldr	r3, [pc, #100]	; (400b0c <system_init_flash+0x78>)
  400aa8:	4298      	cmp	r0, r3
  400aaa:	d921      	bls.n	400af0 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400aac:	4b18      	ldr	r3, [pc, #96]	; (400b10 <system_init_flash+0x7c>)
  400aae:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400ab0:	bf94      	ite	ls
  400ab2:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400ab6:	4b17      	ldrhi	r3, [pc, #92]	; (400b14 <system_init_flash+0x80>)
  400ab8:	4a17      	ldr	r2, [pc, #92]	; (400b18 <system_init_flash+0x84>)
  400aba:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400abc:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400ac0:	6013      	str	r3, [r2, #0]
  400ac2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400ac4:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400ac8:	4a13      	ldr	r2, [pc, #76]	; (400b18 <system_init_flash+0x84>)
  400aca:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400acc:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400ad0:	6013      	str	r3, [r2, #0]
  400ad2:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400ad4:	4b11      	ldr	r3, [pc, #68]	; (400b1c <system_init_flash+0x88>)
  400ad6:	4a10      	ldr	r2, [pc, #64]	; (400b18 <system_init_flash+0x84>)
  400ad8:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400ada:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400ade:	6013      	str	r3, [r2, #0]
  400ae0:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400ae2:	4b0f      	ldr	r3, [pc, #60]	; (400b20 <system_init_flash+0x8c>)
  400ae4:	4a0c      	ldr	r2, [pc, #48]	; (400b18 <system_init_flash+0x84>)
  400ae6:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400ae8:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400aec:	6013      	str	r3, [r2, #0]
  400aee:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400af0:	4b0c      	ldr	r3, [pc, #48]	; (400b24 <system_init_flash+0x90>)
  400af2:	4a09      	ldr	r2, [pc, #36]	; (400b18 <system_init_flash+0x84>)
  400af4:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400af6:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400afa:	6013      	str	r3, [r2, #0]
  400afc:	4770      	bx	lr
  400afe:	bf00      	nop
  400b00:	01312cff 	.word	0x01312cff
  400b04:	026259ff 	.word	0x026259ff
  400b08:	039386ff 	.word	0x039386ff
  400b0c:	04c4b3ff 	.word	0x04c4b3ff
  400b10:	05f5e0ff 	.word	0x05f5e0ff
  400b14:	04000500 	.word	0x04000500
  400b18:	400e0a00 	.word	0x400e0a00
  400b1c:	04000100 	.word	0x04000100
  400b20:	04000200 	.word	0x04000200
  400b24:	04000300 	.word	0x04000300

00400b28 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400b28:	4b0a      	ldr	r3, [pc, #40]	; (400b54 <_sbrk+0x2c>)
  400b2a:	681b      	ldr	r3, [r3, #0]
  400b2c:	b153      	cbz	r3, 400b44 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400b2e:	4b09      	ldr	r3, [pc, #36]	; (400b54 <_sbrk+0x2c>)
  400b30:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400b32:	181a      	adds	r2, r3, r0
  400b34:	4908      	ldr	r1, [pc, #32]	; (400b58 <_sbrk+0x30>)
  400b36:	4291      	cmp	r1, r2
  400b38:	db08      	blt.n	400b4c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400b3a:	4610      	mov	r0, r2
  400b3c:	4a05      	ldr	r2, [pc, #20]	; (400b54 <_sbrk+0x2c>)
  400b3e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400b40:	4618      	mov	r0, r3
  400b42:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400b44:	4a05      	ldr	r2, [pc, #20]	; (400b5c <_sbrk+0x34>)
  400b46:	4b03      	ldr	r3, [pc, #12]	; (400b54 <_sbrk+0x2c>)
  400b48:	601a      	str	r2, [r3, #0]
  400b4a:	e7f0      	b.n	400b2e <_sbrk+0x6>
		return (caddr_t) -1;	
  400b4c:	f04f 30ff 	mov.w	r0, #4294967295
}
  400b50:	4770      	bx	lr
  400b52:	bf00      	nop
  400b54:	20000a50 	.word	0x20000a50
  400b58:	20027ffc 	.word	0x20027ffc
  400b5c:	20003ac0 	.word	0x20003ac0

00400b60 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400b60:	f04f 30ff 	mov.w	r0, #4294967295
  400b64:	4770      	bx	lr

00400b66 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400b66:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400b6a:	604b      	str	r3, [r1, #4]

	return 0;
}
  400b6c:	2000      	movs	r0, #0
  400b6e:	4770      	bx	lr

00400b70 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400b70:	2001      	movs	r0, #1
  400b72:	4770      	bx	lr

00400b74 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400b74:	2000      	movs	r0, #0
  400b76:	4770      	bx	lr

00400b78 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400b78:	b5f0      	push	{r4, r5, r6, r7, lr}
  400b7a:	b083      	sub	sp, #12
  400b7c:	4605      	mov	r5, r0
  400b7e:	460c      	mov	r4, r1
	uint32_t val = 0;
  400b80:	2300      	movs	r3, #0
  400b82:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b84:	4b18      	ldr	r3, [pc, #96]	; (400be8 <usart_serial_getchar+0x70>)
  400b86:	4298      	cmp	r0, r3
  400b88:	d00a      	beq.n	400ba0 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b8a:	4b18      	ldr	r3, [pc, #96]	; (400bec <usart_serial_getchar+0x74>)
  400b8c:	4298      	cmp	r0, r3
  400b8e:	d00f      	beq.n	400bb0 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400b90:	4b17      	ldr	r3, [pc, #92]	; (400bf0 <usart_serial_getchar+0x78>)
  400b92:	4298      	cmp	r0, r3
  400b94:	d014      	beq.n	400bc0 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400b96:	4b17      	ldr	r3, [pc, #92]	; (400bf4 <usart_serial_getchar+0x7c>)
  400b98:	429d      	cmp	r5, r3
  400b9a:	d01b      	beq.n	400bd4 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400b9c:	b003      	add	sp, #12
  400b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400ba0:	461f      	mov	r7, r3
  400ba2:	4e15      	ldr	r6, [pc, #84]	; (400bf8 <usart_serial_getchar+0x80>)
  400ba4:	4621      	mov	r1, r4
  400ba6:	4638      	mov	r0, r7
  400ba8:	47b0      	blx	r6
  400baa:	2800      	cmp	r0, #0
  400bac:	d1fa      	bne.n	400ba4 <usart_serial_getchar+0x2c>
  400bae:	e7f2      	b.n	400b96 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400bb0:	461e      	mov	r6, r3
  400bb2:	4d11      	ldr	r5, [pc, #68]	; (400bf8 <usart_serial_getchar+0x80>)
  400bb4:	4621      	mov	r1, r4
  400bb6:	4630      	mov	r0, r6
  400bb8:	47a8      	blx	r5
  400bba:	2800      	cmp	r0, #0
  400bbc:	d1fa      	bne.n	400bb4 <usart_serial_getchar+0x3c>
  400bbe:	e7ed      	b.n	400b9c <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400bc0:	461e      	mov	r6, r3
  400bc2:	4d0e      	ldr	r5, [pc, #56]	; (400bfc <usart_serial_getchar+0x84>)
  400bc4:	a901      	add	r1, sp, #4
  400bc6:	4630      	mov	r0, r6
  400bc8:	47a8      	blx	r5
  400bca:	2800      	cmp	r0, #0
  400bcc:	d1fa      	bne.n	400bc4 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  400bce:	9b01      	ldr	r3, [sp, #4]
  400bd0:	7023      	strb	r3, [r4, #0]
  400bd2:	e7e3      	b.n	400b9c <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400bd4:	461e      	mov	r6, r3
  400bd6:	4d09      	ldr	r5, [pc, #36]	; (400bfc <usart_serial_getchar+0x84>)
  400bd8:	a901      	add	r1, sp, #4
  400bda:	4630      	mov	r0, r6
  400bdc:	47a8      	blx	r5
  400bde:	2800      	cmp	r0, #0
  400be0:	d1fa      	bne.n	400bd8 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  400be2:	9b01      	ldr	r3, [sp, #4]
  400be4:	7023      	strb	r3, [r4, #0]
}
  400be6:	e7d9      	b.n	400b9c <usart_serial_getchar+0x24>
  400be8:	400e0600 	.word	0x400e0600
  400bec:	400e0800 	.word	0x400e0800
  400bf0:	40024000 	.word	0x40024000
  400bf4:	40028000 	.word	0x40028000
  400bf8:	00400237 	.word	0x00400237
  400bfc:	00400189 	.word	0x00400189

00400c00 <usart_serial_putchar>:
{
  400c00:	b570      	push	{r4, r5, r6, lr}
  400c02:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400c04:	4b18      	ldr	r3, [pc, #96]	; (400c68 <usart_serial_putchar+0x68>)
  400c06:	4298      	cmp	r0, r3
  400c08:	d00a      	beq.n	400c20 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  400c0a:	4b18      	ldr	r3, [pc, #96]	; (400c6c <usart_serial_putchar+0x6c>)
  400c0c:	4298      	cmp	r0, r3
  400c0e:	d010      	beq.n	400c32 <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400c10:	4b17      	ldr	r3, [pc, #92]	; (400c70 <usart_serial_putchar+0x70>)
  400c12:	4298      	cmp	r0, r3
  400c14:	d016      	beq.n	400c44 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  400c16:	4b17      	ldr	r3, [pc, #92]	; (400c74 <usart_serial_putchar+0x74>)
  400c18:	4298      	cmp	r0, r3
  400c1a:	d01c      	beq.n	400c56 <usart_serial_putchar+0x56>
	return 0;
  400c1c:	2000      	movs	r0, #0
}
  400c1e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400c20:	461e      	mov	r6, r3
  400c22:	4d15      	ldr	r5, [pc, #84]	; (400c78 <usart_serial_putchar+0x78>)
  400c24:	4621      	mov	r1, r4
  400c26:	4630      	mov	r0, r6
  400c28:	47a8      	blx	r5
  400c2a:	2800      	cmp	r0, #0
  400c2c:	d1fa      	bne.n	400c24 <usart_serial_putchar+0x24>
		return 1;
  400c2e:	2001      	movs	r0, #1
  400c30:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400c32:	461e      	mov	r6, r3
  400c34:	4d10      	ldr	r5, [pc, #64]	; (400c78 <usart_serial_putchar+0x78>)
  400c36:	4621      	mov	r1, r4
  400c38:	4630      	mov	r0, r6
  400c3a:	47a8      	blx	r5
  400c3c:	2800      	cmp	r0, #0
  400c3e:	d1fa      	bne.n	400c36 <usart_serial_putchar+0x36>
		return 1;
  400c40:	2001      	movs	r0, #1
  400c42:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400c44:	461e      	mov	r6, r3
  400c46:	4d0d      	ldr	r5, [pc, #52]	; (400c7c <usart_serial_putchar+0x7c>)
  400c48:	4621      	mov	r1, r4
  400c4a:	4630      	mov	r0, r6
  400c4c:	47a8      	blx	r5
  400c4e:	2800      	cmp	r0, #0
  400c50:	d1fa      	bne.n	400c48 <usart_serial_putchar+0x48>
		return 1;
  400c52:	2001      	movs	r0, #1
  400c54:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400c56:	461e      	mov	r6, r3
  400c58:	4d08      	ldr	r5, [pc, #32]	; (400c7c <usart_serial_putchar+0x7c>)
  400c5a:	4621      	mov	r1, r4
  400c5c:	4630      	mov	r0, r6
  400c5e:	47a8      	blx	r5
  400c60:	2800      	cmp	r0, #0
  400c62:	d1fa      	bne.n	400c5a <usart_serial_putchar+0x5a>
		return 1;
  400c64:	2001      	movs	r0, #1
  400c66:	bd70      	pop	{r4, r5, r6, pc}
  400c68:	400e0600 	.word	0x400e0600
  400c6c:	400e0800 	.word	0x400e0800
  400c70:	40024000 	.word	0x40024000
  400c74:	40028000 	.word	0x40028000
  400c78:	00400227 	.word	0x00400227
  400c7c:	00400175 	.word	0x00400175

00400c80 <inicializacao_UART>:
#define USART_SERIAL_CHAR_LENGTH         US_MR_CHRL_8_BIT
#define USART_SERIAL_PARITY              US_MR_PAR_NO
#define USART_SERIAL_STOP_BIT            US_MR_NBSTOP_1_BIT
void inicializacao_UART(void);

void inicializacao_UART(){
  400c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c84:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400c86:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400d14 <inicializacao_UART+0x94>
  400c8a:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400c8e:	4c16      	ldr	r4, [pc, #88]	; (400ce8 <inicializacao_UART+0x68>)
  400c90:	6823      	ldr	r3, [r4, #0]
  400c92:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400c94:	68a3      	ldr	r3, [r4, #8]
  400c96:	9303      	str	r3, [sp, #12]
  400c98:	2008      	movs	r0, #8
  400c9a:	4f14      	ldr	r7, [pc, #80]	; (400cec <inicializacao_UART+0x6c>)
  400c9c:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400c9e:	4d14      	ldr	r5, [pc, #80]	; (400cf0 <inicializacao_UART+0x70>)
  400ca0:	a901      	add	r1, sp, #4
  400ca2:	4628      	mov	r0, r5
  400ca4:	4e13      	ldr	r6, [pc, #76]	; (400cf4 <inicializacao_UART+0x74>)
  400ca6:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400ca8:	4b13      	ldr	r3, [pc, #76]	; (400cf8 <inicializacao_UART+0x78>)
  400caa:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400cac:	4a13      	ldr	r2, [pc, #76]	; (400cfc <inicializacao_UART+0x7c>)
  400cae:	4b14      	ldr	r3, [pc, #80]	; (400d00 <inicializacao_UART+0x80>)
  400cb0:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400cb2:	4a14      	ldr	r2, [pc, #80]	; (400d04 <inicializacao_UART+0x84>)
  400cb4:	4b14      	ldr	r3, [pc, #80]	; (400d08 <inicializacao_UART+0x88>)
  400cb6:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400cb8:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400cbc:	6823      	ldr	r3, [r4, #0]
  400cbe:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400cc0:	68a3      	ldr	r3, [r4, #8]
  400cc2:	9303      	str	r3, [sp, #12]
  400cc4:	2008      	movs	r0, #8
  400cc6:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400cc8:	a901      	add	r1, sp, #4
  400cca:	4628      	mov	r0, r5
  400ccc:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400cce:	4d0f      	ldr	r5, [pc, #60]	; (400d0c <inicializacao_UART+0x8c>)
  400cd0:	682b      	ldr	r3, [r5, #0]
  400cd2:	2100      	movs	r1, #0
  400cd4:	6898      	ldr	r0, [r3, #8]
  400cd6:	4c0e      	ldr	r4, [pc, #56]	; (400d10 <inicializacao_UART+0x90>)
  400cd8:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400cda:	682b      	ldr	r3, [r5, #0]
  400cdc:	2100      	movs	r1, #0
  400cde:	6858      	ldr	r0, [r3, #4]
  400ce0:	47a0      	blx	r4
		.paritytype = USART_SERIAL_PARITY,
		.stopbits = USART_SERIAL_STOP_BIT
	};
	usart_serial_init(USART_SERIAL, &usart_options);
	stdio_serial_init(USART_SERIAL, &usart_options);
}
  400ce2:	b004      	add	sp, #16
  400ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ce8:	20000004 	.word	0x20000004
  400cec:	00400881 	.word	0x00400881
  400cf0:	400e0600 	.word	0x400e0600
  400cf4:	004001f1 	.word	0x004001f1
  400cf8:	20000a90 	.word	0x20000a90
  400cfc:	00400c01 	.word	0x00400c01
  400d00:	20000a8c 	.word	0x20000a8c
  400d04:	00400b79 	.word	0x00400b79
  400d08:	20000a88 	.word	0x20000a88
  400d0c:	20000014 	.word	0x20000014
  400d10:	00400fa1 	.word	0x00400fa1
  400d14:	07270e00 	.word	0x07270e00

00400d18 <main>:

int main (void){
  400d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* Insert system clock initialization code here (sysclk_init()). */
	unsigned char received_byte;
	sysclk_init();
  400d1a:	4b18      	ldr	r3, [pc, #96]	; (400d7c <main+0x64>)
  400d1c:	4798      	blx	r3
	board_init();
  400d1e:	4b18      	ldr	r3, [pc, #96]	; (400d80 <main+0x68>)
  400d20:	4798      	blx	r3
	/* Insert application code here, after the board has been initialized. */
	inicializacao_UART();
  400d22:	4b18      	ldr	r3, [pc, #96]	; (400d84 <main+0x6c>)
  400d24:	4798      	blx	r3
	puts("Ola serial\r");
  400d26:	4818      	ldr	r0, [pc, #96]	; (400d88 <main+0x70>)
  400d28:	4b18      	ldr	r3, [pc, #96]	; (400d8c <main+0x74>)
  400d2a:	4798      	blx	r3
	while(1){
		//usart_serial_getchar((Usart*)USART_SERIAL, &received_byte);
		//usart_serial_putchar((Usart*)USART_SERIAL, received_byte);
		received_byte = getchar();
  400d2c:	4c18      	ldr	r4, [pc, #96]	; (400d90 <main+0x78>)
  400d2e:	4e19      	ldr	r6, [pc, #100]	; (400d94 <main+0x7c>)
		switch(received_byte){
			case '1': 
				printf("Pressionou: %d, %c\n\r", received_byte,received_byte);
  400d30:	4d19      	ldr	r5, [pc, #100]	; (400d98 <main+0x80>)
  400d32:	e00a      	b.n	400d4a <main+0x32>
		received_byte = getchar();
  400d34:	6841      	ldr	r1, [r0, #4]
  400d36:	47b0      	blx	r6
  400d38:	b2c0      	uxtb	r0, r0
  400d3a:	e012      	b.n	400d62 <main+0x4a>
				printf("Pressionou: %d, %c\n\r", received_byte,received_byte);
  400d3c:	2231      	movs	r2, #49	; 0x31
  400d3e:	4611      	mov	r1, r2
  400d40:	4628      	mov	r0, r5
  400d42:	4f16      	ldr	r7, [pc, #88]	; (400d9c <main+0x84>)
  400d44:	47b8      	blx	r7
				printf("Valor OK\n\r");
  400d46:	4816      	ldr	r0, [pc, #88]	; (400da0 <main+0x88>)
  400d48:	47b8      	blx	r7
		received_byte = getchar();
  400d4a:	6820      	ldr	r0, [r4, #0]
  400d4c:	6842      	ldr	r2, [r0, #4]
  400d4e:	6853      	ldr	r3, [r2, #4]
  400d50:	3b01      	subs	r3, #1
  400d52:	6053      	str	r3, [r2, #4]
  400d54:	2b00      	cmp	r3, #0
  400d56:	dbed      	blt.n	400d34 <main+0x1c>
  400d58:	6842      	ldr	r2, [r0, #4]
  400d5a:	6813      	ldr	r3, [r2, #0]
  400d5c:	1c59      	adds	r1, r3, #1
  400d5e:	6011      	str	r1, [r2, #0]
  400d60:	7818      	ldrb	r0, [r3, #0]
		switch(received_byte){
  400d62:	2831      	cmp	r0, #49	; 0x31
  400d64:	d0ea      	beq.n	400d3c <main+0x24>
  400d66:	2832      	cmp	r0, #50	; 0x32
  400d68:	d003      	beq.n	400d72 <main+0x5a>
				break;
			case '2':
				printf("Pressionou: 2\n\r");
				break;
			default:
				printf("opcao errada!\n\r");
  400d6a:	480e      	ldr	r0, [pc, #56]	; (400da4 <main+0x8c>)
  400d6c:	4b0b      	ldr	r3, [pc, #44]	; (400d9c <main+0x84>)
  400d6e:	4798      	blx	r3
  400d70:	e7eb      	b.n	400d4a <main+0x32>
				printf("Pressionou: 2\n\r");
  400d72:	480d      	ldr	r0, [pc, #52]	; (400da8 <main+0x90>)
  400d74:	4b09      	ldr	r3, [pc, #36]	; (400d9c <main+0x84>)
  400d76:	4798      	blx	r3
				break;
  400d78:	e7e7      	b.n	400d4a <main+0x32>
  400d7a:	bf00      	nop
  400d7c:	00400249 	.word	0x00400249
  400d80:	004002ad 	.word	0x004002ad
  400d84:	00400c81 	.word	0x00400c81
  400d88:	00403f90 	.word	0x00403f90
  400d8c:	00400f5d 	.word	0x00400f5d
  400d90:	20000014 	.word	0x20000014
  400d94:	00400f6d 	.word	0x00400f6d
  400d98:	00403f9c 	.word	0x00403f9c
  400d9c:	00400dfd 	.word	0x00400dfd
  400da0:	00403fb4 	.word	0x00403fb4
  400da4:	00403fd0 	.word	0x00403fd0
  400da8:	00403fc0 	.word	0x00403fc0

00400dac <__libc_init_array>:
  400dac:	b570      	push	{r4, r5, r6, lr}
  400dae:	4e0f      	ldr	r6, [pc, #60]	; (400dec <__libc_init_array+0x40>)
  400db0:	4d0f      	ldr	r5, [pc, #60]	; (400df0 <__libc_init_array+0x44>)
  400db2:	1b76      	subs	r6, r6, r5
  400db4:	10b6      	asrs	r6, r6, #2
  400db6:	bf18      	it	ne
  400db8:	2400      	movne	r4, #0
  400dba:	d005      	beq.n	400dc8 <__libc_init_array+0x1c>
  400dbc:	3401      	adds	r4, #1
  400dbe:	f855 3b04 	ldr.w	r3, [r5], #4
  400dc2:	4798      	blx	r3
  400dc4:	42a6      	cmp	r6, r4
  400dc6:	d1f9      	bne.n	400dbc <__libc_init_array+0x10>
  400dc8:	4e0a      	ldr	r6, [pc, #40]	; (400df4 <__libc_init_array+0x48>)
  400dca:	4d0b      	ldr	r5, [pc, #44]	; (400df8 <__libc_init_array+0x4c>)
  400dcc:	1b76      	subs	r6, r6, r5
  400dce:	f003 f9bd 	bl	40414c <_init>
  400dd2:	10b6      	asrs	r6, r6, #2
  400dd4:	bf18      	it	ne
  400dd6:	2400      	movne	r4, #0
  400dd8:	d006      	beq.n	400de8 <__libc_init_array+0x3c>
  400dda:	3401      	adds	r4, #1
  400ddc:	f855 3b04 	ldr.w	r3, [r5], #4
  400de0:	4798      	blx	r3
  400de2:	42a6      	cmp	r6, r4
  400de4:	d1f9      	bne.n	400dda <__libc_init_array+0x2e>
  400de6:	bd70      	pop	{r4, r5, r6, pc}
  400de8:	bd70      	pop	{r4, r5, r6, pc}
  400dea:	bf00      	nop
  400dec:	00404158 	.word	0x00404158
  400df0:	00404158 	.word	0x00404158
  400df4:	00404160 	.word	0x00404160
  400df8:	00404158 	.word	0x00404158

00400dfc <iprintf>:
  400dfc:	b40f      	push	{r0, r1, r2, r3}
  400dfe:	b500      	push	{lr}
  400e00:	4907      	ldr	r1, [pc, #28]	; (400e20 <iprintf+0x24>)
  400e02:	b083      	sub	sp, #12
  400e04:	ab04      	add	r3, sp, #16
  400e06:	6808      	ldr	r0, [r1, #0]
  400e08:	f853 2b04 	ldr.w	r2, [r3], #4
  400e0c:	6881      	ldr	r1, [r0, #8]
  400e0e:	9301      	str	r3, [sp, #4]
  400e10:	f000 fa44 	bl	40129c <_vfiprintf_r>
  400e14:	b003      	add	sp, #12
  400e16:	f85d eb04 	ldr.w	lr, [sp], #4
  400e1a:	b004      	add	sp, #16
  400e1c:	4770      	bx	lr
  400e1e:	bf00      	nop
  400e20:	20000014 	.word	0x20000014

00400e24 <memset>:
  400e24:	b470      	push	{r4, r5, r6}
  400e26:	0786      	lsls	r6, r0, #30
  400e28:	d046      	beq.n	400eb8 <memset+0x94>
  400e2a:	1e54      	subs	r4, r2, #1
  400e2c:	2a00      	cmp	r2, #0
  400e2e:	d041      	beq.n	400eb4 <memset+0x90>
  400e30:	b2ca      	uxtb	r2, r1
  400e32:	4603      	mov	r3, r0
  400e34:	e002      	b.n	400e3c <memset+0x18>
  400e36:	f114 34ff 	adds.w	r4, r4, #4294967295
  400e3a:	d33b      	bcc.n	400eb4 <memset+0x90>
  400e3c:	f803 2b01 	strb.w	r2, [r3], #1
  400e40:	079d      	lsls	r5, r3, #30
  400e42:	d1f8      	bne.n	400e36 <memset+0x12>
  400e44:	2c03      	cmp	r4, #3
  400e46:	d92e      	bls.n	400ea6 <memset+0x82>
  400e48:	b2cd      	uxtb	r5, r1
  400e4a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  400e4e:	2c0f      	cmp	r4, #15
  400e50:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  400e54:	d919      	bls.n	400e8a <memset+0x66>
  400e56:	f103 0210 	add.w	r2, r3, #16
  400e5a:	4626      	mov	r6, r4
  400e5c:	3e10      	subs	r6, #16
  400e5e:	2e0f      	cmp	r6, #15
  400e60:	f842 5c10 	str.w	r5, [r2, #-16]
  400e64:	f842 5c0c 	str.w	r5, [r2, #-12]
  400e68:	f842 5c08 	str.w	r5, [r2, #-8]
  400e6c:	f842 5c04 	str.w	r5, [r2, #-4]
  400e70:	f102 0210 	add.w	r2, r2, #16
  400e74:	d8f2      	bhi.n	400e5c <memset+0x38>
  400e76:	f1a4 0210 	sub.w	r2, r4, #16
  400e7a:	f022 020f 	bic.w	r2, r2, #15
  400e7e:	f004 040f 	and.w	r4, r4, #15
  400e82:	3210      	adds	r2, #16
  400e84:	2c03      	cmp	r4, #3
  400e86:	4413      	add	r3, r2
  400e88:	d90d      	bls.n	400ea6 <memset+0x82>
  400e8a:	461e      	mov	r6, r3
  400e8c:	4622      	mov	r2, r4
  400e8e:	3a04      	subs	r2, #4
  400e90:	2a03      	cmp	r2, #3
  400e92:	f846 5b04 	str.w	r5, [r6], #4
  400e96:	d8fa      	bhi.n	400e8e <memset+0x6a>
  400e98:	1f22      	subs	r2, r4, #4
  400e9a:	f022 0203 	bic.w	r2, r2, #3
  400e9e:	3204      	adds	r2, #4
  400ea0:	4413      	add	r3, r2
  400ea2:	f004 0403 	and.w	r4, r4, #3
  400ea6:	b12c      	cbz	r4, 400eb4 <memset+0x90>
  400ea8:	b2c9      	uxtb	r1, r1
  400eaa:	441c      	add	r4, r3
  400eac:	f803 1b01 	strb.w	r1, [r3], #1
  400eb0:	429c      	cmp	r4, r3
  400eb2:	d1fb      	bne.n	400eac <memset+0x88>
  400eb4:	bc70      	pop	{r4, r5, r6}
  400eb6:	4770      	bx	lr
  400eb8:	4614      	mov	r4, r2
  400eba:	4603      	mov	r3, r0
  400ebc:	e7c2      	b.n	400e44 <memset+0x20>
  400ebe:	bf00      	nop

00400ec0 <_puts_r>:
  400ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
  400ec2:	4605      	mov	r5, r0
  400ec4:	b089      	sub	sp, #36	; 0x24
  400ec6:	4608      	mov	r0, r1
  400ec8:	460c      	mov	r4, r1
  400eca:	f000 f939 	bl	401140 <strlen>
  400ece:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400ed0:	4f21      	ldr	r7, [pc, #132]	; (400f58 <_puts_r+0x98>)
  400ed2:	9404      	str	r4, [sp, #16]
  400ed4:	2601      	movs	r6, #1
  400ed6:	1c44      	adds	r4, r0, #1
  400ed8:	a904      	add	r1, sp, #16
  400eda:	2202      	movs	r2, #2
  400edc:	9403      	str	r4, [sp, #12]
  400ede:	9005      	str	r0, [sp, #20]
  400ee0:	68ac      	ldr	r4, [r5, #8]
  400ee2:	9706      	str	r7, [sp, #24]
  400ee4:	9607      	str	r6, [sp, #28]
  400ee6:	9101      	str	r1, [sp, #4]
  400ee8:	9202      	str	r2, [sp, #8]
  400eea:	b353      	cbz	r3, 400f42 <_puts_r+0x82>
  400eec:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400eee:	f013 0f01 	tst.w	r3, #1
  400ef2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400ef6:	b29a      	uxth	r2, r3
  400ef8:	d101      	bne.n	400efe <_puts_r+0x3e>
  400efa:	0590      	lsls	r0, r2, #22
  400efc:	d525      	bpl.n	400f4a <_puts_r+0x8a>
  400efe:	0491      	lsls	r1, r2, #18
  400f00:	d406      	bmi.n	400f10 <_puts_r+0x50>
  400f02:	6e62      	ldr	r2, [r4, #100]	; 0x64
  400f04:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  400f08:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  400f0c:	81a3      	strh	r3, [r4, #12]
  400f0e:	6662      	str	r2, [r4, #100]	; 0x64
  400f10:	4628      	mov	r0, r5
  400f12:	aa01      	add	r2, sp, #4
  400f14:	4621      	mov	r1, r4
  400f16:	f001 fbd5 	bl	4026c4 <__sfvwrite_r>
  400f1a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400f1c:	2800      	cmp	r0, #0
  400f1e:	bf0c      	ite	eq
  400f20:	250a      	moveq	r5, #10
  400f22:	f04f 35ff 	movne.w	r5, #4294967295
  400f26:	07da      	lsls	r2, r3, #31
  400f28:	d402      	bmi.n	400f30 <_puts_r+0x70>
  400f2a:	89a3      	ldrh	r3, [r4, #12]
  400f2c:	059b      	lsls	r3, r3, #22
  400f2e:	d502      	bpl.n	400f36 <_puts_r+0x76>
  400f30:	4628      	mov	r0, r5
  400f32:	b009      	add	sp, #36	; 0x24
  400f34:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f36:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400f38:	f001 fda0 	bl	402a7c <__retarget_lock_release_recursive>
  400f3c:	4628      	mov	r0, r5
  400f3e:	b009      	add	sp, #36	; 0x24
  400f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f42:	4628      	mov	r0, r5
  400f44:	f001 f9b2 	bl	4022ac <__sinit>
  400f48:	e7d0      	b.n	400eec <_puts_r+0x2c>
  400f4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400f4c:	f001 fd94 	bl	402a78 <__retarget_lock_acquire_recursive>
  400f50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400f54:	b29a      	uxth	r2, r3
  400f56:	e7d2      	b.n	400efe <_puts_r+0x3e>
  400f58:	00403fe4 	.word	0x00403fe4

00400f5c <puts>:
  400f5c:	4b02      	ldr	r3, [pc, #8]	; (400f68 <puts+0xc>)
  400f5e:	4601      	mov	r1, r0
  400f60:	6818      	ldr	r0, [r3, #0]
  400f62:	f7ff bfad 	b.w	400ec0 <_puts_r>
  400f66:	bf00      	nop
  400f68:	20000014 	.word	0x20000014

00400f6c <__srget_r>:
  400f6c:	b538      	push	{r3, r4, r5, lr}
  400f6e:	460c      	mov	r4, r1
  400f70:	4605      	mov	r5, r0
  400f72:	b108      	cbz	r0, 400f78 <__srget_r+0xc>
  400f74:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400f76:	b163      	cbz	r3, 400f92 <__srget_r+0x26>
  400f78:	4628      	mov	r0, r5
  400f7a:	4621      	mov	r1, r4
  400f7c:	f002 fbd2 	bl	403724 <__srefill_r>
  400f80:	b950      	cbnz	r0, 400f98 <__srget_r+0x2c>
  400f82:	e894 000c 	ldmia.w	r4, {r2, r3}
  400f86:	3b01      	subs	r3, #1
  400f88:	1c51      	adds	r1, r2, #1
  400f8a:	e884 000a 	stmia.w	r4, {r1, r3}
  400f8e:	7810      	ldrb	r0, [r2, #0]
  400f90:	bd38      	pop	{r3, r4, r5, pc}
  400f92:	f001 f98b 	bl	4022ac <__sinit>
  400f96:	e7ef      	b.n	400f78 <__srget_r+0xc>
  400f98:	f04f 30ff 	mov.w	r0, #4294967295
  400f9c:	bd38      	pop	{r3, r4, r5, pc}
  400f9e:	bf00      	nop

00400fa0 <setbuf>:
  400fa0:	2900      	cmp	r1, #0
  400fa2:	bf0c      	ite	eq
  400fa4:	2202      	moveq	r2, #2
  400fa6:	2200      	movne	r2, #0
  400fa8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400fac:	f000 b800 	b.w	400fb0 <setvbuf>

00400fb0 <setvbuf>:
  400fb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400fb4:	4c61      	ldr	r4, [pc, #388]	; (40113c <setvbuf+0x18c>)
  400fb6:	6825      	ldr	r5, [r4, #0]
  400fb8:	b083      	sub	sp, #12
  400fba:	4604      	mov	r4, r0
  400fbc:	460f      	mov	r7, r1
  400fbe:	4690      	mov	r8, r2
  400fc0:	461e      	mov	r6, r3
  400fc2:	b115      	cbz	r5, 400fca <setvbuf+0x1a>
  400fc4:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400fc6:	2b00      	cmp	r3, #0
  400fc8:	d064      	beq.n	401094 <setvbuf+0xe4>
  400fca:	f1b8 0f02 	cmp.w	r8, #2
  400fce:	d006      	beq.n	400fde <setvbuf+0x2e>
  400fd0:	f1b8 0f01 	cmp.w	r8, #1
  400fd4:	f200 809f 	bhi.w	401116 <setvbuf+0x166>
  400fd8:	2e00      	cmp	r6, #0
  400fda:	f2c0 809c 	blt.w	401116 <setvbuf+0x166>
  400fde:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400fe0:	07d8      	lsls	r0, r3, #31
  400fe2:	d534      	bpl.n	40104e <setvbuf+0x9e>
  400fe4:	4621      	mov	r1, r4
  400fe6:	4628      	mov	r0, r5
  400fe8:	f001 f8f6 	bl	4021d8 <_fflush_r>
  400fec:	6b21      	ldr	r1, [r4, #48]	; 0x30
  400fee:	b141      	cbz	r1, 401002 <setvbuf+0x52>
  400ff0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  400ff4:	4299      	cmp	r1, r3
  400ff6:	d002      	beq.n	400ffe <setvbuf+0x4e>
  400ff8:	4628      	mov	r0, r5
  400ffa:	f001 fa7d 	bl	4024f8 <_free_r>
  400ffe:	2300      	movs	r3, #0
  401000:	6323      	str	r3, [r4, #48]	; 0x30
  401002:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401006:	2200      	movs	r2, #0
  401008:	61a2      	str	r2, [r4, #24]
  40100a:	6062      	str	r2, [r4, #4]
  40100c:	061a      	lsls	r2, r3, #24
  40100e:	d43a      	bmi.n	401086 <setvbuf+0xd6>
  401010:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  401014:	f023 0303 	bic.w	r3, r3, #3
  401018:	f1b8 0f02 	cmp.w	r8, #2
  40101c:	81a3      	strh	r3, [r4, #12]
  40101e:	d01d      	beq.n	40105c <setvbuf+0xac>
  401020:	ab01      	add	r3, sp, #4
  401022:	466a      	mov	r2, sp
  401024:	4621      	mov	r1, r4
  401026:	4628      	mov	r0, r5
  401028:	f001 fd2a 	bl	402a80 <__swhatbuf_r>
  40102c:	89a3      	ldrh	r3, [r4, #12]
  40102e:	4318      	orrs	r0, r3
  401030:	81a0      	strh	r0, [r4, #12]
  401032:	2e00      	cmp	r6, #0
  401034:	d132      	bne.n	40109c <setvbuf+0xec>
  401036:	9e00      	ldr	r6, [sp, #0]
  401038:	4630      	mov	r0, r6
  40103a:	f001 fd99 	bl	402b70 <malloc>
  40103e:	4607      	mov	r7, r0
  401040:	2800      	cmp	r0, #0
  401042:	d06b      	beq.n	40111c <setvbuf+0x16c>
  401044:	89a3      	ldrh	r3, [r4, #12]
  401046:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40104a:	81a3      	strh	r3, [r4, #12]
  40104c:	e028      	b.n	4010a0 <setvbuf+0xf0>
  40104e:	89a3      	ldrh	r3, [r4, #12]
  401050:	0599      	lsls	r1, r3, #22
  401052:	d4c7      	bmi.n	400fe4 <setvbuf+0x34>
  401054:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401056:	f001 fd0f 	bl	402a78 <__retarget_lock_acquire_recursive>
  40105a:	e7c3      	b.n	400fe4 <setvbuf+0x34>
  40105c:	2500      	movs	r5, #0
  40105e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  401060:	2600      	movs	r6, #0
  401062:	f104 0243 	add.w	r2, r4, #67	; 0x43
  401066:	f043 0302 	orr.w	r3, r3, #2
  40106a:	2001      	movs	r0, #1
  40106c:	60a6      	str	r6, [r4, #8]
  40106e:	07ce      	lsls	r6, r1, #31
  401070:	81a3      	strh	r3, [r4, #12]
  401072:	6022      	str	r2, [r4, #0]
  401074:	6122      	str	r2, [r4, #16]
  401076:	6160      	str	r0, [r4, #20]
  401078:	d401      	bmi.n	40107e <setvbuf+0xce>
  40107a:	0598      	lsls	r0, r3, #22
  40107c:	d53e      	bpl.n	4010fc <setvbuf+0x14c>
  40107e:	4628      	mov	r0, r5
  401080:	b003      	add	sp, #12
  401082:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401086:	6921      	ldr	r1, [r4, #16]
  401088:	4628      	mov	r0, r5
  40108a:	f001 fa35 	bl	4024f8 <_free_r>
  40108e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401092:	e7bd      	b.n	401010 <setvbuf+0x60>
  401094:	4628      	mov	r0, r5
  401096:	f001 f909 	bl	4022ac <__sinit>
  40109a:	e796      	b.n	400fca <setvbuf+0x1a>
  40109c:	2f00      	cmp	r7, #0
  40109e:	d0cb      	beq.n	401038 <setvbuf+0x88>
  4010a0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4010a2:	2b00      	cmp	r3, #0
  4010a4:	d033      	beq.n	40110e <setvbuf+0x15e>
  4010a6:	9b00      	ldr	r3, [sp, #0]
  4010a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4010ac:	6027      	str	r7, [r4, #0]
  4010ae:	429e      	cmp	r6, r3
  4010b0:	bf1c      	itt	ne
  4010b2:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  4010b6:	81a2      	strhne	r2, [r4, #12]
  4010b8:	f1b8 0f01 	cmp.w	r8, #1
  4010bc:	bf04      	itt	eq
  4010be:	f042 0201 	orreq.w	r2, r2, #1
  4010c2:	81a2      	strheq	r2, [r4, #12]
  4010c4:	b292      	uxth	r2, r2
  4010c6:	f012 0308 	ands.w	r3, r2, #8
  4010ca:	6127      	str	r7, [r4, #16]
  4010cc:	6166      	str	r6, [r4, #20]
  4010ce:	d00e      	beq.n	4010ee <setvbuf+0x13e>
  4010d0:	07d1      	lsls	r1, r2, #31
  4010d2:	d51a      	bpl.n	40110a <setvbuf+0x15a>
  4010d4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4010d6:	4276      	negs	r6, r6
  4010d8:	2300      	movs	r3, #0
  4010da:	f015 0501 	ands.w	r5, r5, #1
  4010de:	61a6      	str	r6, [r4, #24]
  4010e0:	60a3      	str	r3, [r4, #8]
  4010e2:	d009      	beq.n	4010f8 <setvbuf+0x148>
  4010e4:	2500      	movs	r5, #0
  4010e6:	4628      	mov	r0, r5
  4010e8:	b003      	add	sp, #12
  4010ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4010ee:	60a3      	str	r3, [r4, #8]
  4010f0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4010f2:	f015 0501 	ands.w	r5, r5, #1
  4010f6:	d1f5      	bne.n	4010e4 <setvbuf+0x134>
  4010f8:	0593      	lsls	r3, r2, #22
  4010fa:	d4c0      	bmi.n	40107e <setvbuf+0xce>
  4010fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4010fe:	f001 fcbd 	bl	402a7c <__retarget_lock_release_recursive>
  401102:	4628      	mov	r0, r5
  401104:	b003      	add	sp, #12
  401106:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40110a:	60a6      	str	r6, [r4, #8]
  40110c:	e7f0      	b.n	4010f0 <setvbuf+0x140>
  40110e:	4628      	mov	r0, r5
  401110:	f001 f8cc 	bl	4022ac <__sinit>
  401114:	e7c7      	b.n	4010a6 <setvbuf+0xf6>
  401116:	f04f 35ff 	mov.w	r5, #4294967295
  40111a:	e7b0      	b.n	40107e <setvbuf+0xce>
  40111c:	f8dd 9000 	ldr.w	r9, [sp]
  401120:	45b1      	cmp	r9, r6
  401122:	d004      	beq.n	40112e <setvbuf+0x17e>
  401124:	4648      	mov	r0, r9
  401126:	f001 fd23 	bl	402b70 <malloc>
  40112a:	4607      	mov	r7, r0
  40112c:	b920      	cbnz	r0, 401138 <setvbuf+0x188>
  40112e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401132:	f04f 35ff 	mov.w	r5, #4294967295
  401136:	e792      	b.n	40105e <setvbuf+0xae>
  401138:	464e      	mov	r6, r9
  40113a:	e783      	b.n	401044 <setvbuf+0x94>
  40113c:	20000014 	.word	0x20000014

00401140 <strlen>:
  401140:	f890 f000 	pld	[r0]
  401144:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401148:	f020 0107 	bic.w	r1, r0, #7
  40114c:	f06f 0c00 	mvn.w	ip, #0
  401150:	f010 0407 	ands.w	r4, r0, #7
  401154:	f891 f020 	pld	[r1, #32]
  401158:	f040 8049 	bne.w	4011ee <strlen+0xae>
  40115c:	f04f 0400 	mov.w	r4, #0
  401160:	f06f 0007 	mvn.w	r0, #7
  401164:	e9d1 2300 	ldrd	r2, r3, [r1]
  401168:	f891 f040 	pld	[r1, #64]	; 0x40
  40116c:	f100 0008 	add.w	r0, r0, #8
  401170:	fa82 f24c 	uadd8	r2, r2, ip
  401174:	faa4 f28c 	sel	r2, r4, ip
  401178:	fa83 f34c 	uadd8	r3, r3, ip
  40117c:	faa2 f38c 	sel	r3, r2, ip
  401180:	bb4b      	cbnz	r3, 4011d6 <strlen+0x96>
  401182:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401186:	fa82 f24c 	uadd8	r2, r2, ip
  40118a:	f100 0008 	add.w	r0, r0, #8
  40118e:	faa4 f28c 	sel	r2, r4, ip
  401192:	fa83 f34c 	uadd8	r3, r3, ip
  401196:	faa2 f38c 	sel	r3, r2, ip
  40119a:	b9e3      	cbnz	r3, 4011d6 <strlen+0x96>
  40119c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4011a0:	fa82 f24c 	uadd8	r2, r2, ip
  4011a4:	f100 0008 	add.w	r0, r0, #8
  4011a8:	faa4 f28c 	sel	r2, r4, ip
  4011ac:	fa83 f34c 	uadd8	r3, r3, ip
  4011b0:	faa2 f38c 	sel	r3, r2, ip
  4011b4:	b97b      	cbnz	r3, 4011d6 <strlen+0x96>
  4011b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4011ba:	f101 0120 	add.w	r1, r1, #32
  4011be:	fa82 f24c 	uadd8	r2, r2, ip
  4011c2:	f100 0008 	add.w	r0, r0, #8
  4011c6:	faa4 f28c 	sel	r2, r4, ip
  4011ca:	fa83 f34c 	uadd8	r3, r3, ip
  4011ce:	faa2 f38c 	sel	r3, r2, ip
  4011d2:	2b00      	cmp	r3, #0
  4011d4:	d0c6      	beq.n	401164 <strlen+0x24>
  4011d6:	2a00      	cmp	r2, #0
  4011d8:	bf04      	itt	eq
  4011da:	3004      	addeq	r0, #4
  4011dc:	461a      	moveq	r2, r3
  4011de:	ba12      	rev	r2, r2
  4011e0:	fab2 f282 	clz	r2, r2
  4011e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4011e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4011ec:	4770      	bx	lr
  4011ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4011f2:	f004 0503 	and.w	r5, r4, #3
  4011f6:	f1c4 0000 	rsb	r0, r4, #0
  4011fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4011fe:	f014 0f04 	tst.w	r4, #4
  401202:	f891 f040 	pld	[r1, #64]	; 0x40
  401206:	fa0c f505 	lsl.w	r5, ip, r5
  40120a:	ea62 0205 	orn	r2, r2, r5
  40120e:	bf1c      	itt	ne
  401210:	ea63 0305 	ornne	r3, r3, r5
  401214:	4662      	movne	r2, ip
  401216:	f04f 0400 	mov.w	r4, #0
  40121a:	e7a9      	b.n	401170 <strlen+0x30>

0040121c <__sprint_r.part.0>:
  40121c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401220:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401222:	049c      	lsls	r4, r3, #18
  401224:	4693      	mov	fp, r2
  401226:	d52f      	bpl.n	401288 <__sprint_r.part.0+0x6c>
  401228:	6893      	ldr	r3, [r2, #8]
  40122a:	6812      	ldr	r2, [r2, #0]
  40122c:	b353      	cbz	r3, 401284 <__sprint_r.part.0+0x68>
  40122e:	460e      	mov	r6, r1
  401230:	4607      	mov	r7, r0
  401232:	f102 0908 	add.w	r9, r2, #8
  401236:	e919 0420 	ldmdb	r9, {r5, sl}
  40123a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40123e:	d017      	beq.n	401270 <__sprint_r.part.0+0x54>
  401240:	3d04      	subs	r5, #4
  401242:	2400      	movs	r4, #0
  401244:	e001      	b.n	40124a <__sprint_r.part.0+0x2e>
  401246:	45a0      	cmp	r8, r4
  401248:	d010      	beq.n	40126c <__sprint_r.part.0+0x50>
  40124a:	4632      	mov	r2, r6
  40124c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401250:	4638      	mov	r0, r7
  401252:	f001 f8cd 	bl	4023f0 <_fputwc_r>
  401256:	1c43      	adds	r3, r0, #1
  401258:	f104 0401 	add.w	r4, r4, #1
  40125c:	d1f3      	bne.n	401246 <__sprint_r.part.0+0x2a>
  40125e:	2300      	movs	r3, #0
  401260:	f8cb 3008 	str.w	r3, [fp, #8]
  401264:	f8cb 3004 	str.w	r3, [fp, #4]
  401268:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40126c:	f8db 3008 	ldr.w	r3, [fp, #8]
  401270:	f02a 0a03 	bic.w	sl, sl, #3
  401274:	eba3 030a 	sub.w	r3, r3, sl
  401278:	f8cb 3008 	str.w	r3, [fp, #8]
  40127c:	f109 0908 	add.w	r9, r9, #8
  401280:	2b00      	cmp	r3, #0
  401282:	d1d8      	bne.n	401236 <__sprint_r.part.0+0x1a>
  401284:	2000      	movs	r0, #0
  401286:	e7ea      	b.n	40125e <__sprint_r.part.0+0x42>
  401288:	f001 fa1c 	bl	4026c4 <__sfvwrite_r>
  40128c:	2300      	movs	r3, #0
  40128e:	f8cb 3008 	str.w	r3, [fp, #8]
  401292:	f8cb 3004 	str.w	r3, [fp, #4]
  401296:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40129a:	bf00      	nop

0040129c <_vfiprintf_r>:
  40129c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4012a0:	b0ad      	sub	sp, #180	; 0xb4
  4012a2:	461d      	mov	r5, r3
  4012a4:	468b      	mov	fp, r1
  4012a6:	4690      	mov	r8, r2
  4012a8:	9307      	str	r3, [sp, #28]
  4012aa:	9006      	str	r0, [sp, #24]
  4012ac:	b118      	cbz	r0, 4012b6 <_vfiprintf_r+0x1a>
  4012ae:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4012b0:	2b00      	cmp	r3, #0
  4012b2:	f000 80f3 	beq.w	40149c <_vfiprintf_r+0x200>
  4012b6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4012ba:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4012be:	07df      	lsls	r7, r3, #31
  4012c0:	b281      	uxth	r1, r0
  4012c2:	d402      	bmi.n	4012ca <_vfiprintf_r+0x2e>
  4012c4:	058e      	lsls	r6, r1, #22
  4012c6:	f140 80fc 	bpl.w	4014c2 <_vfiprintf_r+0x226>
  4012ca:	048c      	lsls	r4, r1, #18
  4012cc:	d40a      	bmi.n	4012e4 <_vfiprintf_r+0x48>
  4012ce:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4012d2:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4012d6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4012da:	f8ab 100c 	strh.w	r1, [fp, #12]
  4012de:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4012e2:	b289      	uxth	r1, r1
  4012e4:	0708      	lsls	r0, r1, #28
  4012e6:	f140 80b3 	bpl.w	401450 <_vfiprintf_r+0x1b4>
  4012ea:	f8db 3010 	ldr.w	r3, [fp, #16]
  4012ee:	2b00      	cmp	r3, #0
  4012f0:	f000 80ae 	beq.w	401450 <_vfiprintf_r+0x1b4>
  4012f4:	f001 031a 	and.w	r3, r1, #26
  4012f8:	2b0a      	cmp	r3, #10
  4012fa:	f000 80b5 	beq.w	401468 <_vfiprintf_r+0x1cc>
  4012fe:	2300      	movs	r3, #0
  401300:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  401304:	930b      	str	r3, [sp, #44]	; 0x2c
  401306:	9311      	str	r3, [sp, #68]	; 0x44
  401308:	9310      	str	r3, [sp, #64]	; 0x40
  40130a:	9303      	str	r3, [sp, #12]
  40130c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  401310:	46ca      	mov	sl, r9
  401312:	f8cd b010 	str.w	fp, [sp, #16]
  401316:	f898 3000 	ldrb.w	r3, [r8]
  40131a:	4644      	mov	r4, r8
  40131c:	b1fb      	cbz	r3, 40135e <_vfiprintf_r+0xc2>
  40131e:	2b25      	cmp	r3, #37	; 0x25
  401320:	d102      	bne.n	401328 <_vfiprintf_r+0x8c>
  401322:	e01c      	b.n	40135e <_vfiprintf_r+0xc2>
  401324:	2b25      	cmp	r3, #37	; 0x25
  401326:	d003      	beq.n	401330 <_vfiprintf_r+0x94>
  401328:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40132c:	2b00      	cmp	r3, #0
  40132e:	d1f9      	bne.n	401324 <_vfiprintf_r+0x88>
  401330:	eba4 0508 	sub.w	r5, r4, r8
  401334:	b19d      	cbz	r5, 40135e <_vfiprintf_r+0xc2>
  401336:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401338:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40133a:	f8ca 8000 	str.w	r8, [sl]
  40133e:	3301      	adds	r3, #1
  401340:	442a      	add	r2, r5
  401342:	2b07      	cmp	r3, #7
  401344:	f8ca 5004 	str.w	r5, [sl, #4]
  401348:	9211      	str	r2, [sp, #68]	; 0x44
  40134a:	9310      	str	r3, [sp, #64]	; 0x40
  40134c:	dd7a      	ble.n	401444 <_vfiprintf_r+0x1a8>
  40134e:	2a00      	cmp	r2, #0
  401350:	f040 84b0 	bne.w	401cb4 <_vfiprintf_r+0xa18>
  401354:	9b03      	ldr	r3, [sp, #12]
  401356:	9210      	str	r2, [sp, #64]	; 0x40
  401358:	442b      	add	r3, r5
  40135a:	46ca      	mov	sl, r9
  40135c:	9303      	str	r3, [sp, #12]
  40135e:	7823      	ldrb	r3, [r4, #0]
  401360:	2b00      	cmp	r3, #0
  401362:	f000 83e0 	beq.w	401b26 <_vfiprintf_r+0x88a>
  401366:	2000      	movs	r0, #0
  401368:	f04f 0300 	mov.w	r3, #0
  40136c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401370:	f104 0801 	add.w	r8, r4, #1
  401374:	7862      	ldrb	r2, [r4, #1]
  401376:	4605      	mov	r5, r0
  401378:	4606      	mov	r6, r0
  40137a:	4603      	mov	r3, r0
  40137c:	f04f 34ff 	mov.w	r4, #4294967295
  401380:	f108 0801 	add.w	r8, r8, #1
  401384:	f1a2 0120 	sub.w	r1, r2, #32
  401388:	2958      	cmp	r1, #88	; 0x58
  40138a:	f200 82de 	bhi.w	40194a <_vfiprintf_r+0x6ae>
  40138e:	e8df f011 	tbh	[pc, r1, lsl #1]
  401392:	0221      	.short	0x0221
  401394:	02dc02dc 	.word	0x02dc02dc
  401398:	02dc0229 	.word	0x02dc0229
  40139c:	02dc02dc 	.word	0x02dc02dc
  4013a0:	02dc02dc 	.word	0x02dc02dc
  4013a4:	028902dc 	.word	0x028902dc
  4013a8:	02dc0295 	.word	0x02dc0295
  4013ac:	02bd00a2 	.word	0x02bd00a2
  4013b0:	019f02dc 	.word	0x019f02dc
  4013b4:	01a401a4 	.word	0x01a401a4
  4013b8:	01a401a4 	.word	0x01a401a4
  4013bc:	01a401a4 	.word	0x01a401a4
  4013c0:	01a401a4 	.word	0x01a401a4
  4013c4:	02dc01a4 	.word	0x02dc01a4
  4013c8:	02dc02dc 	.word	0x02dc02dc
  4013cc:	02dc02dc 	.word	0x02dc02dc
  4013d0:	02dc02dc 	.word	0x02dc02dc
  4013d4:	02dc02dc 	.word	0x02dc02dc
  4013d8:	01b202dc 	.word	0x01b202dc
  4013dc:	02dc02dc 	.word	0x02dc02dc
  4013e0:	02dc02dc 	.word	0x02dc02dc
  4013e4:	02dc02dc 	.word	0x02dc02dc
  4013e8:	02dc02dc 	.word	0x02dc02dc
  4013ec:	02dc02dc 	.word	0x02dc02dc
  4013f0:	02dc0197 	.word	0x02dc0197
  4013f4:	02dc02dc 	.word	0x02dc02dc
  4013f8:	02dc02dc 	.word	0x02dc02dc
  4013fc:	02dc019b 	.word	0x02dc019b
  401400:	025302dc 	.word	0x025302dc
  401404:	02dc02dc 	.word	0x02dc02dc
  401408:	02dc02dc 	.word	0x02dc02dc
  40140c:	02dc02dc 	.word	0x02dc02dc
  401410:	02dc02dc 	.word	0x02dc02dc
  401414:	02dc02dc 	.word	0x02dc02dc
  401418:	021b025a 	.word	0x021b025a
  40141c:	02dc02dc 	.word	0x02dc02dc
  401420:	026e02dc 	.word	0x026e02dc
  401424:	02dc021b 	.word	0x02dc021b
  401428:	027302dc 	.word	0x027302dc
  40142c:	01f502dc 	.word	0x01f502dc
  401430:	02090182 	.word	0x02090182
  401434:	02dc02d7 	.word	0x02dc02d7
  401438:	02dc029a 	.word	0x02dc029a
  40143c:	02dc00a7 	.word	0x02dc00a7
  401440:	022e02dc 	.word	0x022e02dc
  401444:	f10a 0a08 	add.w	sl, sl, #8
  401448:	9b03      	ldr	r3, [sp, #12]
  40144a:	442b      	add	r3, r5
  40144c:	9303      	str	r3, [sp, #12]
  40144e:	e786      	b.n	40135e <_vfiprintf_r+0xc2>
  401450:	4659      	mov	r1, fp
  401452:	9806      	ldr	r0, [sp, #24]
  401454:	f000 fdac 	bl	401fb0 <__swsetup_r>
  401458:	bb18      	cbnz	r0, 4014a2 <_vfiprintf_r+0x206>
  40145a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40145e:	f001 031a 	and.w	r3, r1, #26
  401462:	2b0a      	cmp	r3, #10
  401464:	f47f af4b 	bne.w	4012fe <_vfiprintf_r+0x62>
  401468:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40146c:	2b00      	cmp	r3, #0
  40146e:	f6ff af46 	blt.w	4012fe <_vfiprintf_r+0x62>
  401472:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401476:	07db      	lsls	r3, r3, #31
  401478:	d405      	bmi.n	401486 <_vfiprintf_r+0x1ea>
  40147a:	058f      	lsls	r7, r1, #22
  40147c:	d403      	bmi.n	401486 <_vfiprintf_r+0x1ea>
  40147e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401482:	f001 fafb 	bl	402a7c <__retarget_lock_release_recursive>
  401486:	462b      	mov	r3, r5
  401488:	4642      	mov	r2, r8
  40148a:	4659      	mov	r1, fp
  40148c:	9806      	ldr	r0, [sp, #24]
  40148e:	f000 fd4d 	bl	401f2c <__sbprintf>
  401492:	9003      	str	r0, [sp, #12]
  401494:	9803      	ldr	r0, [sp, #12]
  401496:	b02d      	add	sp, #180	; 0xb4
  401498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40149c:	f000 ff06 	bl	4022ac <__sinit>
  4014a0:	e709      	b.n	4012b6 <_vfiprintf_r+0x1a>
  4014a2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4014a6:	07d9      	lsls	r1, r3, #31
  4014a8:	d404      	bmi.n	4014b4 <_vfiprintf_r+0x218>
  4014aa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4014ae:	059a      	lsls	r2, r3, #22
  4014b0:	f140 84aa 	bpl.w	401e08 <_vfiprintf_r+0xb6c>
  4014b4:	f04f 33ff 	mov.w	r3, #4294967295
  4014b8:	9303      	str	r3, [sp, #12]
  4014ba:	9803      	ldr	r0, [sp, #12]
  4014bc:	b02d      	add	sp, #180	; 0xb4
  4014be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4014c2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4014c6:	f001 fad7 	bl	402a78 <__retarget_lock_acquire_recursive>
  4014ca:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4014ce:	b281      	uxth	r1, r0
  4014d0:	e6fb      	b.n	4012ca <_vfiprintf_r+0x2e>
  4014d2:	4276      	negs	r6, r6
  4014d4:	9207      	str	r2, [sp, #28]
  4014d6:	f043 0304 	orr.w	r3, r3, #4
  4014da:	f898 2000 	ldrb.w	r2, [r8]
  4014de:	e74f      	b.n	401380 <_vfiprintf_r+0xe4>
  4014e0:	9608      	str	r6, [sp, #32]
  4014e2:	069e      	lsls	r6, r3, #26
  4014e4:	f100 8450 	bmi.w	401d88 <_vfiprintf_r+0xaec>
  4014e8:	9907      	ldr	r1, [sp, #28]
  4014ea:	06dd      	lsls	r5, r3, #27
  4014ec:	460a      	mov	r2, r1
  4014ee:	f100 83ef 	bmi.w	401cd0 <_vfiprintf_r+0xa34>
  4014f2:	0658      	lsls	r0, r3, #25
  4014f4:	f140 83ec 	bpl.w	401cd0 <_vfiprintf_r+0xa34>
  4014f8:	880e      	ldrh	r6, [r1, #0]
  4014fa:	3104      	adds	r1, #4
  4014fc:	2700      	movs	r7, #0
  4014fe:	2201      	movs	r2, #1
  401500:	9107      	str	r1, [sp, #28]
  401502:	f04f 0100 	mov.w	r1, #0
  401506:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  40150a:	2500      	movs	r5, #0
  40150c:	1c61      	adds	r1, r4, #1
  40150e:	f000 8116 	beq.w	40173e <_vfiprintf_r+0x4a2>
  401512:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401516:	9102      	str	r1, [sp, #8]
  401518:	ea56 0107 	orrs.w	r1, r6, r7
  40151c:	f040 8114 	bne.w	401748 <_vfiprintf_r+0x4ac>
  401520:	2c00      	cmp	r4, #0
  401522:	f040 835c 	bne.w	401bde <_vfiprintf_r+0x942>
  401526:	2a00      	cmp	r2, #0
  401528:	f040 83b7 	bne.w	401c9a <_vfiprintf_r+0x9fe>
  40152c:	f013 0301 	ands.w	r3, r3, #1
  401530:	9305      	str	r3, [sp, #20]
  401532:	f000 8457 	beq.w	401de4 <_vfiprintf_r+0xb48>
  401536:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40153a:	2330      	movs	r3, #48	; 0x30
  40153c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  401540:	9b05      	ldr	r3, [sp, #20]
  401542:	42a3      	cmp	r3, r4
  401544:	bfb8      	it	lt
  401546:	4623      	movlt	r3, r4
  401548:	9301      	str	r3, [sp, #4]
  40154a:	b10d      	cbz	r5, 401550 <_vfiprintf_r+0x2b4>
  40154c:	3301      	adds	r3, #1
  40154e:	9301      	str	r3, [sp, #4]
  401550:	9b02      	ldr	r3, [sp, #8]
  401552:	f013 0302 	ands.w	r3, r3, #2
  401556:	9309      	str	r3, [sp, #36]	; 0x24
  401558:	d002      	beq.n	401560 <_vfiprintf_r+0x2c4>
  40155a:	9b01      	ldr	r3, [sp, #4]
  40155c:	3302      	adds	r3, #2
  40155e:	9301      	str	r3, [sp, #4]
  401560:	9b02      	ldr	r3, [sp, #8]
  401562:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401566:	930a      	str	r3, [sp, #40]	; 0x28
  401568:	f040 8217 	bne.w	40199a <_vfiprintf_r+0x6fe>
  40156c:	9b08      	ldr	r3, [sp, #32]
  40156e:	9a01      	ldr	r2, [sp, #4]
  401570:	1a9d      	subs	r5, r3, r2
  401572:	2d00      	cmp	r5, #0
  401574:	f340 8211 	ble.w	40199a <_vfiprintf_r+0x6fe>
  401578:	2d10      	cmp	r5, #16
  40157a:	f340 8490 	ble.w	401e9e <_vfiprintf_r+0xc02>
  40157e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401580:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401582:	4ec4      	ldr	r6, [pc, #784]	; (401894 <_vfiprintf_r+0x5f8>)
  401584:	46d6      	mov	lr, sl
  401586:	2710      	movs	r7, #16
  401588:	46a2      	mov	sl, r4
  40158a:	4619      	mov	r1, r3
  40158c:	9c06      	ldr	r4, [sp, #24]
  40158e:	e007      	b.n	4015a0 <_vfiprintf_r+0x304>
  401590:	f101 0c02 	add.w	ip, r1, #2
  401594:	f10e 0e08 	add.w	lr, lr, #8
  401598:	4601      	mov	r1, r0
  40159a:	3d10      	subs	r5, #16
  40159c:	2d10      	cmp	r5, #16
  40159e:	dd11      	ble.n	4015c4 <_vfiprintf_r+0x328>
  4015a0:	1c48      	adds	r0, r1, #1
  4015a2:	3210      	adds	r2, #16
  4015a4:	2807      	cmp	r0, #7
  4015a6:	9211      	str	r2, [sp, #68]	; 0x44
  4015a8:	e88e 00c0 	stmia.w	lr, {r6, r7}
  4015ac:	9010      	str	r0, [sp, #64]	; 0x40
  4015ae:	ddef      	ble.n	401590 <_vfiprintf_r+0x2f4>
  4015b0:	2a00      	cmp	r2, #0
  4015b2:	f040 81e4 	bne.w	40197e <_vfiprintf_r+0x6e2>
  4015b6:	3d10      	subs	r5, #16
  4015b8:	2d10      	cmp	r5, #16
  4015ba:	4611      	mov	r1, r2
  4015bc:	f04f 0c01 	mov.w	ip, #1
  4015c0:	46ce      	mov	lr, r9
  4015c2:	dced      	bgt.n	4015a0 <_vfiprintf_r+0x304>
  4015c4:	4654      	mov	r4, sl
  4015c6:	4661      	mov	r1, ip
  4015c8:	46f2      	mov	sl, lr
  4015ca:	442a      	add	r2, r5
  4015cc:	2907      	cmp	r1, #7
  4015ce:	9211      	str	r2, [sp, #68]	; 0x44
  4015d0:	f8ca 6000 	str.w	r6, [sl]
  4015d4:	f8ca 5004 	str.w	r5, [sl, #4]
  4015d8:	9110      	str	r1, [sp, #64]	; 0x40
  4015da:	f300 82ec 	bgt.w	401bb6 <_vfiprintf_r+0x91a>
  4015de:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4015e2:	f10a 0a08 	add.w	sl, sl, #8
  4015e6:	1c48      	adds	r0, r1, #1
  4015e8:	2d00      	cmp	r5, #0
  4015ea:	f040 81de 	bne.w	4019aa <_vfiprintf_r+0x70e>
  4015ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4015f0:	2b00      	cmp	r3, #0
  4015f2:	f000 81f8 	beq.w	4019e6 <_vfiprintf_r+0x74a>
  4015f6:	3202      	adds	r2, #2
  4015f8:	a90e      	add	r1, sp, #56	; 0x38
  4015fa:	2302      	movs	r3, #2
  4015fc:	2807      	cmp	r0, #7
  4015fe:	9211      	str	r2, [sp, #68]	; 0x44
  401600:	9010      	str	r0, [sp, #64]	; 0x40
  401602:	e88a 000a 	stmia.w	sl, {r1, r3}
  401606:	f340 81ea 	ble.w	4019de <_vfiprintf_r+0x742>
  40160a:	2a00      	cmp	r2, #0
  40160c:	f040 838c 	bne.w	401d28 <_vfiprintf_r+0xa8c>
  401610:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401612:	2b80      	cmp	r3, #128	; 0x80
  401614:	f04f 0001 	mov.w	r0, #1
  401618:	4611      	mov	r1, r2
  40161a:	46ca      	mov	sl, r9
  40161c:	f040 81e7 	bne.w	4019ee <_vfiprintf_r+0x752>
  401620:	9b08      	ldr	r3, [sp, #32]
  401622:	9d01      	ldr	r5, [sp, #4]
  401624:	1b5e      	subs	r6, r3, r5
  401626:	2e00      	cmp	r6, #0
  401628:	f340 81e1 	ble.w	4019ee <_vfiprintf_r+0x752>
  40162c:	2e10      	cmp	r6, #16
  40162e:	4d9a      	ldr	r5, [pc, #616]	; (401898 <_vfiprintf_r+0x5fc>)
  401630:	f340 8450 	ble.w	401ed4 <_vfiprintf_r+0xc38>
  401634:	46d4      	mov	ip, sl
  401636:	2710      	movs	r7, #16
  401638:	46a2      	mov	sl, r4
  40163a:	9c06      	ldr	r4, [sp, #24]
  40163c:	e007      	b.n	40164e <_vfiprintf_r+0x3b2>
  40163e:	f101 0e02 	add.w	lr, r1, #2
  401642:	f10c 0c08 	add.w	ip, ip, #8
  401646:	4601      	mov	r1, r0
  401648:	3e10      	subs	r6, #16
  40164a:	2e10      	cmp	r6, #16
  40164c:	dd11      	ble.n	401672 <_vfiprintf_r+0x3d6>
  40164e:	1c48      	adds	r0, r1, #1
  401650:	3210      	adds	r2, #16
  401652:	2807      	cmp	r0, #7
  401654:	9211      	str	r2, [sp, #68]	; 0x44
  401656:	e88c 00a0 	stmia.w	ip, {r5, r7}
  40165a:	9010      	str	r0, [sp, #64]	; 0x40
  40165c:	ddef      	ble.n	40163e <_vfiprintf_r+0x3a2>
  40165e:	2a00      	cmp	r2, #0
  401660:	f040 829d 	bne.w	401b9e <_vfiprintf_r+0x902>
  401664:	3e10      	subs	r6, #16
  401666:	2e10      	cmp	r6, #16
  401668:	f04f 0e01 	mov.w	lr, #1
  40166c:	4611      	mov	r1, r2
  40166e:	46cc      	mov	ip, r9
  401670:	dced      	bgt.n	40164e <_vfiprintf_r+0x3b2>
  401672:	4654      	mov	r4, sl
  401674:	46e2      	mov	sl, ip
  401676:	4432      	add	r2, r6
  401678:	f1be 0f07 	cmp.w	lr, #7
  40167c:	9211      	str	r2, [sp, #68]	; 0x44
  40167e:	e88a 0060 	stmia.w	sl, {r5, r6}
  401682:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401686:	f300 8369 	bgt.w	401d5c <_vfiprintf_r+0xac0>
  40168a:	f10a 0a08 	add.w	sl, sl, #8
  40168e:	f10e 0001 	add.w	r0, lr, #1
  401692:	4671      	mov	r1, lr
  401694:	e1ab      	b.n	4019ee <_vfiprintf_r+0x752>
  401696:	9608      	str	r6, [sp, #32]
  401698:	f013 0220 	ands.w	r2, r3, #32
  40169c:	f040 838c 	bne.w	401db8 <_vfiprintf_r+0xb1c>
  4016a0:	f013 0110 	ands.w	r1, r3, #16
  4016a4:	f040 831a 	bne.w	401cdc <_vfiprintf_r+0xa40>
  4016a8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  4016ac:	f000 8316 	beq.w	401cdc <_vfiprintf_r+0xa40>
  4016b0:	9807      	ldr	r0, [sp, #28]
  4016b2:	460a      	mov	r2, r1
  4016b4:	4601      	mov	r1, r0
  4016b6:	3104      	adds	r1, #4
  4016b8:	8806      	ldrh	r6, [r0, #0]
  4016ba:	9107      	str	r1, [sp, #28]
  4016bc:	2700      	movs	r7, #0
  4016be:	e720      	b.n	401502 <_vfiprintf_r+0x266>
  4016c0:	9608      	str	r6, [sp, #32]
  4016c2:	f043 0310 	orr.w	r3, r3, #16
  4016c6:	e7e7      	b.n	401698 <_vfiprintf_r+0x3fc>
  4016c8:	9608      	str	r6, [sp, #32]
  4016ca:	f043 0310 	orr.w	r3, r3, #16
  4016ce:	e708      	b.n	4014e2 <_vfiprintf_r+0x246>
  4016d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4016d4:	f898 2000 	ldrb.w	r2, [r8]
  4016d8:	e652      	b.n	401380 <_vfiprintf_r+0xe4>
  4016da:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4016de:	2600      	movs	r6, #0
  4016e0:	f818 2b01 	ldrb.w	r2, [r8], #1
  4016e4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4016e8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  4016ec:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4016f0:	2909      	cmp	r1, #9
  4016f2:	d9f5      	bls.n	4016e0 <_vfiprintf_r+0x444>
  4016f4:	e646      	b.n	401384 <_vfiprintf_r+0xe8>
  4016f6:	9608      	str	r6, [sp, #32]
  4016f8:	2800      	cmp	r0, #0
  4016fa:	f040 8408 	bne.w	401f0e <_vfiprintf_r+0xc72>
  4016fe:	f043 0310 	orr.w	r3, r3, #16
  401702:	069e      	lsls	r6, r3, #26
  401704:	f100 834c 	bmi.w	401da0 <_vfiprintf_r+0xb04>
  401708:	06dd      	lsls	r5, r3, #27
  40170a:	f100 82f3 	bmi.w	401cf4 <_vfiprintf_r+0xa58>
  40170e:	0658      	lsls	r0, r3, #25
  401710:	f140 82f0 	bpl.w	401cf4 <_vfiprintf_r+0xa58>
  401714:	9d07      	ldr	r5, [sp, #28]
  401716:	f9b5 6000 	ldrsh.w	r6, [r5]
  40171a:	462a      	mov	r2, r5
  40171c:	17f7      	asrs	r7, r6, #31
  40171e:	3204      	adds	r2, #4
  401720:	4630      	mov	r0, r6
  401722:	4639      	mov	r1, r7
  401724:	9207      	str	r2, [sp, #28]
  401726:	2800      	cmp	r0, #0
  401728:	f171 0200 	sbcs.w	r2, r1, #0
  40172c:	f2c0 835d 	blt.w	401dea <_vfiprintf_r+0xb4e>
  401730:	1c61      	adds	r1, r4, #1
  401732:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401736:	f04f 0201 	mov.w	r2, #1
  40173a:	f47f aeea 	bne.w	401512 <_vfiprintf_r+0x276>
  40173e:	ea56 0107 	orrs.w	r1, r6, r7
  401742:	f000 824d 	beq.w	401be0 <_vfiprintf_r+0x944>
  401746:	9302      	str	r3, [sp, #8]
  401748:	2a01      	cmp	r2, #1
  40174a:	f000 828c 	beq.w	401c66 <_vfiprintf_r+0x9ca>
  40174e:	2a02      	cmp	r2, #2
  401750:	f040 825c 	bne.w	401c0c <_vfiprintf_r+0x970>
  401754:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401756:	46cb      	mov	fp, r9
  401758:	0933      	lsrs	r3, r6, #4
  40175a:	f006 010f 	and.w	r1, r6, #15
  40175e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401762:	093a      	lsrs	r2, r7, #4
  401764:	461e      	mov	r6, r3
  401766:	4617      	mov	r7, r2
  401768:	5c43      	ldrb	r3, [r0, r1]
  40176a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40176e:	ea56 0307 	orrs.w	r3, r6, r7
  401772:	d1f1      	bne.n	401758 <_vfiprintf_r+0x4bc>
  401774:	eba9 030b 	sub.w	r3, r9, fp
  401778:	9305      	str	r3, [sp, #20]
  40177a:	e6e1      	b.n	401540 <_vfiprintf_r+0x2a4>
  40177c:	2800      	cmp	r0, #0
  40177e:	f040 83c0 	bne.w	401f02 <_vfiprintf_r+0xc66>
  401782:	0699      	lsls	r1, r3, #26
  401784:	f100 8367 	bmi.w	401e56 <_vfiprintf_r+0xbba>
  401788:	06da      	lsls	r2, r3, #27
  40178a:	f100 80f1 	bmi.w	401970 <_vfiprintf_r+0x6d4>
  40178e:	065b      	lsls	r3, r3, #25
  401790:	f140 80ee 	bpl.w	401970 <_vfiprintf_r+0x6d4>
  401794:	9a07      	ldr	r2, [sp, #28]
  401796:	6813      	ldr	r3, [r2, #0]
  401798:	3204      	adds	r2, #4
  40179a:	9207      	str	r2, [sp, #28]
  40179c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  4017a0:	801a      	strh	r2, [r3, #0]
  4017a2:	e5b8      	b.n	401316 <_vfiprintf_r+0x7a>
  4017a4:	9807      	ldr	r0, [sp, #28]
  4017a6:	4a3d      	ldr	r2, [pc, #244]	; (40189c <_vfiprintf_r+0x600>)
  4017a8:	9608      	str	r6, [sp, #32]
  4017aa:	920b      	str	r2, [sp, #44]	; 0x2c
  4017ac:	6806      	ldr	r6, [r0, #0]
  4017ae:	2278      	movs	r2, #120	; 0x78
  4017b0:	2130      	movs	r1, #48	; 0x30
  4017b2:	3004      	adds	r0, #4
  4017b4:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4017b8:	f043 0302 	orr.w	r3, r3, #2
  4017bc:	9007      	str	r0, [sp, #28]
  4017be:	2700      	movs	r7, #0
  4017c0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4017c4:	2202      	movs	r2, #2
  4017c6:	e69c      	b.n	401502 <_vfiprintf_r+0x266>
  4017c8:	9608      	str	r6, [sp, #32]
  4017ca:	2800      	cmp	r0, #0
  4017cc:	d099      	beq.n	401702 <_vfiprintf_r+0x466>
  4017ce:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4017d2:	e796      	b.n	401702 <_vfiprintf_r+0x466>
  4017d4:	f898 2000 	ldrb.w	r2, [r8]
  4017d8:	2d00      	cmp	r5, #0
  4017da:	f47f add1 	bne.w	401380 <_vfiprintf_r+0xe4>
  4017de:	2001      	movs	r0, #1
  4017e0:	2520      	movs	r5, #32
  4017e2:	e5cd      	b.n	401380 <_vfiprintf_r+0xe4>
  4017e4:	f043 0301 	orr.w	r3, r3, #1
  4017e8:	f898 2000 	ldrb.w	r2, [r8]
  4017ec:	e5c8      	b.n	401380 <_vfiprintf_r+0xe4>
  4017ee:	9608      	str	r6, [sp, #32]
  4017f0:	2800      	cmp	r0, #0
  4017f2:	f040 8393 	bne.w	401f1c <_vfiprintf_r+0xc80>
  4017f6:	4929      	ldr	r1, [pc, #164]	; (40189c <_vfiprintf_r+0x600>)
  4017f8:	910b      	str	r1, [sp, #44]	; 0x2c
  4017fa:	069f      	lsls	r7, r3, #26
  4017fc:	f100 82e8 	bmi.w	401dd0 <_vfiprintf_r+0xb34>
  401800:	9807      	ldr	r0, [sp, #28]
  401802:	06de      	lsls	r6, r3, #27
  401804:	4601      	mov	r1, r0
  401806:	f100 8270 	bmi.w	401cea <_vfiprintf_r+0xa4e>
  40180a:	065d      	lsls	r5, r3, #25
  40180c:	f140 826d 	bpl.w	401cea <_vfiprintf_r+0xa4e>
  401810:	3104      	adds	r1, #4
  401812:	8806      	ldrh	r6, [r0, #0]
  401814:	9107      	str	r1, [sp, #28]
  401816:	2700      	movs	r7, #0
  401818:	07d8      	lsls	r0, r3, #31
  40181a:	f140 8222 	bpl.w	401c62 <_vfiprintf_r+0x9c6>
  40181e:	ea56 0107 	orrs.w	r1, r6, r7
  401822:	f000 821e 	beq.w	401c62 <_vfiprintf_r+0x9c6>
  401826:	2130      	movs	r1, #48	; 0x30
  401828:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  40182c:	f043 0302 	orr.w	r3, r3, #2
  401830:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401834:	2202      	movs	r2, #2
  401836:	e664      	b.n	401502 <_vfiprintf_r+0x266>
  401838:	9608      	str	r6, [sp, #32]
  40183a:	2800      	cmp	r0, #0
  40183c:	f040 836b 	bne.w	401f16 <_vfiprintf_r+0xc7a>
  401840:	4917      	ldr	r1, [pc, #92]	; (4018a0 <_vfiprintf_r+0x604>)
  401842:	910b      	str	r1, [sp, #44]	; 0x2c
  401844:	e7d9      	b.n	4017fa <_vfiprintf_r+0x55e>
  401846:	9907      	ldr	r1, [sp, #28]
  401848:	9608      	str	r6, [sp, #32]
  40184a:	680a      	ldr	r2, [r1, #0]
  40184c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401850:	f04f 0000 	mov.w	r0, #0
  401854:	460a      	mov	r2, r1
  401856:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  40185a:	3204      	adds	r2, #4
  40185c:	2001      	movs	r0, #1
  40185e:	9001      	str	r0, [sp, #4]
  401860:	9207      	str	r2, [sp, #28]
  401862:	9005      	str	r0, [sp, #20]
  401864:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401868:	9302      	str	r3, [sp, #8]
  40186a:	2400      	movs	r4, #0
  40186c:	e670      	b.n	401550 <_vfiprintf_r+0x2b4>
  40186e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401872:	f898 2000 	ldrb.w	r2, [r8]
  401876:	e583      	b.n	401380 <_vfiprintf_r+0xe4>
  401878:	f898 2000 	ldrb.w	r2, [r8]
  40187c:	2a6c      	cmp	r2, #108	; 0x6c
  40187e:	bf03      	ittte	eq
  401880:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  401884:	f043 0320 	orreq.w	r3, r3, #32
  401888:	f108 0801 	addeq.w	r8, r8, #1
  40188c:	f043 0310 	orrne.w	r3, r3, #16
  401890:	e576      	b.n	401380 <_vfiprintf_r+0xe4>
  401892:	bf00      	nop
  401894:	00404018 	.word	0x00404018
  401898:	00404028 	.word	0x00404028
  40189c:	00403ffc 	.word	0x00403ffc
  4018a0:	00403fe8 	.word	0x00403fe8
  4018a4:	9907      	ldr	r1, [sp, #28]
  4018a6:	680e      	ldr	r6, [r1, #0]
  4018a8:	460a      	mov	r2, r1
  4018aa:	2e00      	cmp	r6, #0
  4018ac:	f102 0204 	add.w	r2, r2, #4
  4018b0:	f6ff ae0f 	blt.w	4014d2 <_vfiprintf_r+0x236>
  4018b4:	9207      	str	r2, [sp, #28]
  4018b6:	f898 2000 	ldrb.w	r2, [r8]
  4018ba:	e561      	b.n	401380 <_vfiprintf_r+0xe4>
  4018bc:	f898 2000 	ldrb.w	r2, [r8]
  4018c0:	2001      	movs	r0, #1
  4018c2:	252b      	movs	r5, #43	; 0x2b
  4018c4:	e55c      	b.n	401380 <_vfiprintf_r+0xe4>
  4018c6:	9907      	ldr	r1, [sp, #28]
  4018c8:	9608      	str	r6, [sp, #32]
  4018ca:	f8d1 b000 	ldr.w	fp, [r1]
  4018ce:	f04f 0200 	mov.w	r2, #0
  4018d2:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4018d6:	1d0e      	adds	r6, r1, #4
  4018d8:	f1bb 0f00 	cmp.w	fp, #0
  4018dc:	f000 82e5 	beq.w	401eaa <_vfiprintf_r+0xc0e>
  4018e0:	1c67      	adds	r7, r4, #1
  4018e2:	f000 82c4 	beq.w	401e6e <_vfiprintf_r+0xbd2>
  4018e6:	4622      	mov	r2, r4
  4018e8:	2100      	movs	r1, #0
  4018ea:	4658      	mov	r0, fp
  4018ec:	9301      	str	r3, [sp, #4]
  4018ee:	f001 fc0f 	bl	403110 <memchr>
  4018f2:	9b01      	ldr	r3, [sp, #4]
  4018f4:	2800      	cmp	r0, #0
  4018f6:	f000 82e5 	beq.w	401ec4 <_vfiprintf_r+0xc28>
  4018fa:	eba0 020b 	sub.w	r2, r0, fp
  4018fe:	9205      	str	r2, [sp, #20]
  401900:	9607      	str	r6, [sp, #28]
  401902:	9302      	str	r3, [sp, #8]
  401904:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401908:	2400      	movs	r4, #0
  40190a:	e619      	b.n	401540 <_vfiprintf_r+0x2a4>
  40190c:	f898 2000 	ldrb.w	r2, [r8]
  401910:	2a2a      	cmp	r2, #42	; 0x2a
  401912:	f108 0701 	add.w	r7, r8, #1
  401916:	f000 82e9 	beq.w	401eec <_vfiprintf_r+0xc50>
  40191a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40191e:	2909      	cmp	r1, #9
  401920:	46b8      	mov	r8, r7
  401922:	f04f 0400 	mov.w	r4, #0
  401926:	f63f ad2d 	bhi.w	401384 <_vfiprintf_r+0xe8>
  40192a:	f818 2b01 	ldrb.w	r2, [r8], #1
  40192e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401932:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  401936:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40193a:	2909      	cmp	r1, #9
  40193c:	d9f5      	bls.n	40192a <_vfiprintf_r+0x68e>
  40193e:	e521      	b.n	401384 <_vfiprintf_r+0xe8>
  401940:	f043 0320 	orr.w	r3, r3, #32
  401944:	f898 2000 	ldrb.w	r2, [r8]
  401948:	e51a      	b.n	401380 <_vfiprintf_r+0xe4>
  40194a:	9608      	str	r6, [sp, #32]
  40194c:	2800      	cmp	r0, #0
  40194e:	f040 82db 	bne.w	401f08 <_vfiprintf_r+0xc6c>
  401952:	2a00      	cmp	r2, #0
  401954:	f000 80e7 	beq.w	401b26 <_vfiprintf_r+0x88a>
  401958:	2101      	movs	r1, #1
  40195a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40195e:	f04f 0200 	mov.w	r2, #0
  401962:	9101      	str	r1, [sp, #4]
  401964:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401968:	9105      	str	r1, [sp, #20]
  40196a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40196e:	e77b      	b.n	401868 <_vfiprintf_r+0x5cc>
  401970:	9a07      	ldr	r2, [sp, #28]
  401972:	6813      	ldr	r3, [r2, #0]
  401974:	3204      	adds	r2, #4
  401976:	9207      	str	r2, [sp, #28]
  401978:	9a03      	ldr	r2, [sp, #12]
  40197a:	601a      	str	r2, [r3, #0]
  40197c:	e4cb      	b.n	401316 <_vfiprintf_r+0x7a>
  40197e:	aa0f      	add	r2, sp, #60	; 0x3c
  401980:	9904      	ldr	r1, [sp, #16]
  401982:	4620      	mov	r0, r4
  401984:	f7ff fc4a 	bl	40121c <__sprint_r.part.0>
  401988:	2800      	cmp	r0, #0
  40198a:	f040 8139 	bne.w	401c00 <_vfiprintf_r+0x964>
  40198e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401990:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401992:	f101 0c01 	add.w	ip, r1, #1
  401996:	46ce      	mov	lr, r9
  401998:	e5ff      	b.n	40159a <_vfiprintf_r+0x2fe>
  40199a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40199c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40199e:	1c48      	adds	r0, r1, #1
  4019a0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4019a4:	2d00      	cmp	r5, #0
  4019a6:	f43f ae22 	beq.w	4015ee <_vfiprintf_r+0x352>
  4019aa:	3201      	adds	r2, #1
  4019ac:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  4019b0:	2101      	movs	r1, #1
  4019b2:	2807      	cmp	r0, #7
  4019b4:	9211      	str	r2, [sp, #68]	; 0x44
  4019b6:	9010      	str	r0, [sp, #64]	; 0x40
  4019b8:	f8ca 5000 	str.w	r5, [sl]
  4019bc:	f8ca 1004 	str.w	r1, [sl, #4]
  4019c0:	f340 8108 	ble.w	401bd4 <_vfiprintf_r+0x938>
  4019c4:	2a00      	cmp	r2, #0
  4019c6:	f040 81bc 	bne.w	401d42 <_vfiprintf_r+0xaa6>
  4019ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4019cc:	2b00      	cmp	r3, #0
  4019ce:	f43f ae1f 	beq.w	401610 <_vfiprintf_r+0x374>
  4019d2:	ab0e      	add	r3, sp, #56	; 0x38
  4019d4:	2202      	movs	r2, #2
  4019d6:	4608      	mov	r0, r1
  4019d8:	931c      	str	r3, [sp, #112]	; 0x70
  4019da:	921d      	str	r2, [sp, #116]	; 0x74
  4019dc:	46ca      	mov	sl, r9
  4019de:	4601      	mov	r1, r0
  4019e0:	f10a 0a08 	add.w	sl, sl, #8
  4019e4:	3001      	adds	r0, #1
  4019e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4019e8:	2b80      	cmp	r3, #128	; 0x80
  4019ea:	f43f ae19 	beq.w	401620 <_vfiprintf_r+0x384>
  4019ee:	9b05      	ldr	r3, [sp, #20]
  4019f0:	1ae4      	subs	r4, r4, r3
  4019f2:	2c00      	cmp	r4, #0
  4019f4:	dd2e      	ble.n	401a54 <_vfiprintf_r+0x7b8>
  4019f6:	2c10      	cmp	r4, #16
  4019f8:	4db3      	ldr	r5, [pc, #716]	; (401cc8 <_vfiprintf_r+0xa2c>)
  4019fa:	dd1e      	ble.n	401a3a <_vfiprintf_r+0x79e>
  4019fc:	46d6      	mov	lr, sl
  4019fe:	2610      	movs	r6, #16
  401a00:	9f06      	ldr	r7, [sp, #24]
  401a02:	f8dd a010 	ldr.w	sl, [sp, #16]
  401a06:	e006      	b.n	401a16 <_vfiprintf_r+0x77a>
  401a08:	1c88      	adds	r0, r1, #2
  401a0a:	f10e 0e08 	add.w	lr, lr, #8
  401a0e:	4619      	mov	r1, r3
  401a10:	3c10      	subs	r4, #16
  401a12:	2c10      	cmp	r4, #16
  401a14:	dd10      	ble.n	401a38 <_vfiprintf_r+0x79c>
  401a16:	1c4b      	adds	r3, r1, #1
  401a18:	3210      	adds	r2, #16
  401a1a:	2b07      	cmp	r3, #7
  401a1c:	9211      	str	r2, [sp, #68]	; 0x44
  401a1e:	e88e 0060 	stmia.w	lr, {r5, r6}
  401a22:	9310      	str	r3, [sp, #64]	; 0x40
  401a24:	ddf0      	ble.n	401a08 <_vfiprintf_r+0x76c>
  401a26:	2a00      	cmp	r2, #0
  401a28:	d165      	bne.n	401af6 <_vfiprintf_r+0x85a>
  401a2a:	3c10      	subs	r4, #16
  401a2c:	2c10      	cmp	r4, #16
  401a2e:	f04f 0001 	mov.w	r0, #1
  401a32:	4611      	mov	r1, r2
  401a34:	46ce      	mov	lr, r9
  401a36:	dcee      	bgt.n	401a16 <_vfiprintf_r+0x77a>
  401a38:	46f2      	mov	sl, lr
  401a3a:	4422      	add	r2, r4
  401a3c:	2807      	cmp	r0, #7
  401a3e:	9211      	str	r2, [sp, #68]	; 0x44
  401a40:	f8ca 5000 	str.w	r5, [sl]
  401a44:	f8ca 4004 	str.w	r4, [sl, #4]
  401a48:	9010      	str	r0, [sp, #64]	; 0x40
  401a4a:	f300 8085 	bgt.w	401b58 <_vfiprintf_r+0x8bc>
  401a4e:	f10a 0a08 	add.w	sl, sl, #8
  401a52:	3001      	adds	r0, #1
  401a54:	9905      	ldr	r1, [sp, #20]
  401a56:	f8ca b000 	str.w	fp, [sl]
  401a5a:	440a      	add	r2, r1
  401a5c:	2807      	cmp	r0, #7
  401a5e:	9211      	str	r2, [sp, #68]	; 0x44
  401a60:	f8ca 1004 	str.w	r1, [sl, #4]
  401a64:	9010      	str	r0, [sp, #64]	; 0x40
  401a66:	f340 8082 	ble.w	401b6e <_vfiprintf_r+0x8d2>
  401a6a:	2a00      	cmp	r2, #0
  401a6c:	f040 8118 	bne.w	401ca0 <_vfiprintf_r+0xa04>
  401a70:	9b02      	ldr	r3, [sp, #8]
  401a72:	9210      	str	r2, [sp, #64]	; 0x40
  401a74:	0758      	lsls	r0, r3, #29
  401a76:	d535      	bpl.n	401ae4 <_vfiprintf_r+0x848>
  401a78:	9b08      	ldr	r3, [sp, #32]
  401a7a:	9901      	ldr	r1, [sp, #4]
  401a7c:	1a5c      	subs	r4, r3, r1
  401a7e:	2c00      	cmp	r4, #0
  401a80:	f340 80e7 	ble.w	401c52 <_vfiprintf_r+0x9b6>
  401a84:	46ca      	mov	sl, r9
  401a86:	2c10      	cmp	r4, #16
  401a88:	f340 8218 	ble.w	401ebc <_vfiprintf_r+0xc20>
  401a8c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401a8e:	4e8f      	ldr	r6, [pc, #572]	; (401ccc <_vfiprintf_r+0xa30>)
  401a90:	9f06      	ldr	r7, [sp, #24]
  401a92:	f8dd b010 	ldr.w	fp, [sp, #16]
  401a96:	2510      	movs	r5, #16
  401a98:	e006      	b.n	401aa8 <_vfiprintf_r+0x80c>
  401a9a:	1c88      	adds	r0, r1, #2
  401a9c:	f10a 0a08 	add.w	sl, sl, #8
  401aa0:	4619      	mov	r1, r3
  401aa2:	3c10      	subs	r4, #16
  401aa4:	2c10      	cmp	r4, #16
  401aa6:	dd11      	ble.n	401acc <_vfiprintf_r+0x830>
  401aa8:	1c4b      	adds	r3, r1, #1
  401aaa:	3210      	adds	r2, #16
  401aac:	2b07      	cmp	r3, #7
  401aae:	9211      	str	r2, [sp, #68]	; 0x44
  401ab0:	f8ca 6000 	str.w	r6, [sl]
  401ab4:	f8ca 5004 	str.w	r5, [sl, #4]
  401ab8:	9310      	str	r3, [sp, #64]	; 0x40
  401aba:	ddee      	ble.n	401a9a <_vfiprintf_r+0x7fe>
  401abc:	bb42      	cbnz	r2, 401b10 <_vfiprintf_r+0x874>
  401abe:	3c10      	subs	r4, #16
  401ac0:	2c10      	cmp	r4, #16
  401ac2:	f04f 0001 	mov.w	r0, #1
  401ac6:	4611      	mov	r1, r2
  401ac8:	46ca      	mov	sl, r9
  401aca:	dced      	bgt.n	401aa8 <_vfiprintf_r+0x80c>
  401acc:	4422      	add	r2, r4
  401ace:	2807      	cmp	r0, #7
  401ad0:	9211      	str	r2, [sp, #68]	; 0x44
  401ad2:	f8ca 6000 	str.w	r6, [sl]
  401ad6:	f8ca 4004 	str.w	r4, [sl, #4]
  401ada:	9010      	str	r0, [sp, #64]	; 0x40
  401adc:	dd51      	ble.n	401b82 <_vfiprintf_r+0x8e6>
  401ade:	2a00      	cmp	r2, #0
  401ae0:	f040 819b 	bne.w	401e1a <_vfiprintf_r+0xb7e>
  401ae4:	9b03      	ldr	r3, [sp, #12]
  401ae6:	9a08      	ldr	r2, [sp, #32]
  401ae8:	9901      	ldr	r1, [sp, #4]
  401aea:	428a      	cmp	r2, r1
  401aec:	bfac      	ite	ge
  401aee:	189b      	addge	r3, r3, r2
  401af0:	185b      	addlt	r3, r3, r1
  401af2:	9303      	str	r3, [sp, #12]
  401af4:	e04e      	b.n	401b94 <_vfiprintf_r+0x8f8>
  401af6:	aa0f      	add	r2, sp, #60	; 0x3c
  401af8:	4651      	mov	r1, sl
  401afa:	4638      	mov	r0, r7
  401afc:	f7ff fb8e 	bl	40121c <__sprint_r.part.0>
  401b00:	2800      	cmp	r0, #0
  401b02:	f040 813f 	bne.w	401d84 <_vfiprintf_r+0xae8>
  401b06:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b08:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b0a:	1c48      	adds	r0, r1, #1
  401b0c:	46ce      	mov	lr, r9
  401b0e:	e77f      	b.n	401a10 <_vfiprintf_r+0x774>
  401b10:	aa0f      	add	r2, sp, #60	; 0x3c
  401b12:	4659      	mov	r1, fp
  401b14:	4638      	mov	r0, r7
  401b16:	f7ff fb81 	bl	40121c <__sprint_r.part.0>
  401b1a:	b960      	cbnz	r0, 401b36 <_vfiprintf_r+0x89a>
  401b1c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b20:	1c48      	adds	r0, r1, #1
  401b22:	46ca      	mov	sl, r9
  401b24:	e7bd      	b.n	401aa2 <_vfiprintf_r+0x806>
  401b26:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401b28:	f8dd b010 	ldr.w	fp, [sp, #16]
  401b2c:	2b00      	cmp	r3, #0
  401b2e:	f040 81d4 	bne.w	401eda <_vfiprintf_r+0xc3e>
  401b32:	2300      	movs	r3, #0
  401b34:	9310      	str	r3, [sp, #64]	; 0x40
  401b36:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401b3a:	f013 0f01 	tst.w	r3, #1
  401b3e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401b42:	d102      	bne.n	401b4a <_vfiprintf_r+0x8ae>
  401b44:	059a      	lsls	r2, r3, #22
  401b46:	f140 80de 	bpl.w	401d06 <_vfiprintf_r+0xa6a>
  401b4a:	065b      	lsls	r3, r3, #25
  401b4c:	f53f acb2 	bmi.w	4014b4 <_vfiprintf_r+0x218>
  401b50:	9803      	ldr	r0, [sp, #12]
  401b52:	b02d      	add	sp, #180	; 0xb4
  401b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b58:	2a00      	cmp	r2, #0
  401b5a:	f040 8106 	bne.w	401d6a <_vfiprintf_r+0xace>
  401b5e:	9a05      	ldr	r2, [sp, #20]
  401b60:	921d      	str	r2, [sp, #116]	; 0x74
  401b62:	2301      	movs	r3, #1
  401b64:	9211      	str	r2, [sp, #68]	; 0x44
  401b66:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  401b6a:	9310      	str	r3, [sp, #64]	; 0x40
  401b6c:	46ca      	mov	sl, r9
  401b6e:	f10a 0a08 	add.w	sl, sl, #8
  401b72:	9b02      	ldr	r3, [sp, #8]
  401b74:	0759      	lsls	r1, r3, #29
  401b76:	d504      	bpl.n	401b82 <_vfiprintf_r+0x8e6>
  401b78:	9b08      	ldr	r3, [sp, #32]
  401b7a:	9901      	ldr	r1, [sp, #4]
  401b7c:	1a5c      	subs	r4, r3, r1
  401b7e:	2c00      	cmp	r4, #0
  401b80:	dc81      	bgt.n	401a86 <_vfiprintf_r+0x7ea>
  401b82:	9b03      	ldr	r3, [sp, #12]
  401b84:	9908      	ldr	r1, [sp, #32]
  401b86:	9801      	ldr	r0, [sp, #4]
  401b88:	4281      	cmp	r1, r0
  401b8a:	bfac      	ite	ge
  401b8c:	185b      	addge	r3, r3, r1
  401b8e:	181b      	addlt	r3, r3, r0
  401b90:	9303      	str	r3, [sp, #12]
  401b92:	bb72      	cbnz	r2, 401bf2 <_vfiprintf_r+0x956>
  401b94:	2300      	movs	r3, #0
  401b96:	9310      	str	r3, [sp, #64]	; 0x40
  401b98:	46ca      	mov	sl, r9
  401b9a:	f7ff bbbc 	b.w	401316 <_vfiprintf_r+0x7a>
  401b9e:	aa0f      	add	r2, sp, #60	; 0x3c
  401ba0:	9904      	ldr	r1, [sp, #16]
  401ba2:	4620      	mov	r0, r4
  401ba4:	f7ff fb3a 	bl	40121c <__sprint_r.part.0>
  401ba8:	bb50      	cbnz	r0, 401c00 <_vfiprintf_r+0x964>
  401baa:	9910      	ldr	r1, [sp, #64]	; 0x40
  401bac:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401bae:	f101 0e01 	add.w	lr, r1, #1
  401bb2:	46cc      	mov	ip, r9
  401bb4:	e548      	b.n	401648 <_vfiprintf_r+0x3ac>
  401bb6:	2a00      	cmp	r2, #0
  401bb8:	f040 8140 	bne.w	401e3c <_vfiprintf_r+0xba0>
  401bbc:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  401bc0:	2900      	cmp	r1, #0
  401bc2:	f000 811b 	beq.w	401dfc <_vfiprintf_r+0xb60>
  401bc6:	2201      	movs	r2, #1
  401bc8:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  401bcc:	4610      	mov	r0, r2
  401bce:	921d      	str	r2, [sp, #116]	; 0x74
  401bd0:	911c      	str	r1, [sp, #112]	; 0x70
  401bd2:	46ca      	mov	sl, r9
  401bd4:	4601      	mov	r1, r0
  401bd6:	f10a 0a08 	add.w	sl, sl, #8
  401bda:	3001      	adds	r0, #1
  401bdc:	e507      	b.n	4015ee <_vfiprintf_r+0x352>
  401bde:	9b02      	ldr	r3, [sp, #8]
  401be0:	2a01      	cmp	r2, #1
  401be2:	f000 8098 	beq.w	401d16 <_vfiprintf_r+0xa7a>
  401be6:	2a02      	cmp	r2, #2
  401be8:	d10d      	bne.n	401c06 <_vfiprintf_r+0x96a>
  401bea:	9302      	str	r3, [sp, #8]
  401bec:	2600      	movs	r6, #0
  401bee:	2700      	movs	r7, #0
  401bf0:	e5b0      	b.n	401754 <_vfiprintf_r+0x4b8>
  401bf2:	aa0f      	add	r2, sp, #60	; 0x3c
  401bf4:	9904      	ldr	r1, [sp, #16]
  401bf6:	9806      	ldr	r0, [sp, #24]
  401bf8:	f7ff fb10 	bl	40121c <__sprint_r.part.0>
  401bfc:	2800      	cmp	r0, #0
  401bfe:	d0c9      	beq.n	401b94 <_vfiprintf_r+0x8f8>
  401c00:	f8dd b010 	ldr.w	fp, [sp, #16]
  401c04:	e797      	b.n	401b36 <_vfiprintf_r+0x89a>
  401c06:	9302      	str	r3, [sp, #8]
  401c08:	2600      	movs	r6, #0
  401c0a:	2700      	movs	r7, #0
  401c0c:	4649      	mov	r1, r9
  401c0e:	e000      	b.n	401c12 <_vfiprintf_r+0x976>
  401c10:	4659      	mov	r1, fp
  401c12:	08f2      	lsrs	r2, r6, #3
  401c14:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401c18:	08f8      	lsrs	r0, r7, #3
  401c1a:	f006 0307 	and.w	r3, r6, #7
  401c1e:	4607      	mov	r7, r0
  401c20:	4616      	mov	r6, r2
  401c22:	3330      	adds	r3, #48	; 0x30
  401c24:	ea56 0207 	orrs.w	r2, r6, r7
  401c28:	f801 3c01 	strb.w	r3, [r1, #-1]
  401c2c:	f101 3bff 	add.w	fp, r1, #4294967295
  401c30:	d1ee      	bne.n	401c10 <_vfiprintf_r+0x974>
  401c32:	9a02      	ldr	r2, [sp, #8]
  401c34:	07d6      	lsls	r6, r2, #31
  401c36:	f57f ad9d 	bpl.w	401774 <_vfiprintf_r+0x4d8>
  401c3a:	2b30      	cmp	r3, #48	; 0x30
  401c3c:	f43f ad9a 	beq.w	401774 <_vfiprintf_r+0x4d8>
  401c40:	3902      	subs	r1, #2
  401c42:	2330      	movs	r3, #48	; 0x30
  401c44:	f80b 3c01 	strb.w	r3, [fp, #-1]
  401c48:	eba9 0301 	sub.w	r3, r9, r1
  401c4c:	9305      	str	r3, [sp, #20]
  401c4e:	468b      	mov	fp, r1
  401c50:	e476      	b.n	401540 <_vfiprintf_r+0x2a4>
  401c52:	9b03      	ldr	r3, [sp, #12]
  401c54:	9a08      	ldr	r2, [sp, #32]
  401c56:	428a      	cmp	r2, r1
  401c58:	bfac      	ite	ge
  401c5a:	189b      	addge	r3, r3, r2
  401c5c:	185b      	addlt	r3, r3, r1
  401c5e:	9303      	str	r3, [sp, #12]
  401c60:	e798      	b.n	401b94 <_vfiprintf_r+0x8f8>
  401c62:	2202      	movs	r2, #2
  401c64:	e44d      	b.n	401502 <_vfiprintf_r+0x266>
  401c66:	2f00      	cmp	r7, #0
  401c68:	bf08      	it	eq
  401c6a:	2e0a      	cmpeq	r6, #10
  401c6c:	d352      	bcc.n	401d14 <_vfiprintf_r+0xa78>
  401c6e:	46cb      	mov	fp, r9
  401c70:	4630      	mov	r0, r6
  401c72:	4639      	mov	r1, r7
  401c74:	220a      	movs	r2, #10
  401c76:	2300      	movs	r3, #0
  401c78:	f002 f802 	bl	403c80 <__aeabi_uldivmod>
  401c7c:	3230      	adds	r2, #48	; 0x30
  401c7e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  401c82:	4630      	mov	r0, r6
  401c84:	4639      	mov	r1, r7
  401c86:	2300      	movs	r3, #0
  401c88:	220a      	movs	r2, #10
  401c8a:	f001 fff9 	bl	403c80 <__aeabi_uldivmod>
  401c8e:	4606      	mov	r6, r0
  401c90:	460f      	mov	r7, r1
  401c92:	ea56 0307 	orrs.w	r3, r6, r7
  401c96:	d1eb      	bne.n	401c70 <_vfiprintf_r+0x9d4>
  401c98:	e56c      	b.n	401774 <_vfiprintf_r+0x4d8>
  401c9a:	9405      	str	r4, [sp, #20]
  401c9c:	46cb      	mov	fp, r9
  401c9e:	e44f      	b.n	401540 <_vfiprintf_r+0x2a4>
  401ca0:	aa0f      	add	r2, sp, #60	; 0x3c
  401ca2:	9904      	ldr	r1, [sp, #16]
  401ca4:	9806      	ldr	r0, [sp, #24]
  401ca6:	f7ff fab9 	bl	40121c <__sprint_r.part.0>
  401caa:	2800      	cmp	r0, #0
  401cac:	d1a8      	bne.n	401c00 <_vfiprintf_r+0x964>
  401cae:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401cb0:	46ca      	mov	sl, r9
  401cb2:	e75e      	b.n	401b72 <_vfiprintf_r+0x8d6>
  401cb4:	aa0f      	add	r2, sp, #60	; 0x3c
  401cb6:	9904      	ldr	r1, [sp, #16]
  401cb8:	9806      	ldr	r0, [sp, #24]
  401cba:	f7ff faaf 	bl	40121c <__sprint_r.part.0>
  401cbe:	2800      	cmp	r0, #0
  401cc0:	d19e      	bne.n	401c00 <_vfiprintf_r+0x964>
  401cc2:	46ca      	mov	sl, r9
  401cc4:	f7ff bbc0 	b.w	401448 <_vfiprintf_r+0x1ac>
  401cc8:	00404028 	.word	0x00404028
  401ccc:	00404018 	.word	0x00404018
  401cd0:	3104      	adds	r1, #4
  401cd2:	6816      	ldr	r6, [r2, #0]
  401cd4:	9107      	str	r1, [sp, #28]
  401cd6:	2201      	movs	r2, #1
  401cd8:	2700      	movs	r7, #0
  401cda:	e412      	b.n	401502 <_vfiprintf_r+0x266>
  401cdc:	9807      	ldr	r0, [sp, #28]
  401cde:	4601      	mov	r1, r0
  401ce0:	3104      	adds	r1, #4
  401ce2:	6806      	ldr	r6, [r0, #0]
  401ce4:	9107      	str	r1, [sp, #28]
  401ce6:	2700      	movs	r7, #0
  401ce8:	e40b      	b.n	401502 <_vfiprintf_r+0x266>
  401cea:	680e      	ldr	r6, [r1, #0]
  401cec:	3104      	adds	r1, #4
  401cee:	9107      	str	r1, [sp, #28]
  401cf0:	2700      	movs	r7, #0
  401cf2:	e591      	b.n	401818 <_vfiprintf_r+0x57c>
  401cf4:	9907      	ldr	r1, [sp, #28]
  401cf6:	680e      	ldr	r6, [r1, #0]
  401cf8:	460a      	mov	r2, r1
  401cfa:	17f7      	asrs	r7, r6, #31
  401cfc:	3204      	adds	r2, #4
  401cfe:	9207      	str	r2, [sp, #28]
  401d00:	4630      	mov	r0, r6
  401d02:	4639      	mov	r1, r7
  401d04:	e50f      	b.n	401726 <_vfiprintf_r+0x48a>
  401d06:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401d0a:	f000 feb7 	bl	402a7c <__retarget_lock_release_recursive>
  401d0e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401d12:	e71a      	b.n	401b4a <_vfiprintf_r+0x8ae>
  401d14:	9b02      	ldr	r3, [sp, #8]
  401d16:	9302      	str	r3, [sp, #8]
  401d18:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  401d1c:	3630      	adds	r6, #48	; 0x30
  401d1e:	2301      	movs	r3, #1
  401d20:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  401d24:	9305      	str	r3, [sp, #20]
  401d26:	e40b      	b.n	401540 <_vfiprintf_r+0x2a4>
  401d28:	aa0f      	add	r2, sp, #60	; 0x3c
  401d2a:	9904      	ldr	r1, [sp, #16]
  401d2c:	9806      	ldr	r0, [sp, #24]
  401d2e:	f7ff fa75 	bl	40121c <__sprint_r.part.0>
  401d32:	2800      	cmp	r0, #0
  401d34:	f47f af64 	bne.w	401c00 <_vfiprintf_r+0x964>
  401d38:	9910      	ldr	r1, [sp, #64]	; 0x40
  401d3a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d3c:	1c48      	adds	r0, r1, #1
  401d3e:	46ca      	mov	sl, r9
  401d40:	e651      	b.n	4019e6 <_vfiprintf_r+0x74a>
  401d42:	aa0f      	add	r2, sp, #60	; 0x3c
  401d44:	9904      	ldr	r1, [sp, #16]
  401d46:	9806      	ldr	r0, [sp, #24]
  401d48:	f7ff fa68 	bl	40121c <__sprint_r.part.0>
  401d4c:	2800      	cmp	r0, #0
  401d4e:	f47f af57 	bne.w	401c00 <_vfiprintf_r+0x964>
  401d52:	9910      	ldr	r1, [sp, #64]	; 0x40
  401d54:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d56:	1c48      	adds	r0, r1, #1
  401d58:	46ca      	mov	sl, r9
  401d5a:	e448      	b.n	4015ee <_vfiprintf_r+0x352>
  401d5c:	2a00      	cmp	r2, #0
  401d5e:	f040 8091 	bne.w	401e84 <_vfiprintf_r+0xbe8>
  401d62:	2001      	movs	r0, #1
  401d64:	4611      	mov	r1, r2
  401d66:	46ca      	mov	sl, r9
  401d68:	e641      	b.n	4019ee <_vfiprintf_r+0x752>
  401d6a:	aa0f      	add	r2, sp, #60	; 0x3c
  401d6c:	9904      	ldr	r1, [sp, #16]
  401d6e:	9806      	ldr	r0, [sp, #24]
  401d70:	f7ff fa54 	bl	40121c <__sprint_r.part.0>
  401d74:	2800      	cmp	r0, #0
  401d76:	f47f af43 	bne.w	401c00 <_vfiprintf_r+0x964>
  401d7a:	9810      	ldr	r0, [sp, #64]	; 0x40
  401d7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d7e:	3001      	adds	r0, #1
  401d80:	46ca      	mov	sl, r9
  401d82:	e667      	b.n	401a54 <_vfiprintf_r+0x7b8>
  401d84:	46d3      	mov	fp, sl
  401d86:	e6d6      	b.n	401b36 <_vfiprintf_r+0x89a>
  401d88:	9e07      	ldr	r6, [sp, #28]
  401d8a:	3607      	adds	r6, #7
  401d8c:	f026 0207 	bic.w	r2, r6, #7
  401d90:	f102 0108 	add.w	r1, r2, #8
  401d94:	e9d2 6700 	ldrd	r6, r7, [r2]
  401d98:	9107      	str	r1, [sp, #28]
  401d9a:	2201      	movs	r2, #1
  401d9c:	f7ff bbb1 	b.w	401502 <_vfiprintf_r+0x266>
  401da0:	9e07      	ldr	r6, [sp, #28]
  401da2:	3607      	adds	r6, #7
  401da4:	f026 0607 	bic.w	r6, r6, #7
  401da8:	e9d6 0100 	ldrd	r0, r1, [r6]
  401dac:	f106 0208 	add.w	r2, r6, #8
  401db0:	9207      	str	r2, [sp, #28]
  401db2:	4606      	mov	r6, r0
  401db4:	460f      	mov	r7, r1
  401db6:	e4b6      	b.n	401726 <_vfiprintf_r+0x48a>
  401db8:	9e07      	ldr	r6, [sp, #28]
  401dba:	3607      	adds	r6, #7
  401dbc:	f026 0207 	bic.w	r2, r6, #7
  401dc0:	f102 0108 	add.w	r1, r2, #8
  401dc4:	e9d2 6700 	ldrd	r6, r7, [r2]
  401dc8:	9107      	str	r1, [sp, #28]
  401dca:	2200      	movs	r2, #0
  401dcc:	f7ff bb99 	b.w	401502 <_vfiprintf_r+0x266>
  401dd0:	9e07      	ldr	r6, [sp, #28]
  401dd2:	3607      	adds	r6, #7
  401dd4:	f026 0107 	bic.w	r1, r6, #7
  401dd8:	f101 0008 	add.w	r0, r1, #8
  401ddc:	9007      	str	r0, [sp, #28]
  401dde:	e9d1 6700 	ldrd	r6, r7, [r1]
  401de2:	e519      	b.n	401818 <_vfiprintf_r+0x57c>
  401de4:	46cb      	mov	fp, r9
  401de6:	f7ff bbab 	b.w	401540 <_vfiprintf_r+0x2a4>
  401dea:	252d      	movs	r5, #45	; 0x2d
  401dec:	4276      	negs	r6, r6
  401dee:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  401df2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401df6:	2201      	movs	r2, #1
  401df8:	f7ff bb88 	b.w	40150c <_vfiprintf_r+0x270>
  401dfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dfe:	b9b3      	cbnz	r3, 401e2e <_vfiprintf_r+0xb92>
  401e00:	4611      	mov	r1, r2
  401e02:	2001      	movs	r0, #1
  401e04:	46ca      	mov	sl, r9
  401e06:	e5f2      	b.n	4019ee <_vfiprintf_r+0x752>
  401e08:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401e0c:	f000 fe36 	bl	402a7c <__retarget_lock_release_recursive>
  401e10:	f04f 33ff 	mov.w	r3, #4294967295
  401e14:	9303      	str	r3, [sp, #12]
  401e16:	f7ff bb50 	b.w	4014ba <_vfiprintf_r+0x21e>
  401e1a:	aa0f      	add	r2, sp, #60	; 0x3c
  401e1c:	9904      	ldr	r1, [sp, #16]
  401e1e:	9806      	ldr	r0, [sp, #24]
  401e20:	f7ff f9fc 	bl	40121c <__sprint_r.part.0>
  401e24:	2800      	cmp	r0, #0
  401e26:	f47f aeeb 	bne.w	401c00 <_vfiprintf_r+0x964>
  401e2a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e2c:	e6a9      	b.n	401b82 <_vfiprintf_r+0x8e6>
  401e2e:	ab0e      	add	r3, sp, #56	; 0x38
  401e30:	2202      	movs	r2, #2
  401e32:	931c      	str	r3, [sp, #112]	; 0x70
  401e34:	921d      	str	r2, [sp, #116]	; 0x74
  401e36:	2001      	movs	r0, #1
  401e38:	46ca      	mov	sl, r9
  401e3a:	e5d0      	b.n	4019de <_vfiprintf_r+0x742>
  401e3c:	aa0f      	add	r2, sp, #60	; 0x3c
  401e3e:	9904      	ldr	r1, [sp, #16]
  401e40:	9806      	ldr	r0, [sp, #24]
  401e42:	f7ff f9eb 	bl	40121c <__sprint_r.part.0>
  401e46:	2800      	cmp	r0, #0
  401e48:	f47f aeda 	bne.w	401c00 <_vfiprintf_r+0x964>
  401e4c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e50:	1c48      	adds	r0, r1, #1
  401e52:	46ca      	mov	sl, r9
  401e54:	e5a4      	b.n	4019a0 <_vfiprintf_r+0x704>
  401e56:	9a07      	ldr	r2, [sp, #28]
  401e58:	9903      	ldr	r1, [sp, #12]
  401e5a:	6813      	ldr	r3, [r2, #0]
  401e5c:	17cd      	asrs	r5, r1, #31
  401e5e:	4608      	mov	r0, r1
  401e60:	3204      	adds	r2, #4
  401e62:	4629      	mov	r1, r5
  401e64:	9207      	str	r2, [sp, #28]
  401e66:	e9c3 0100 	strd	r0, r1, [r3]
  401e6a:	f7ff ba54 	b.w	401316 <_vfiprintf_r+0x7a>
  401e6e:	4658      	mov	r0, fp
  401e70:	9607      	str	r6, [sp, #28]
  401e72:	9302      	str	r3, [sp, #8]
  401e74:	f7ff f964 	bl	401140 <strlen>
  401e78:	2400      	movs	r4, #0
  401e7a:	9005      	str	r0, [sp, #20]
  401e7c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401e80:	f7ff bb5e 	b.w	401540 <_vfiprintf_r+0x2a4>
  401e84:	aa0f      	add	r2, sp, #60	; 0x3c
  401e86:	9904      	ldr	r1, [sp, #16]
  401e88:	9806      	ldr	r0, [sp, #24]
  401e8a:	f7ff f9c7 	bl	40121c <__sprint_r.part.0>
  401e8e:	2800      	cmp	r0, #0
  401e90:	f47f aeb6 	bne.w	401c00 <_vfiprintf_r+0x964>
  401e94:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e96:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e98:	1c48      	adds	r0, r1, #1
  401e9a:	46ca      	mov	sl, r9
  401e9c:	e5a7      	b.n	4019ee <_vfiprintf_r+0x752>
  401e9e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ea0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ea2:	4e20      	ldr	r6, [pc, #128]	; (401f24 <_vfiprintf_r+0xc88>)
  401ea4:	3101      	adds	r1, #1
  401ea6:	f7ff bb90 	b.w	4015ca <_vfiprintf_r+0x32e>
  401eaa:	2c06      	cmp	r4, #6
  401eac:	bf28      	it	cs
  401eae:	2406      	movcs	r4, #6
  401eb0:	9405      	str	r4, [sp, #20]
  401eb2:	9607      	str	r6, [sp, #28]
  401eb4:	9401      	str	r4, [sp, #4]
  401eb6:	f8df b070 	ldr.w	fp, [pc, #112]	; 401f28 <_vfiprintf_r+0xc8c>
  401eba:	e4d5      	b.n	401868 <_vfiprintf_r+0x5cc>
  401ebc:	9810      	ldr	r0, [sp, #64]	; 0x40
  401ebe:	4e19      	ldr	r6, [pc, #100]	; (401f24 <_vfiprintf_r+0xc88>)
  401ec0:	3001      	adds	r0, #1
  401ec2:	e603      	b.n	401acc <_vfiprintf_r+0x830>
  401ec4:	9405      	str	r4, [sp, #20]
  401ec6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401eca:	9607      	str	r6, [sp, #28]
  401ecc:	9302      	str	r3, [sp, #8]
  401ece:	4604      	mov	r4, r0
  401ed0:	f7ff bb36 	b.w	401540 <_vfiprintf_r+0x2a4>
  401ed4:	4686      	mov	lr, r0
  401ed6:	f7ff bbce 	b.w	401676 <_vfiprintf_r+0x3da>
  401eda:	9806      	ldr	r0, [sp, #24]
  401edc:	aa0f      	add	r2, sp, #60	; 0x3c
  401ede:	4659      	mov	r1, fp
  401ee0:	f7ff f99c 	bl	40121c <__sprint_r.part.0>
  401ee4:	2800      	cmp	r0, #0
  401ee6:	f43f ae24 	beq.w	401b32 <_vfiprintf_r+0x896>
  401eea:	e624      	b.n	401b36 <_vfiprintf_r+0x89a>
  401eec:	9907      	ldr	r1, [sp, #28]
  401eee:	f898 2001 	ldrb.w	r2, [r8, #1]
  401ef2:	680c      	ldr	r4, [r1, #0]
  401ef4:	3104      	adds	r1, #4
  401ef6:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  401efa:	46b8      	mov	r8, r7
  401efc:	9107      	str	r1, [sp, #28]
  401efe:	f7ff ba3f 	b.w	401380 <_vfiprintf_r+0xe4>
  401f02:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f06:	e43c      	b.n	401782 <_vfiprintf_r+0x4e6>
  401f08:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f0c:	e521      	b.n	401952 <_vfiprintf_r+0x6b6>
  401f0e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f12:	f7ff bbf4 	b.w	4016fe <_vfiprintf_r+0x462>
  401f16:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f1a:	e491      	b.n	401840 <_vfiprintf_r+0x5a4>
  401f1c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f20:	e469      	b.n	4017f6 <_vfiprintf_r+0x55a>
  401f22:	bf00      	nop
  401f24:	00404018 	.word	0x00404018
  401f28:	00404010 	.word	0x00404010

00401f2c <__sbprintf>:
  401f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401f30:	460c      	mov	r4, r1
  401f32:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  401f36:	8989      	ldrh	r1, [r1, #12]
  401f38:	6e66      	ldr	r6, [r4, #100]	; 0x64
  401f3a:	89e5      	ldrh	r5, [r4, #14]
  401f3c:	9619      	str	r6, [sp, #100]	; 0x64
  401f3e:	f021 0102 	bic.w	r1, r1, #2
  401f42:	4606      	mov	r6, r0
  401f44:	69e0      	ldr	r0, [r4, #28]
  401f46:	f8ad 100c 	strh.w	r1, [sp, #12]
  401f4a:	4617      	mov	r7, r2
  401f4c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  401f50:	6a62      	ldr	r2, [r4, #36]	; 0x24
  401f52:	f8ad 500e 	strh.w	r5, [sp, #14]
  401f56:	4698      	mov	r8, r3
  401f58:	ad1a      	add	r5, sp, #104	; 0x68
  401f5a:	2300      	movs	r3, #0
  401f5c:	9007      	str	r0, [sp, #28]
  401f5e:	a816      	add	r0, sp, #88	; 0x58
  401f60:	9209      	str	r2, [sp, #36]	; 0x24
  401f62:	9306      	str	r3, [sp, #24]
  401f64:	9500      	str	r5, [sp, #0]
  401f66:	9504      	str	r5, [sp, #16]
  401f68:	9102      	str	r1, [sp, #8]
  401f6a:	9105      	str	r1, [sp, #20]
  401f6c:	f000 fd80 	bl	402a70 <__retarget_lock_init_recursive>
  401f70:	4643      	mov	r3, r8
  401f72:	463a      	mov	r2, r7
  401f74:	4669      	mov	r1, sp
  401f76:	4630      	mov	r0, r6
  401f78:	f7ff f990 	bl	40129c <_vfiprintf_r>
  401f7c:	1e05      	subs	r5, r0, #0
  401f7e:	db07      	blt.n	401f90 <__sbprintf+0x64>
  401f80:	4630      	mov	r0, r6
  401f82:	4669      	mov	r1, sp
  401f84:	f000 f928 	bl	4021d8 <_fflush_r>
  401f88:	2800      	cmp	r0, #0
  401f8a:	bf18      	it	ne
  401f8c:	f04f 35ff 	movne.w	r5, #4294967295
  401f90:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401f94:	065b      	lsls	r3, r3, #25
  401f96:	d503      	bpl.n	401fa0 <__sbprintf+0x74>
  401f98:	89a3      	ldrh	r3, [r4, #12]
  401f9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401f9e:	81a3      	strh	r3, [r4, #12]
  401fa0:	9816      	ldr	r0, [sp, #88]	; 0x58
  401fa2:	f000 fd67 	bl	402a74 <__retarget_lock_close_recursive>
  401fa6:	4628      	mov	r0, r5
  401fa8:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  401fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00401fb0 <__swsetup_r>:
  401fb0:	b538      	push	{r3, r4, r5, lr}
  401fb2:	4b30      	ldr	r3, [pc, #192]	; (402074 <__swsetup_r+0xc4>)
  401fb4:	681b      	ldr	r3, [r3, #0]
  401fb6:	4605      	mov	r5, r0
  401fb8:	460c      	mov	r4, r1
  401fba:	b113      	cbz	r3, 401fc2 <__swsetup_r+0x12>
  401fbc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  401fbe:	2a00      	cmp	r2, #0
  401fc0:	d038      	beq.n	402034 <__swsetup_r+0x84>
  401fc2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401fc6:	b293      	uxth	r3, r2
  401fc8:	0718      	lsls	r0, r3, #28
  401fca:	d50c      	bpl.n	401fe6 <__swsetup_r+0x36>
  401fcc:	6920      	ldr	r0, [r4, #16]
  401fce:	b1a8      	cbz	r0, 401ffc <__swsetup_r+0x4c>
  401fd0:	f013 0201 	ands.w	r2, r3, #1
  401fd4:	d01e      	beq.n	402014 <__swsetup_r+0x64>
  401fd6:	6963      	ldr	r3, [r4, #20]
  401fd8:	2200      	movs	r2, #0
  401fda:	425b      	negs	r3, r3
  401fdc:	61a3      	str	r3, [r4, #24]
  401fde:	60a2      	str	r2, [r4, #8]
  401fe0:	b1f0      	cbz	r0, 402020 <__swsetup_r+0x70>
  401fe2:	2000      	movs	r0, #0
  401fe4:	bd38      	pop	{r3, r4, r5, pc}
  401fe6:	06d9      	lsls	r1, r3, #27
  401fe8:	d53c      	bpl.n	402064 <__swsetup_r+0xb4>
  401fea:	0758      	lsls	r0, r3, #29
  401fec:	d426      	bmi.n	40203c <__swsetup_r+0x8c>
  401fee:	6920      	ldr	r0, [r4, #16]
  401ff0:	f042 0308 	orr.w	r3, r2, #8
  401ff4:	81a3      	strh	r3, [r4, #12]
  401ff6:	b29b      	uxth	r3, r3
  401ff8:	2800      	cmp	r0, #0
  401ffa:	d1e9      	bne.n	401fd0 <__swsetup_r+0x20>
  401ffc:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402000:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402004:	d0e4      	beq.n	401fd0 <__swsetup_r+0x20>
  402006:	4628      	mov	r0, r5
  402008:	4621      	mov	r1, r4
  40200a:	f000 fd67 	bl	402adc <__smakebuf_r>
  40200e:	89a3      	ldrh	r3, [r4, #12]
  402010:	6920      	ldr	r0, [r4, #16]
  402012:	e7dd      	b.n	401fd0 <__swsetup_r+0x20>
  402014:	0799      	lsls	r1, r3, #30
  402016:	bf58      	it	pl
  402018:	6962      	ldrpl	r2, [r4, #20]
  40201a:	60a2      	str	r2, [r4, #8]
  40201c:	2800      	cmp	r0, #0
  40201e:	d1e0      	bne.n	401fe2 <__swsetup_r+0x32>
  402020:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402024:	061a      	lsls	r2, r3, #24
  402026:	d5dd      	bpl.n	401fe4 <__swsetup_r+0x34>
  402028:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40202c:	81a3      	strh	r3, [r4, #12]
  40202e:	f04f 30ff 	mov.w	r0, #4294967295
  402032:	bd38      	pop	{r3, r4, r5, pc}
  402034:	4618      	mov	r0, r3
  402036:	f000 f939 	bl	4022ac <__sinit>
  40203a:	e7c2      	b.n	401fc2 <__swsetup_r+0x12>
  40203c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40203e:	b151      	cbz	r1, 402056 <__swsetup_r+0xa6>
  402040:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402044:	4299      	cmp	r1, r3
  402046:	d004      	beq.n	402052 <__swsetup_r+0xa2>
  402048:	4628      	mov	r0, r5
  40204a:	f000 fa55 	bl	4024f8 <_free_r>
  40204e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402052:	2300      	movs	r3, #0
  402054:	6323      	str	r3, [r4, #48]	; 0x30
  402056:	2300      	movs	r3, #0
  402058:	6920      	ldr	r0, [r4, #16]
  40205a:	6063      	str	r3, [r4, #4]
  40205c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402060:	6020      	str	r0, [r4, #0]
  402062:	e7c5      	b.n	401ff0 <__swsetup_r+0x40>
  402064:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402068:	2309      	movs	r3, #9
  40206a:	602b      	str	r3, [r5, #0]
  40206c:	f04f 30ff 	mov.w	r0, #4294967295
  402070:	81a2      	strh	r2, [r4, #12]
  402072:	bd38      	pop	{r3, r4, r5, pc}
  402074:	20000014 	.word	0x20000014

00402078 <register_fini>:
  402078:	4b02      	ldr	r3, [pc, #8]	; (402084 <register_fini+0xc>)
  40207a:	b113      	cbz	r3, 402082 <register_fini+0xa>
  40207c:	4802      	ldr	r0, [pc, #8]	; (402088 <register_fini+0x10>)
  40207e:	f000 b805 	b.w	40208c <atexit>
  402082:	4770      	bx	lr
  402084:	00000000 	.word	0x00000000
  402088:	0040231d 	.word	0x0040231d

0040208c <atexit>:
  40208c:	2300      	movs	r3, #0
  40208e:	4601      	mov	r1, r0
  402090:	461a      	mov	r2, r3
  402092:	4618      	mov	r0, r3
  402094:	f001 bccc 	b.w	403a30 <__register_exitproc>

00402098 <__sflush_r>:
  402098:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  40209c:	b29a      	uxth	r2, r3
  40209e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4020a2:	460d      	mov	r5, r1
  4020a4:	0711      	lsls	r1, r2, #28
  4020a6:	4680      	mov	r8, r0
  4020a8:	d43a      	bmi.n	402120 <__sflush_r+0x88>
  4020aa:	686a      	ldr	r2, [r5, #4]
  4020ac:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4020b0:	2a00      	cmp	r2, #0
  4020b2:	81ab      	strh	r3, [r5, #12]
  4020b4:	dd6f      	ble.n	402196 <__sflush_r+0xfe>
  4020b6:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4020b8:	2c00      	cmp	r4, #0
  4020ba:	d049      	beq.n	402150 <__sflush_r+0xb8>
  4020bc:	2200      	movs	r2, #0
  4020be:	b29b      	uxth	r3, r3
  4020c0:	f8d8 6000 	ldr.w	r6, [r8]
  4020c4:	f8c8 2000 	str.w	r2, [r8]
  4020c8:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4020cc:	d067      	beq.n	40219e <__sflush_r+0x106>
  4020ce:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4020d0:	075f      	lsls	r7, r3, #29
  4020d2:	d505      	bpl.n	4020e0 <__sflush_r+0x48>
  4020d4:	6869      	ldr	r1, [r5, #4]
  4020d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4020d8:	1a52      	subs	r2, r2, r1
  4020da:	b10b      	cbz	r3, 4020e0 <__sflush_r+0x48>
  4020dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4020de:	1ad2      	subs	r2, r2, r3
  4020e0:	2300      	movs	r3, #0
  4020e2:	69e9      	ldr	r1, [r5, #28]
  4020e4:	4640      	mov	r0, r8
  4020e6:	47a0      	blx	r4
  4020e8:	1c44      	adds	r4, r0, #1
  4020ea:	d03c      	beq.n	402166 <__sflush_r+0xce>
  4020ec:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4020f0:	692a      	ldr	r2, [r5, #16]
  4020f2:	602a      	str	r2, [r5, #0]
  4020f4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4020f8:	2200      	movs	r2, #0
  4020fa:	81ab      	strh	r3, [r5, #12]
  4020fc:	04db      	lsls	r3, r3, #19
  4020fe:	606a      	str	r2, [r5, #4]
  402100:	d447      	bmi.n	402192 <__sflush_r+0xfa>
  402102:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402104:	f8c8 6000 	str.w	r6, [r8]
  402108:	b311      	cbz	r1, 402150 <__sflush_r+0xb8>
  40210a:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40210e:	4299      	cmp	r1, r3
  402110:	d002      	beq.n	402118 <__sflush_r+0x80>
  402112:	4640      	mov	r0, r8
  402114:	f000 f9f0 	bl	4024f8 <_free_r>
  402118:	2000      	movs	r0, #0
  40211a:	6328      	str	r0, [r5, #48]	; 0x30
  40211c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402120:	692e      	ldr	r6, [r5, #16]
  402122:	b1ae      	cbz	r6, 402150 <__sflush_r+0xb8>
  402124:	682c      	ldr	r4, [r5, #0]
  402126:	602e      	str	r6, [r5, #0]
  402128:	0791      	lsls	r1, r2, #30
  40212a:	bf0c      	ite	eq
  40212c:	696b      	ldreq	r3, [r5, #20]
  40212e:	2300      	movne	r3, #0
  402130:	1ba4      	subs	r4, r4, r6
  402132:	60ab      	str	r3, [r5, #8]
  402134:	e00a      	b.n	40214c <__sflush_r+0xb4>
  402136:	4623      	mov	r3, r4
  402138:	4632      	mov	r2, r6
  40213a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40213c:	69e9      	ldr	r1, [r5, #28]
  40213e:	4640      	mov	r0, r8
  402140:	47b8      	blx	r7
  402142:	2800      	cmp	r0, #0
  402144:	eba4 0400 	sub.w	r4, r4, r0
  402148:	4406      	add	r6, r0
  40214a:	dd04      	ble.n	402156 <__sflush_r+0xbe>
  40214c:	2c00      	cmp	r4, #0
  40214e:	dcf2      	bgt.n	402136 <__sflush_r+0x9e>
  402150:	2000      	movs	r0, #0
  402152:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402156:	89ab      	ldrh	r3, [r5, #12]
  402158:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40215c:	81ab      	strh	r3, [r5, #12]
  40215e:	f04f 30ff 	mov.w	r0, #4294967295
  402162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402166:	f8d8 4000 	ldr.w	r4, [r8]
  40216a:	2c1d      	cmp	r4, #29
  40216c:	d8f3      	bhi.n	402156 <__sflush_r+0xbe>
  40216e:	4b19      	ldr	r3, [pc, #100]	; (4021d4 <__sflush_r+0x13c>)
  402170:	40e3      	lsrs	r3, r4
  402172:	43db      	mvns	r3, r3
  402174:	f013 0301 	ands.w	r3, r3, #1
  402178:	d1ed      	bne.n	402156 <__sflush_r+0xbe>
  40217a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40217e:	606b      	str	r3, [r5, #4]
  402180:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  402184:	6929      	ldr	r1, [r5, #16]
  402186:	81ab      	strh	r3, [r5, #12]
  402188:	04da      	lsls	r2, r3, #19
  40218a:	6029      	str	r1, [r5, #0]
  40218c:	d5b9      	bpl.n	402102 <__sflush_r+0x6a>
  40218e:	2c00      	cmp	r4, #0
  402190:	d1b7      	bne.n	402102 <__sflush_r+0x6a>
  402192:	6528      	str	r0, [r5, #80]	; 0x50
  402194:	e7b5      	b.n	402102 <__sflush_r+0x6a>
  402196:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402198:	2a00      	cmp	r2, #0
  40219a:	dc8c      	bgt.n	4020b6 <__sflush_r+0x1e>
  40219c:	e7d8      	b.n	402150 <__sflush_r+0xb8>
  40219e:	2301      	movs	r3, #1
  4021a0:	69e9      	ldr	r1, [r5, #28]
  4021a2:	4640      	mov	r0, r8
  4021a4:	47a0      	blx	r4
  4021a6:	1c43      	adds	r3, r0, #1
  4021a8:	4602      	mov	r2, r0
  4021aa:	d002      	beq.n	4021b2 <__sflush_r+0x11a>
  4021ac:	89ab      	ldrh	r3, [r5, #12]
  4021ae:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4021b0:	e78e      	b.n	4020d0 <__sflush_r+0x38>
  4021b2:	f8d8 3000 	ldr.w	r3, [r8]
  4021b6:	2b00      	cmp	r3, #0
  4021b8:	d0f8      	beq.n	4021ac <__sflush_r+0x114>
  4021ba:	2b1d      	cmp	r3, #29
  4021bc:	d001      	beq.n	4021c2 <__sflush_r+0x12a>
  4021be:	2b16      	cmp	r3, #22
  4021c0:	d102      	bne.n	4021c8 <__sflush_r+0x130>
  4021c2:	f8c8 6000 	str.w	r6, [r8]
  4021c6:	e7c3      	b.n	402150 <__sflush_r+0xb8>
  4021c8:	89ab      	ldrh	r3, [r5, #12]
  4021ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4021ce:	81ab      	strh	r3, [r5, #12]
  4021d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4021d4:	20400001 	.word	0x20400001

004021d8 <_fflush_r>:
  4021d8:	b538      	push	{r3, r4, r5, lr}
  4021da:	460d      	mov	r5, r1
  4021dc:	4604      	mov	r4, r0
  4021de:	b108      	cbz	r0, 4021e4 <_fflush_r+0xc>
  4021e0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4021e2:	b1bb      	cbz	r3, 402214 <_fflush_r+0x3c>
  4021e4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4021e8:	b188      	cbz	r0, 40220e <_fflush_r+0x36>
  4021ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021ec:	07db      	lsls	r3, r3, #31
  4021ee:	d401      	bmi.n	4021f4 <_fflush_r+0x1c>
  4021f0:	0581      	lsls	r1, r0, #22
  4021f2:	d517      	bpl.n	402224 <_fflush_r+0x4c>
  4021f4:	4620      	mov	r0, r4
  4021f6:	4629      	mov	r1, r5
  4021f8:	f7ff ff4e 	bl	402098 <__sflush_r>
  4021fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021fe:	07da      	lsls	r2, r3, #31
  402200:	4604      	mov	r4, r0
  402202:	d402      	bmi.n	40220a <_fflush_r+0x32>
  402204:	89ab      	ldrh	r3, [r5, #12]
  402206:	059b      	lsls	r3, r3, #22
  402208:	d507      	bpl.n	40221a <_fflush_r+0x42>
  40220a:	4620      	mov	r0, r4
  40220c:	bd38      	pop	{r3, r4, r5, pc}
  40220e:	4604      	mov	r4, r0
  402210:	4620      	mov	r0, r4
  402212:	bd38      	pop	{r3, r4, r5, pc}
  402214:	f000 f84a 	bl	4022ac <__sinit>
  402218:	e7e4      	b.n	4021e4 <_fflush_r+0xc>
  40221a:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40221c:	f000 fc2e 	bl	402a7c <__retarget_lock_release_recursive>
  402220:	4620      	mov	r0, r4
  402222:	bd38      	pop	{r3, r4, r5, pc}
  402224:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402226:	f000 fc27 	bl	402a78 <__retarget_lock_acquire_recursive>
  40222a:	e7e3      	b.n	4021f4 <_fflush_r+0x1c>

0040222c <fflush>:
  40222c:	b120      	cbz	r0, 402238 <fflush+0xc>
  40222e:	4b05      	ldr	r3, [pc, #20]	; (402244 <fflush+0x18>)
  402230:	4601      	mov	r1, r0
  402232:	6818      	ldr	r0, [r3, #0]
  402234:	f7ff bfd0 	b.w	4021d8 <_fflush_r>
  402238:	4b03      	ldr	r3, [pc, #12]	; (402248 <fflush+0x1c>)
  40223a:	4904      	ldr	r1, [pc, #16]	; (40224c <fflush+0x20>)
  40223c:	6818      	ldr	r0, [r3, #0]
  40223e:	f000 bbdf 	b.w	402a00 <_fwalk_reent>
  402242:	bf00      	nop
  402244:	20000014 	.word	0x20000014
  402248:	00403fe0 	.word	0x00403fe0
  40224c:	004021d9 	.word	0x004021d9

00402250 <_cleanup_r>:
  402250:	4901      	ldr	r1, [pc, #4]	; (402258 <_cleanup_r+0x8>)
  402252:	f000 bbd5 	b.w	402a00 <_fwalk_reent>
  402256:	bf00      	nop
  402258:	00403b19 	.word	0x00403b19

0040225c <std.isra.0>:
  40225c:	b510      	push	{r4, lr}
  40225e:	2300      	movs	r3, #0
  402260:	4604      	mov	r4, r0
  402262:	8181      	strh	r1, [r0, #12]
  402264:	81c2      	strh	r2, [r0, #14]
  402266:	6003      	str	r3, [r0, #0]
  402268:	6043      	str	r3, [r0, #4]
  40226a:	6083      	str	r3, [r0, #8]
  40226c:	6643      	str	r3, [r0, #100]	; 0x64
  40226e:	6103      	str	r3, [r0, #16]
  402270:	6143      	str	r3, [r0, #20]
  402272:	6183      	str	r3, [r0, #24]
  402274:	4619      	mov	r1, r3
  402276:	2208      	movs	r2, #8
  402278:	305c      	adds	r0, #92	; 0x5c
  40227a:	f7fe fdd3 	bl	400e24 <memset>
  40227e:	4807      	ldr	r0, [pc, #28]	; (40229c <std.isra.0+0x40>)
  402280:	4907      	ldr	r1, [pc, #28]	; (4022a0 <std.isra.0+0x44>)
  402282:	4a08      	ldr	r2, [pc, #32]	; (4022a4 <std.isra.0+0x48>)
  402284:	4b08      	ldr	r3, [pc, #32]	; (4022a8 <std.isra.0+0x4c>)
  402286:	6220      	str	r0, [r4, #32]
  402288:	61e4      	str	r4, [r4, #28]
  40228a:	6261      	str	r1, [r4, #36]	; 0x24
  40228c:	62a2      	str	r2, [r4, #40]	; 0x28
  40228e:	62e3      	str	r3, [r4, #44]	; 0x2c
  402290:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402298:	f000 bbea 	b.w	402a70 <__retarget_lock_init_recursive>
  40229c:	0040385d 	.word	0x0040385d
  4022a0:	00403881 	.word	0x00403881
  4022a4:	004038bd 	.word	0x004038bd
  4022a8:	004038dd 	.word	0x004038dd

004022ac <__sinit>:
  4022ac:	b510      	push	{r4, lr}
  4022ae:	4604      	mov	r4, r0
  4022b0:	4812      	ldr	r0, [pc, #72]	; (4022fc <__sinit+0x50>)
  4022b2:	f000 fbe1 	bl	402a78 <__retarget_lock_acquire_recursive>
  4022b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  4022b8:	b9d2      	cbnz	r2, 4022f0 <__sinit+0x44>
  4022ba:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  4022be:	4810      	ldr	r0, [pc, #64]	; (402300 <__sinit+0x54>)
  4022c0:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  4022c4:	2103      	movs	r1, #3
  4022c6:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  4022ca:	63e0      	str	r0, [r4, #60]	; 0x3c
  4022cc:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4022d0:	6860      	ldr	r0, [r4, #4]
  4022d2:	2104      	movs	r1, #4
  4022d4:	f7ff ffc2 	bl	40225c <std.isra.0>
  4022d8:	2201      	movs	r2, #1
  4022da:	2109      	movs	r1, #9
  4022dc:	68a0      	ldr	r0, [r4, #8]
  4022de:	f7ff ffbd 	bl	40225c <std.isra.0>
  4022e2:	2202      	movs	r2, #2
  4022e4:	2112      	movs	r1, #18
  4022e6:	68e0      	ldr	r0, [r4, #12]
  4022e8:	f7ff ffb8 	bl	40225c <std.isra.0>
  4022ec:	2301      	movs	r3, #1
  4022ee:	63a3      	str	r3, [r4, #56]	; 0x38
  4022f0:	4802      	ldr	r0, [pc, #8]	; (4022fc <__sinit+0x50>)
  4022f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4022f6:	f000 bbc1 	b.w	402a7c <__retarget_lock_release_recursive>
  4022fa:	bf00      	nop
  4022fc:	20000aa4 	.word	0x20000aa4
  402300:	00402251 	.word	0x00402251

00402304 <__sfp_lock_acquire>:
  402304:	4801      	ldr	r0, [pc, #4]	; (40230c <__sfp_lock_acquire+0x8>)
  402306:	f000 bbb7 	b.w	402a78 <__retarget_lock_acquire_recursive>
  40230a:	bf00      	nop
  40230c:	20000ab8 	.word	0x20000ab8

00402310 <__sfp_lock_release>:
  402310:	4801      	ldr	r0, [pc, #4]	; (402318 <__sfp_lock_release+0x8>)
  402312:	f000 bbb3 	b.w	402a7c <__retarget_lock_release_recursive>
  402316:	bf00      	nop
  402318:	20000ab8 	.word	0x20000ab8

0040231c <__libc_fini_array>:
  40231c:	b538      	push	{r3, r4, r5, lr}
  40231e:	4c0a      	ldr	r4, [pc, #40]	; (402348 <__libc_fini_array+0x2c>)
  402320:	4d0a      	ldr	r5, [pc, #40]	; (40234c <__libc_fini_array+0x30>)
  402322:	1b64      	subs	r4, r4, r5
  402324:	10a4      	asrs	r4, r4, #2
  402326:	d00a      	beq.n	40233e <__libc_fini_array+0x22>
  402328:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40232c:	3b01      	subs	r3, #1
  40232e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402332:	3c01      	subs	r4, #1
  402334:	f855 3904 	ldr.w	r3, [r5], #-4
  402338:	4798      	blx	r3
  40233a:	2c00      	cmp	r4, #0
  40233c:	d1f9      	bne.n	402332 <__libc_fini_array+0x16>
  40233e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402342:	f001 bf0d 	b.w	404160 <_fini>
  402346:	bf00      	nop
  402348:	00404170 	.word	0x00404170
  40234c:	0040416c 	.word	0x0040416c

00402350 <__fputwc>:
  402350:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402354:	b082      	sub	sp, #8
  402356:	4680      	mov	r8, r0
  402358:	4689      	mov	r9, r1
  40235a:	4614      	mov	r4, r2
  40235c:	f000 fb7a 	bl	402a54 <__locale_mb_cur_max>
  402360:	2801      	cmp	r0, #1
  402362:	d036      	beq.n	4023d2 <__fputwc+0x82>
  402364:	464a      	mov	r2, r9
  402366:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40236a:	a901      	add	r1, sp, #4
  40236c:	4640      	mov	r0, r8
  40236e:	f001 fb11 	bl	403994 <_wcrtomb_r>
  402372:	1c42      	adds	r2, r0, #1
  402374:	4606      	mov	r6, r0
  402376:	d025      	beq.n	4023c4 <__fputwc+0x74>
  402378:	b3a8      	cbz	r0, 4023e6 <__fputwc+0x96>
  40237a:	f89d e004 	ldrb.w	lr, [sp, #4]
  40237e:	2500      	movs	r5, #0
  402380:	f10d 0a04 	add.w	sl, sp, #4
  402384:	e009      	b.n	40239a <__fputwc+0x4a>
  402386:	6823      	ldr	r3, [r4, #0]
  402388:	1c5a      	adds	r2, r3, #1
  40238a:	6022      	str	r2, [r4, #0]
  40238c:	f883 e000 	strb.w	lr, [r3]
  402390:	3501      	adds	r5, #1
  402392:	42b5      	cmp	r5, r6
  402394:	d227      	bcs.n	4023e6 <__fputwc+0x96>
  402396:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40239a:	68a3      	ldr	r3, [r4, #8]
  40239c:	3b01      	subs	r3, #1
  40239e:	2b00      	cmp	r3, #0
  4023a0:	60a3      	str	r3, [r4, #8]
  4023a2:	daf0      	bge.n	402386 <__fputwc+0x36>
  4023a4:	69a7      	ldr	r7, [r4, #24]
  4023a6:	42bb      	cmp	r3, r7
  4023a8:	4671      	mov	r1, lr
  4023aa:	4622      	mov	r2, r4
  4023ac:	4640      	mov	r0, r8
  4023ae:	db02      	blt.n	4023b6 <__fputwc+0x66>
  4023b0:	f1be 0f0a 	cmp.w	lr, #10
  4023b4:	d1e7      	bne.n	402386 <__fputwc+0x36>
  4023b6:	f001 fa95 	bl	4038e4 <__swbuf_r>
  4023ba:	1c43      	adds	r3, r0, #1
  4023bc:	d1e8      	bne.n	402390 <__fputwc+0x40>
  4023be:	b002      	add	sp, #8
  4023c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4023c4:	89a3      	ldrh	r3, [r4, #12]
  4023c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4023ca:	81a3      	strh	r3, [r4, #12]
  4023cc:	b002      	add	sp, #8
  4023ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4023d2:	f109 33ff 	add.w	r3, r9, #4294967295
  4023d6:	2bfe      	cmp	r3, #254	; 0xfe
  4023d8:	d8c4      	bhi.n	402364 <__fputwc+0x14>
  4023da:	fa5f fe89 	uxtb.w	lr, r9
  4023de:	4606      	mov	r6, r0
  4023e0:	f88d e004 	strb.w	lr, [sp, #4]
  4023e4:	e7cb      	b.n	40237e <__fputwc+0x2e>
  4023e6:	4648      	mov	r0, r9
  4023e8:	b002      	add	sp, #8
  4023ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4023ee:	bf00      	nop

004023f0 <_fputwc_r>:
  4023f0:	b530      	push	{r4, r5, lr}
  4023f2:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4023f4:	f013 0f01 	tst.w	r3, #1
  4023f8:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4023fc:	4614      	mov	r4, r2
  4023fe:	b083      	sub	sp, #12
  402400:	4605      	mov	r5, r0
  402402:	b29a      	uxth	r2, r3
  402404:	d101      	bne.n	40240a <_fputwc_r+0x1a>
  402406:	0590      	lsls	r0, r2, #22
  402408:	d51c      	bpl.n	402444 <_fputwc_r+0x54>
  40240a:	0490      	lsls	r0, r2, #18
  40240c:	d406      	bmi.n	40241c <_fputwc_r+0x2c>
  40240e:	6e62      	ldr	r2, [r4, #100]	; 0x64
  402410:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402414:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  402418:	81a3      	strh	r3, [r4, #12]
  40241a:	6662      	str	r2, [r4, #100]	; 0x64
  40241c:	4628      	mov	r0, r5
  40241e:	4622      	mov	r2, r4
  402420:	f7ff ff96 	bl	402350 <__fputwc>
  402424:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402426:	07da      	lsls	r2, r3, #31
  402428:	4605      	mov	r5, r0
  40242a:	d402      	bmi.n	402432 <_fputwc_r+0x42>
  40242c:	89a3      	ldrh	r3, [r4, #12]
  40242e:	059b      	lsls	r3, r3, #22
  402430:	d502      	bpl.n	402438 <_fputwc_r+0x48>
  402432:	4628      	mov	r0, r5
  402434:	b003      	add	sp, #12
  402436:	bd30      	pop	{r4, r5, pc}
  402438:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40243a:	f000 fb1f 	bl	402a7c <__retarget_lock_release_recursive>
  40243e:	4628      	mov	r0, r5
  402440:	b003      	add	sp, #12
  402442:	bd30      	pop	{r4, r5, pc}
  402444:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402446:	9101      	str	r1, [sp, #4]
  402448:	f000 fb16 	bl	402a78 <__retarget_lock_acquire_recursive>
  40244c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402450:	9901      	ldr	r1, [sp, #4]
  402452:	b29a      	uxth	r2, r3
  402454:	e7d9      	b.n	40240a <_fputwc_r+0x1a>
  402456:	bf00      	nop

00402458 <_malloc_trim_r>:
  402458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40245a:	4f24      	ldr	r7, [pc, #144]	; (4024ec <_malloc_trim_r+0x94>)
  40245c:	460c      	mov	r4, r1
  40245e:	4606      	mov	r6, r0
  402460:	f000 ffa4 	bl	4033ac <__malloc_lock>
  402464:	68bb      	ldr	r3, [r7, #8]
  402466:	685d      	ldr	r5, [r3, #4]
  402468:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40246c:	310f      	adds	r1, #15
  40246e:	f025 0503 	bic.w	r5, r5, #3
  402472:	4429      	add	r1, r5
  402474:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402478:	f021 010f 	bic.w	r1, r1, #15
  40247c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402480:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402484:	db07      	blt.n	402496 <_malloc_trim_r+0x3e>
  402486:	2100      	movs	r1, #0
  402488:	4630      	mov	r0, r6
  40248a:	f001 f9d5 	bl	403838 <_sbrk_r>
  40248e:	68bb      	ldr	r3, [r7, #8]
  402490:	442b      	add	r3, r5
  402492:	4298      	cmp	r0, r3
  402494:	d004      	beq.n	4024a0 <_malloc_trim_r+0x48>
  402496:	4630      	mov	r0, r6
  402498:	f000 ff8e 	bl	4033b8 <__malloc_unlock>
  40249c:	2000      	movs	r0, #0
  40249e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4024a0:	4261      	negs	r1, r4
  4024a2:	4630      	mov	r0, r6
  4024a4:	f001 f9c8 	bl	403838 <_sbrk_r>
  4024a8:	3001      	adds	r0, #1
  4024aa:	d00d      	beq.n	4024c8 <_malloc_trim_r+0x70>
  4024ac:	4b10      	ldr	r3, [pc, #64]	; (4024f0 <_malloc_trim_r+0x98>)
  4024ae:	68ba      	ldr	r2, [r7, #8]
  4024b0:	6819      	ldr	r1, [r3, #0]
  4024b2:	1b2d      	subs	r5, r5, r4
  4024b4:	f045 0501 	orr.w	r5, r5, #1
  4024b8:	4630      	mov	r0, r6
  4024ba:	1b09      	subs	r1, r1, r4
  4024bc:	6055      	str	r5, [r2, #4]
  4024be:	6019      	str	r1, [r3, #0]
  4024c0:	f000 ff7a 	bl	4033b8 <__malloc_unlock>
  4024c4:	2001      	movs	r0, #1
  4024c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4024c8:	2100      	movs	r1, #0
  4024ca:	4630      	mov	r0, r6
  4024cc:	f001 f9b4 	bl	403838 <_sbrk_r>
  4024d0:	68ba      	ldr	r2, [r7, #8]
  4024d2:	1a83      	subs	r3, r0, r2
  4024d4:	2b0f      	cmp	r3, #15
  4024d6:	ddde      	ble.n	402496 <_malloc_trim_r+0x3e>
  4024d8:	4c06      	ldr	r4, [pc, #24]	; (4024f4 <_malloc_trim_r+0x9c>)
  4024da:	4905      	ldr	r1, [pc, #20]	; (4024f0 <_malloc_trim_r+0x98>)
  4024dc:	6824      	ldr	r4, [r4, #0]
  4024de:	f043 0301 	orr.w	r3, r3, #1
  4024e2:	1b00      	subs	r0, r0, r4
  4024e4:	6053      	str	r3, [r2, #4]
  4024e6:	6008      	str	r0, [r1, #0]
  4024e8:	e7d5      	b.n	402496 <_malloc_trim_r+0x3e>
  4024ea:	bf00      	nop
  4024ec:	200005b0 	.word	0x200005b0
  4024f0:	20000a54 	.word	0x20000a54
  4024f4:	200009b8 	.word	0x200009b8

004024f8 <_free_r>:
  4024f8:	2900      	cmp	r1, #0
  4024fa:	d044      	beq.n	402586 <_free_r+0x8e>
  4024fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402500:	460d      	mov	r5, r1
  402502:	4680      	mov	r8, r0
  402504:	f000 ff52 	bl	4033ac <__malloc_lock>
  402508:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40250c:	4969      	ldr	r1, [pc, #420]	; (4026b4 <_free_r+0x1bc>)
  40250e:	f027 0301 	bic.w	r3, r7, #1
  402512:	f1a5 0408 	sub.w	r4, r5, #8
  402516:	18e2      	adds	r2, r4, r3
  402518:	688e      	ldr	r6, [r1, #8]
  40251a:	6850      	ldr	r0, [r2, #4]
  40251c:	42b2      	cmp	r2, r6
  40251e:	f020 0003 	bic.w	r0, r0, #3
  402522:	d05e      	beq.n	4025e2 <_free_r+0xea>
  402524:	07fe      	lsls	r6, r7, #31
  402526:	6050      	str	r0, [r2, #4]
  402528:	d40b      	bmi.n	402542 <_free_r+0x4a>
  40252a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40252e:	1be4      	subs	r4, r4, r7
  402530:	f101 0e08 	add.w	lr, r1, #8
  402534:	68a5      	ldr	r5, [r4, #8]
  402536:	4575      	cmp	r5, lr
  402538:	443b      	add	r3, r7
  40253a:	d06d      	beq.n	402618 <_free_r+0x120>
  40253c:	68e7      	ldr	r7, [r4, #12]
  40253e:	60ef      	str	r7, [r5, #12]
  402540:	60bd      	str	r5, [r7, #8]
  402542:	1815      	adds	r5, r2, r0
  402544:	686d      	ldr	r5, [r5, #4]
  402546:	07ed      	lsls	r5, r5, #31
  402548:	d53e      	bpl.n	4025c8 <_free_r+0xd0>
  40254a:	f043 0201 	orr.w	r2, r3, #1
  40254e:	6062      	str	r2, [r4, #4]
  402550:	50e3      	str	r3, [r4, r3]
  402552:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402556:	d217      	bcs.n	402588 <_free_r+0x90>
  402558:	08db      	lsrs	r3, r3, #3
  40255a:	1c58      	adds	r0, r3, #1
  40255c:	109a      	asrs	r2, r3, #2
  40255e:	684d      	ldr	r5, [r1, #4]
  402560:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  402564:	60a7      	str	r7, [r4, #8]
  402566:	2301      	movs	r3, #1
  402568:	4093      	lsls	r3, r2
  40256a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40256e:	432b      	orrs	r3, r5
  402570:	3a08      	subs	r2, #8
  402572:	60e2      	str	r2, [r4, #12]
  402574:	604b      	str	r3, [r1, #4]
  402576:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40257a:	60fc      	str	r4, [r7, #12]
  40257c:	4640      	mov	r0, r8
  40257e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402582:	f000 bf19 	b.w	4033b8 <__malloc_unlock>
  402586:	4770      	bx	lr
  402588:	0a5a      	lsrs	r2, r3, #9
  40258a:	2a04      	cmp	r2, #4
  40258c:	d852      	bhi.n	402634 <_free_r+0x13c>
  40258e:	099a      	lsrs	r2, r3, #6
  402590:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402594:	00ff      	lsls	r7, r7, #3
  402596:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40259a:	19c8      	adds	r0, r1, r7
  40259c:	59ca      	ldr	r2, [r1, r7]
  40259e:	3808      	subs	r0, #8
  4025a0:	4290      	cmp	r0, r2
  4025a2:	d04f      	beq.n	402644 <_free_r+0x14c>
  4025a4:	6851      	ldr	r1, [r2, #4]
  4025a6:	f021 0103 	bic.w	r1, r1, #3
  4025aa:	428b      	cmp	r3, r1
  4025ac:	d232      	bcs.n	402614 <_free_r+0x11c>
  4025ae:	6892      	ldr	r2, [r2, #8]
  4025b0:	4290      	cmp	r0, r2
  4025b2:	d1f7      	bne.n	4025a4 <_free_r+0xac>
  4025b4:	68c3      	ldr	r3, [r0, #12]
  4025b6:	60a0      	str	r0, [r4, #8]
  4025b8:	60e3      	str	r3, [r4, #12]
  4025ba:	609c      	str	r4, [r3, #8]
  4025bc:	60c4      	str	r4, [r0, #12]
  4025be:	4640      	mov	r0, r8
  4025c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4025c4:	f000 bef8 	b.w	4033b8 <__malloc_unlock>
  4025c8:	6895      	ldr	r5, [r2, #8]
  4025ca:	4f3b      	ldr	r7, [pc, #236]	; (4026b8 <_free_r+0x1c0>)
  4025cc:	42bd      	cmp	r5, r7
  4025ce:	4403      	add	r3, r0
  4025d0:	d040      	beq.n	402654 <_free_r+0x15c>
  4025d2:	68d0      	ldr	r0, [r2, #12]
  4025d4:	60e8      	str	r0, [r5, #12]
  4025d6:	f043 0201 	orr.w	r2, r3, #1
  4025da:	6085      	str	r5, [r0, #8]
  4025dc:	6062      	str	r2, [r4, #4]
  4025de:	50e3      	str	r3, [r4, r3]
  4025e0:	e7b7      	b.n	402552 <_free_r+0x5a>
  4025e2:	07ff      	lsls	r7, r7, #31
  4025e4:	4403      	add	r3, r0
  4025e6:	d407      	bmi.n	4025f8 <_free_r+0x100>
  4025e8:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4025ec:	1aa4      	subs	r4, r4, r2
  4025ee:	4413      	add	r3, r2
  4025f0:	68a0      	ldr	r0, [r4, #8]
  4025f2:	68e2      	ldr	r2, [r4, #12]
  4025f4:	60c2      	str	r2, [r0, #12]
  4025f6:	6090      	str	r0, [r2, #8]
  4025f8:	4a30      	ldr	r2, [pc, #192]	; (4026bc <_free_r+0x1c4>)
  4025fa:	6812      	ldr	r2, [r2, #0]
  4025fc:	f043 0001 	orr.w	r0, r3, #1
  402600:	4293      	cmp	r3, r2
  402602:	6060      	str	r0, [r4, #4]
  402604:	608c      	str	r4, [r1, #8]
  402606:	d3b9      	bcc.n	40257c <_free_r+0x84>
  402608:	4b2d      	ldr	r3, [pc, #180]	; (4026c0 <_free_r+0x1c8>)
  40260a:	4640      	mov	r0, r8
  40260c:	6819      	ldr	r1, [r3, #0]
  40260e:	f7ff ff23 	bl	402458 <_malloc_trim_r>
  402612:	e7b3      	b.n	40257c <_free_r+0x84>
  402614:	4610      	mov	r0, r2
  402616:	e7cd      	b.n	4025b4 <_free_r+0xbc>
  402618:	1811      	adds	r1, r2, r0
  40261a:	6849      	ldr	r1, [r1, #4]
  40261c:	07c9      	lsls	r1, r1, #31
  40261e:	d444      	bmi.n	4026aa <_free_r+0x1b2>
  402620:	6891      	ldr	r1, [r2, #8]
  402622:	68d2      	ldr	r2, [r2, #12]
  402624:	60ca      	str	r2, [r1, #12]
  402626:	4403      	add	r3, r0
  402628:	f043 0001 	orr.w	r0, r3, #1
  40262c:	6091      	str	r1, [r2, #8]
  40262e:	6060      	str	r0, [r4, #4]
  402630:	50e3      	str	r3, [r4, r3]
  402632:	e7a3      	b.n	40257c <_free_r+0x84>
  402634:	2a14      	cmp	r2, #20
  402636:	d816      	bhi.n	402666 <_free_r+0x16e>
  402638:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40263c:	00ff      	lsls	r7, r7, #3
  40263e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402642:	e7aa      	b.n	40259a <_free_r+0xa2>
  402644:	10aa      	asrs	r2, r5, #2
  402646:	2301      	movs	r3, #1
  402648:	684d      	ldr	r5, [r1, #4]
  40264a:	4093      	lsls	r3, r2
  40264c:	432b      	orrs	r3, r5
  40264e:	604b      	str	r3, [r1, #4]
  402650:	4603      	mov	r3, r0
  402652:	e7b0      	b.n	4025b6 <_free_r+0xbe>
  402654:	f043 0201 	orr.w	r2, r3, #1
  402658:	614c      	str	r4, [r1, #20]
  40265a:	610c      	str	r4, [r1, #16]
  40265c:	60e5      	str	r5, [r4, #12]
  40265e:	60a5      	str	r5, [r4, #8]
  402660:	6062      	str	r2, [r4, #4]
  402662:	50e3      	str	r3, [r4, r3]
  402664:	e78a      	b.n	40257c <_free_r+0x84>
  402666:	2a54      	cmp	r2, #84	; 0x54
  402668:	d806      	bhi.n	402678 <_free_r+0x180>
  40266a:	0b1a      	lsrs	r2, r3, #12
  40266c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402670:	00ff      	lsls	r7, r7, #3
  402672:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402676:	e790      	b.n	40259a <_free_r+0xa2>
  402678:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40267c:	d806      	bhi.n	40268c <_free_r+0x194>
  40267e:	0bda      	lsrs	r2, r3, #15
  402680:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402684:	00ff      	lsls	r7, r7, #3
  402686:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40268a:	e786      	b.n	40259a <_free_r+0xa2>
  40268c:	f240 5054 	movw	r0, #1364	; 0x554
  402690:	4282      	cmp	r2, r0
  402692:	d806      	bhi.n	4026a2 <_free_r+0x1aa>
  402694:	0c9a      	lsrs	r2, r3, #18
  402696:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40269a:	00ff      	lsls	r7, r7, #3
  40269c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4026a0:	e77b      	b.n	40259a <_free_r+0xa2>
  4026a2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4026a6:	257e      	movs	r5, #126	; 0x7e
  4026a8:	e777      	b.n	40259a <_free_r+0xa2>
  4026aa:	f043 0101 	orr.w	r1, r3, #1
  4026ae:	6061      	str	r1, [r4, #4]
  4026b0:	6013      	str	r3, [r2, #0]
  4026b2:	e763      	b.n	40257c <_free_r+0x84>
  4026b4:	200005b0 	.word	0x200005b0
  4026b8:	200005b8 	.word	0x200005b8
  4026bc:	200009bc 	.word	0x200009bc
  4026c0:	20000a84 	.word	0x20000a84

004026c4 <__sfvwrite_r>:
  4026c4:	6893      	ldr	r3, [r2, #8]
  4026c6:	2b00      	cmp	r3, #0
  4026c8:	d073      	beq.n	4027b2 <__sfvwrite_r+0xee>
  4026ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4026ce:	898b      	ldrh	r3, [r1, #12]
  4026d0:	b083      	sub	sp, #12
  4026d2:	460c      	mov	r4, r1
  4026d4:	0719      	lsls	r1, r3, #28
  4026d6:	9000      	str	r0, [sp, #0]
  4026d8:	4616      	mov	r6, r2
  4026da:	d526      	bpl.n	40272a <__sfvwrite_r+0x66>
  4026dc:	6922      	ldr	r2, [r4, #16]
  4026de:	b322      	cbz	r2, 40272a <__sfvwrite_r+0x66>
  4026e0:	f013 0002 	ands.w	r0, r3, #2
  4026e4:	6835      	ldr	r5, [r6, #0]
  4026e6:	d02c      	beq.n	402742 <__sfvwrite_r+0x7e>
  4026e8:	f04f 0900 	mov.w	r9, #0
  4026ec:	4fb0      	ldr	r7, [pc, #704]	; (4029b0 <__sfvwrite_r+0x2ec>)
  4026ee:	46c8      	mov	r8, r9
  4026f0:	46b2      	mov	sl, r6
  4026f2:	45b8      	cmp	r8, r7
  4026f4:	4643      	mov	r3, r8
  4026f6:	464a      	mov	r2, r9
  4026f8:	bf28      	it	cs
  4026fa:	463b      	movcs	r3, r7
  4026fc:	9800      	ldr	r0, [sp, #0]
  4026fe:	f1b8 0f00 	cmp.w	r8, #0
  402702:	d050      	beq.n	4027a6 <__sfvwrite_r+0xe2>
  402704:	69e1      	ldr	r1, [r4, #28]
  402706:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402708:	47b0      	blx	r6
  40270a:	2800      	cmp	r0, #0
  40270c:	dd58      	ble.n	4027c0 <__sfvwrite_r+0xfc>
  40270e:	f8da 3008 	ldr.w	r3, [sl, #8]
  402712:	1a1b      	subs	r3, r3, r0
  402714:	4481      	add	r9, r0
  402716:	eba8 0800 	sub.w	r8, r8, r0
  40271a:	f8ca 3008 	str.w	r3, [sl, #8]
  40271e:	2b00      	cmp	r3, #0
  402720:	d1e7      	bne.n	4026f2 <__sfvwrite_r+0x2e>
  402722:	2000      	movs	r0, #0
  402724:	b003      	add	sp, #12
  402726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40272a:	4621      	mov	r1, r4
  40272c:	9800      	ldr	r0, [sp, #0]
  40272e:	f7ff fc3f 	bl	401fb0 <__swsetup_r>
  402732:	2800      	cmp	r0, #0
  402734:	f040 8133 	bne.w	40299e <__sfvwrite_r+0x2da>
  402738:	89a3      	ldrh	r3, [r4, #12]
  40273a:	6835      	ldr	r5, [r6, #0]
  40273c:	f013 0002 	ands.w	r0, r3, #2
  402740:	d1d2      	bne.n	4026e8 <__sfvwrite_r+0x24>
  402742:	f013 0901 	ands.w	r9, r3, #1
  402746:	d145      	bne.n	4027d4 <__sfvwrite_r+0x110>
  402748:	464f      	mov	r7, r9
  40274a:	9601      	str	r6, [sp, #4]
  40274c:	b337      	cbz	r7, 40279c <__sfvwrite_r+0xd8>
  40274e:	059a      	lsls	r2, r3, #22
  402750:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402754:	f140 8083 	bpl.w	40285e <__sfvwrite_r+0x19a>
  402758:	4547      	cmp	r7, r8
  40275a:	46c3      	mov	fp, r8
  40275c:	f0c0 80ab 	bcc.w	4028b6 <__sfvwrite_r+0x1f2>
  402760:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402764:	f040 80ac 	bne.w	4028c0 <__sfvwrite_r+0x1fc>
  402768:	6820      	ldr	r0, [r4, #0]
  40276a:	46ba      	mov	sl, r7
  40276c:	465a      	mov	r2, fp
  40276e:	4649      	mov	r1, r9
  402770:	f000 fdb8 	bl	4032e4 <memmove>
  402774:	68a2      	ldr	r2, [r4, #8]
  402776:	6823      	ldr	r3, [r4, #0]
  402778:	eba2 0208 	sub.w	r2, r2, r8
  40277c:	445b      	add	r3, fp
  40277e:	60a2      	str	r2, [r4, #8]
  402780:	6023      	str	r3, [r4, #0]
  402782:	9a01      	ldr	r2, [sp, #4]
  402784:	6893      	ldr	r3, [r2, #8]
  402786:	eba3 030a 	sub.w	r3, r3, sl
  40278a:	44d1      	add	r9, sl
  40278c:	eba7 070a 	sub.w	r7, r7, sl
  402790:	6093      	str	r3, [r2, #8]
  402792:	2b00      	cmp	r3, #0
  402794:	d0c5      	beq.n	402722 <__sfvwrite_r+0x5e>
  402796:	89a3      	ldrh	r3, [r4, #12]
  402798:	2f00      	cmp	r7, #0
  40279a:	d1d8      	bne.n	40274e <__sfvwrite_r+0x8a>
  40279c:	f8d5 9000 	ldr.w	r9, [r5]
  4027a0:	686f      	ldr	r7, [r5, #4]
  4027a2:	3508      	adds	r5, #8
  4027a4:	e7d2      	b.n	40274c <__sfvwrite_r+0x88>
  4027a6:	f8d5 9000 	ldr.w	r9, [r5]
  4027aa:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4027ae:	3508      	adds	r5, #8
  4027b0:	e79f      	b.n	4026f2 <__sfvwrite_r+0x2e>
  4027b2:	2000      	movs	r0, #0
  4027b4:	4770      	bx	lr
  4027b6:	4621      	mov	r1, r4
  4027b8:	9800      	ldr	r0, [sp, #0]
  4027ba:	f7ff fd0d 	bl	4021d8 <_fflush_r>
  4027be:	b370      	cbz	r0, 40281e <__sfvwrite_r+0x15a>
  4027c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4027c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4027c8:	f04f 30ff 	mov.w	r0, #4294967295
  4027cc:	81a3      	strh	r3, [r4, #12]
  4027ce:	b003      	add	sp, #12
  4027d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4027d4:	4681      	mov	r9, r0
  4027d6:	4633      	mov	r3, r6
  4027d8:	464e      	mov	r6, r9
  4027da:	46a8      	mov	r8, r5
  4027dc:	469a      	mov	sl, r3
  4027de:	464d      	mov	r5, r9
  4027e0:	b34e      	cbz	r6, 402836 <__sfvwrite_r+0x172>
  4027e2:	b380      	cbz	r0, 402846 <__sfvwrite_r+0x182>
  4027e4:	6820      	ldr	r0, [r4, #0]
  4027e6:	6923      	ldr	r3, [r4, #16]
  4027e8:	6962      	ldr	r2, [r4, #20]
  4027ea:	45b1      	cmp	r9, r6
  4027ec:	46cb      	mov	fp, r9
  4027ee:	bf28      	it	cs
  4027f0:	46b3      	movcs	fp, r6
  4027f2:	4298      	cmp	r0, r3
  4027f4:	465f      	mov	r7, fp
  4027f6:	d904      	bls.n	402802 <__sfvwrite_r+0x13e>
  4027f8:	68a3      	ldr	r3, [r4, #8]
  4027fa:	4413      	add	r3, r2
  4027fc:	459b      	cmp	fp, r3
  4027fe:	f300 80a6 	bgt.w	40294e <__sfvwrite_r+0x28a>
  402802:	4593      	cmp	fp, r2
  402804:	db4b      	blt.n	40289e <__sfvwrite_r+0x1da>
  402806:	4613      	mov	r3, r2
  402808:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40280a:	69e1      	ldr	r1, [r4, #28]
  40280c:	9800      	ldr	r0, [sp, #0]
  40280e:	462a      	mov	r2, r5
  402810:	47b8      	blx	r7
  402812:	1e07      	subs	r7, r0, #0
  402814:	ddd4      	ble.n	4027c0 <__sfvwrite_r+0xfc>
  402816:	ebb9 0907 	subs.w	r9, r9, r7
  40281a:	d0cc      	beq.n	4027b6 <__sfvwrite_r+0xf2>
  40281c:	2001      	movs	r0, #1
  40281e:	f8da 3008 	ldr.w	r3, [sl, #8]
  402822:	1bdb      	subs	r3, r3, r7
  402824:	443d      	add	r5, r7
  402826:	1bf6      	subs	r6, r6, r7
  402828:	f8ca 3008 	str.w	r3, [sl, #8]
  40282c:	2b00      	cmp	r3, #0
  40282e:	f43f af78 	beq.w	402722 <__sfvwrite_r+0x5e>
  402832:	2e00      	cmp	r6, #0
  402834:	d1d5      	bne.n	4027e2 <__sfvwrite_r+0x11e>
  402836:	f108 0308 	add.w	r3, r8, #8
  40283a:	e913 0060 	ldmdb	r3, {r5, r6}
  40283e:	4698      	mov	r8, r3
  402840:	3308      	adds	r3, #8
  402842:	2e00      	cmp	r6, #0
  402844:	d0f9      	beq.n	40283a <__sfvwrite_r+0x176>
  402846:	4632      	mov	r2, r6
  402848:	210a      	movs	r1, #10
  40284a:	4628      	mov	r0, r5
  40284c:	f000 fc60 	bl	403110 <memchr>
  402850:	2800      	cmp	r0, #0
  402852:	f000 80a1 	beq.w	402998 <__sfvwrite_r+0x2d4>
  402856:	3001      	adds	r0, #1
  402858:	eba0 0905 	sub.w	r9, r0, r5
  40285c:	e7c2      	b.n	4027e4 <__sfvwrite_r+0x120>
  40285e:	6820      	ldr	r0, [r4, #0]
  402860:	6923      	ldr	r3, [r4, #16]
  402862:	4298      	cmp	r0, r3
  402864:	d802      	bhi.n	40286c <__sfvwrite_r+0x1a8>
  402866:	6963      	ldr	r3, [r4, #20]
  402868:	429f      	cmp	r7, r3
  40286a:	d25d      	bcs.n	402928 <__sfvwrite_r+0x264>
  40286c:	45b8      	cmp	r8, r7
  40286e:	bf28      	it	cs
  402870:	46b8      	movcs	r8, r7
  402872:	4642      	mov	r2, r8
  402874:	4649      	mov	r1, r9
  402876:	f000 fd35 	bl	4032e4 <memmove>
  40287a:	68a3      	ldr	r3, [r4, #8]
  40287c:	6822      	ldr	r2, [r4, #0]
  40287e:	eba3 0308 	sub.w	r3, r3, r8
  402882:	4442      	add	r2, r8
  402884:	60a3      	str	r3, [r4, #8]
  402886:	6022      	str	r2, [r4, #0]
  402888:	b10b      	cbz	r3, 40288e <__sfvwrite_r+0x1ca>
  40288a:	46c2      	mov	sl, r8
  40288c:	e779      	b.n	402782 <__sfvwrite_r+0xbe>
  40288e:	4621      	mov	r1, r4
  402890:	9800      	ldr	r0, [sp, #0]
  402892:	f7ff fca1 	bl	4021d8 <_fflush_r>
  402896:	2800      	cmp	r0, #0
  402898:	d192      	bne.n	4027c0 <__sfvwrite_r+0xfc>
  40289a:	46c2      	mov	sl, r8
  40289c:	e771      	b.n	402782 <__sfvwrite_r+0xbe>
  40289e:	465a      	mov	r2, fp
  4028a0:	4629      	mov	r1, r5
  4028a2:	f000 fd1f 	bl	4032e4 <memmove>
  4028a6:	68a2      	ldr	r2, [r4, #8]
  4028a8:	6823      	ldr	r3, [r4, #0]
  4028aa:	eba2 020b 	sub.w	r2, r2, fp
  4028ae:	445b      	add	r3, fp
  4028b0:	60a2      	str	r2, [r4, #8]
  4028b2:	6023      	str	r3, [r4, #0]
  4028b4:	e7af      	b.n	402816 <__sfvwrite_r+0x152>
  4028b6:	6820      	ldr	r0, [r4, #0]
  4028b8:	46b8      	mov	r8, r7
  4028ba:	46ba      	mov	sl, r7
  4028bc:	46bb      	mov	fp, r7
  4028be:	e755      	b.n	40276c <__sfvwrite_r+0xa8>
  4028c0:	6962      	ldr	r2, [r4, #20]
  4028c2:	6820      	ldr	r0, [r4, #0]
  4028c4:	6921      	ldr	r1, [r4, #16]
  4028c6:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  4028ca:	eba0 0a01 	sub.w	sl, r0, r1
  4028ce:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4028d2:	f10a 0001 	add.w	r0, sl, #1
  4028d6:	ea4f 0868 	mov.w	r8, r8, asr #1
  4028da:	4438      	add	r0, r7
  4028dc:	4540      	cmp	r0, r8
  4028de:	4642      	mov	r2, r8
  4028e0:	bf84      	itt	hi
  4028e2:	4680      	movhi	r8, r0
  4028e4:	4642      	movhi	r2, r8
  4028e6:	055b      	lsls	r3, r3, #21
  4028e8:	d544      	bpl.n	402974 <__sfvwrite_r+0x2b0>
  4028ea:	4611      	mov	r1, r2
  4028ec:	9800      	ldr	r0, [sp, #0]
  4028ee:	f000 f947 	bl	402b80 <_malloc_r>
  4028f2:	4683      	mov	fp, r0
  4028f4:	2800      	cmp	r0, #0
  4028f6:	d055      	beq.n	4029a4 <__sfvwrite_r+0x2e0>
  4028f8:	4652      	mov	r2, sl
  4028fa:	6921      	ldr	r1, [r4, #16]
  4028fc:	f000 fc58 	bl	4031b0 <memcpy>
  402900:	89a3      	ldrh	r3, [r4, #12]
  402902:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  402906:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40290a:	81a3      	strh	r3, [r4, #12]
  40290c:	eb0b 000a 	add.w	r0, fp, sl
  402910:	eba8 030a 	sub.w	r3, r8, sl
  402914:	f8c4 b010 	str.w	fp, [r4, #16]
  402918:	f8c4 8014 	str.w	r8, [r4, #20]
  40291c:	6020      	str	r0, [r4, #0]
  40291e:	60a3      	str	r3, [r4, #8]
  402920:	46b8      	mov	r8, r7
  402922:	46ba      	mov	sl, r7
  402924:	46bb      	mov	fp, r7
  402926:	e721      	b.n	40276c <__sfvwrite_r+0xa8>
  402928:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  40292c:	42b9      	cmp	r1, r7
  40292e:	bf28      	it	cs
  402930:	4639      	movcs	r1, r7
  402932:	464a      	mov	r2, r9
  402934:	fb91 f1f3 	sdiv	r1, r1, r3
  402938:	9800      	ldr	r0, [sp, #0]
  40293a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40293c:	fb03 f301 	mul.w	r3, r3, r1
  402940:	69e1      	ldr	r1, [r4, #28]
  402942:	47b0      	blx	r6
  402944:	f1b0 0a00 	subs.w	sl, r0, #0
  402948:	f73f af1b 	bgt.w	402782 <__sfvwrite_r+0xbe>
  40294c:	e738      	b.n	4027c0 <__sfvwrite_r+0xfc>
  40294e:	461a      	mov	r2, r3
  402950:	4629      	mov	r1, r5
  402952:	9301      	str	r3, [sp, #4]
  402954:	f000 fcc6 	bl	4032e4 <memmove>
  402958:	6822      	ldr	r2, [r4, #0]
  40295a:	9b01      	ldr	r3, [sp, #4]
  40295c:	9800      	ldr	r0, [sp, #0]
  40295e:	441a      	add	r2, r3
  402960:	6022      	str	r2, [r4, #0]
  402962:	4621      	mov	r1, r4
  402964:	f7ff fc38 	bl	4021d8 <_fflush_r>
  402968:	9b01      	ldr	r3, [sp, #4]
  40296a:	2800      	cmp	r0, #0
  40296c:	f47f af28 	bne.w	4027c0 <__sfvwrite_r+0xfc>
  402970:	461f      	mov	r7, r3
  402972:	e750      	b.n	402816 <__sfvwrite_r+0x152>
  402974:	9800      	ldr	r0, [sp, #0]
  402976:	f000 fd25 	bl	4033c4 <_realloc_r>
  40297a:	4683      	mov	fp, r0
  40297c:	2800      	cmp	r0, #0
  40297e:	d1c5      	bne.n	40290c <__sfvwrite_r+0x248>
  402980:	9d00      	ldr	r5, [sp, #0]
  402982:	6921      	ldr	r1, [r4, #16]
  402984:	4628      	mov	r0, r5
  402986:	f7ff fdb7 	bl	4024f8 <_free_r>
  40298a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40298e:	220c      	movs	r2, #12
  402990:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402994:	602a      	str	r2, [r5, #0]
  402996:	e715      	b.n	4027c4 <__sfvwrite_r+0x100>
  402998:	f106 0901 	add.w	r9, r6, #1
  40299c:	e722      	b.n	4027e4 <__sfvwrite_r+0x120>
  40299e:	f04f 30ff 	mov.w	r0, #4294967295
  4029a2:	e6bf      	b.n	402724 <__sfvwrite_r+0x60>
  4029a4:	9a00      	ldr	r2, [sp, #0]
  4029a6:	230c      	movs	r3, #12
  4029a8:	6013      	str	r3, [r2, #0]
  4029aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4029ae:	e709      	b.n	4027c4 <__sfvwrite_r+0x100>
  4029b0:	7ffffc00 	.word	0x7ffffc00

004029b4 <_fwalk>:
  4029b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4029b8:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4029bc:	d01b      	beq.n	4029f6 <_fwalk+0x42>
  4029be:	4688      	mov	r8, r1
  4029c0:	2600      	movs	r6, #0
  4029c2:	687d      	ldr	r5, [r7, #4]
  4029c4:	68bc      	ldr	r4, [r7, #8]
  4029c6:	3d01      	subs	r5, #1
  4029c8:	d40f      	bmi.n	4029ea <_fwalk+0x36>
  4029ca:	89a3      	ldrh	r3, [r4, #12]
  4029cc:	2b01      	cmp	r3, #1
  4029ce:	f105 35ff 	add.w	r5, r5, #4294967295
  4029d2:	d906      	bls.n	4029e2 <_fwalk+0x2e>
  4029d4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4029d8:	3301      	adds	r3, #1
  4029da:	4620      	mov	r0, r4
  4029dc:	d001      	beq.n	4029e2 <_fwalk+0x2e>
  4029de:	47c0      	blx	r8
  4029e0:	4306      	orrs	r6, r0
  4029e2:	1c6b      	adds	r3, r5, #1
  4029e4:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4029e8:	d1ef      	bne.n	4029ca <_fwalk+0x16>
  4029ea:	683f      	ldr	r7, [r7, #0]
  4029ec:	2f00      	cmp	r7, #0
  4029ee:	d1e8      	bne.n	4029c2 <_fwalk+0xe>
  4029f0:	4630      	mov	r0, r6
  4029f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4029f6:	463e      	mov	r6, r7
  4029f8:	4630      	mov	r0, r6
  4029fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4029fe:	bf00      	nop

00402a00 <_fwalk_reent>:
  402a00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402a04:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402a08:	d01f      	beq.n	402a4a <_fwalk_reent+0x4a>
  402a0a:	4688      	mov	r8, r1
  402a0c:	4606      	mov	r6, r0
  402a0e:	f04f 0900 	mov.w	r9, #0
  402a12:	687d      	ldr	r5, [r7, #4]
  402a14:	68bc      	ldr	r4, [r7, #8]
  402a16:	3d01      	subs	r5, #1
  402a18:	d411      	bmi.n	402a3e <_fwalk_reent+0x3e>
  402a1a:	89a3      	ldrh	r3, [r4, #12]
  402a1c:	2b01      	cmp	r3, #1
  402a1e:	f105 35ff 	add.w	r5, r5, #4294967295
  402a22:	d908      	bls.n	402a36 <_fwalk_reent+0x36>
  402a24:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402a28:	3301      	adds	r3, #1
  402a2a:	4621      	mov	r1, r4
  402a2c:	4630      	mov	r0, r6
  402a2e:	d002      	beq.n	402a36 <_fwalk_reent+0x36>
  402a30:	47c0      	blx	r8
  402a32:	ea49 0900 	orr.w	r9, r9, r0
  402a36:	1c6b      	adds	r3, r5, #1
  402a38:	f104 0468 	add.w	r4, r4, #104	; 0x68
  402a3c:	d1ed      	bne.n	402a1a <_fwalk_reent+0x1a>
  402a3e:	683f      	ldr	r7, [r7, #0]
  402a40:	2f00      	cmp	r7, #0
  402a42:	d1e6      	bne.n	402a12 <_fwalk_reent+0x12>
  402a44:	4648      	mov	r0, r9
  402a46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402a4a:	46b9      	mov	r9, r7
  402a4c:	4648      	mov	r0, r9
  402a4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402a52:	bf00      	nop

00402a54 <__locale_mb_cur_max>:
  402a54:	4b04      	ldr	r3, [pc, #16]	; (402a68 <__locale_mb_cur_max+0x14>)
  402a56:	4a05      	ldr	r2, [pc, #20]	; (402a6c <__locale_mb_cur_max+0x18>)
  402a58:	681b      	ldr	r3, [r3, #0]
  402a5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  402a5c:	2b00      	cmp	r3, #0
  402a5e:	bf08      	it	eq
  402a60:	4613      	moveq	r3, r2
  402a62:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  402a66:	4770      	bx	lr
  402a68:	20000014 	.word	0x20000014
  402a6c:	20000444 	.word	0x20000444

00402a70 <__retarget_lock_init_recursive>:
  402a70:	4770      	bx	lr
  402a72:	bf00      	nop

00402a74 <__retarget_lock_close_recursive>:
  402a74:	4770      	bx	lr
  402a76:	bf00      	nop

00402a78 <__retarget_lock_acquire_recursive>:
  402a78:	4770      	bx	lr
  402a7a:	bf00      	nop

00402a7c <__retarget_lock_release_recursive>:
  402a7c:	4770      	bx	lr
  402a7e:	bf00      	nop

00402a80 <__swhatbuf_r>:
  402a80:	b570      	push	{r4, r5, r6, lr}
  402a82:	460c      	mov	r4, r1
  402a84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402a88:	2900      	cmp	r1, #0
  402a8a:	b090      	sub	sp, #64	; 0x40
  402a8c:	4615      	mov	r5, r2
  402a8e:	461e      	mov	r6, r3
  402a90:	db14      	blt.n	402abc <__swhatbuf_r+0x3c>
  402a92:	aa01      	add	r2, sp, #4
  402a94:	f001 f8a2 	bl	403bdc <_fstat_r>
  402a98:	2800      	cmp	r0, #0
  402a9a:	db0f      	blt.n	402abc <__swhatbuf_r+0x3c>
  402a9c:	9a02      	ldr	r2, [sp, #8]
  402a9e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  402aa2:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  402aa6:	fab2 f282 	clz	r2, r2
  402aaa:	0952      	lsrs	r2, r2, #5
  402aac:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402ab0:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402ab4:	6032      	str	r2, [r6, #0]
  402ab6:	602b      	str	r3, [r5, #0]
  402ab8:	b010      	add	sp, #64	; 0x40
  402aba:	bd70      	pop	{r4, r5, r6, pc}
  402abc:	89a2      	ldrh	r2, [r4, #12]
  402abe:	2300      	movs	r3, #0
  402ac0:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402ac4:	6033      	str	r3, [r6, #0]
  402ac6:	d004      	beq.n	402ad2 <__swhatbuf_r+0x52>
  402ac8:	2240      	movs	r2, #64	; 0x40
  402aca:	4618      	mov	r0, r3
  402acc:	602a      	str	r2, [r5, #0]
  402ace:	b010      	add	sp, #64	; 0x40
  402ad0:	bd70      	pop	{r4, r5, r6, pc}
  402ad2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402ad6:	602b      	str	r3, [r5, #0]
  402ad8:	b010      	add	sp, #64	; 0x40
  402ada:	bd70      	pop	{r4, r5, r6, pc}

00402adc <__smakebuf_r>:
  402adc:	898a      	ldrh	r2, [r1, #12]
  402ade:	0792      	lsls	r2, r2, #30
  402ae0:	460b      	mov	r3, r1
  402ae2:	d506      	bpl.n	402af2 <__smakebuf_r+0x16>
  402ae4:	f101 0243 	add.w	r2, r1, #67	; 0x43
  402ae8:	2101      	movs	r1, #1
  402aea:	601a      	str	r2, [r3, #0]
  402aec:	611a      	str	r2, [r3, #16]
  402aee:	6159      	str	r1, [r3, #20]
  402af0:	4770      	bx	lr
  402af2:	b5f0      	push	{r4, r5, r6, r7, lr}
  402af4:	b083      	sub	sp, #12
  402af6:	ab01      	add	r3, sp, #4
  402af8:	466a      	mov	r2, sp
  402afa:	460c      	mov	r4, r1
  402afc:	4606      	mov	r6, r0
  402afe:	f7ff ffbf 	bl	402a80 <__swhatbuf_r>
  402b02:	9900      	ldr	r1, [sp, #0]
  402b04:	4605      	mov	r5, r0
  402b06:	4630      	mov	r0, r6
  402b08:	f000 f83a 	bl	402b80 <_malloc_r>
  402b0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b10:	b1d8      	cbz	r0, 402b4a <__smakebuf_r+0x6e>
  402b12:	9a01      	ldr	r2, [sp, #4]
  402b14:	4f15      	ldr	r7, [pc, #84]	; (402b6c <__smakebuf_r+0x90>)
  402b16:	9900      	ldr	r1, [sp, #0]
  402b18:	63f7      	str	r7, [r6, #60]	; 0x3c
  402b1a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402b1e:	81a3      	strh	r3, [r4, #12]
  402b20:	6020      	str	r0, [r4, #0]
  402b22:	6120      	str	r0, [r4, #16]
  402b24:	6161      	str	r1, [r4, #20]
  402b26:	b91a      	cbnz	r2, 402b30 <__smakebuf_r+0x54>
  402b28:	432b      	orrs	r3, r5
  402b2a:	81a3      	strh	r3, [r4, #12]
  402b2c:	b003      	add	sp, #12
  402b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402b30:	4630      	mov	r0, r6
  402b32:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402b36:	f001 f865 	bl	403c04 <_isatty_r>
  402b3a:	b1a0      	cbz	r0, 402b66 <__smakebuf_r+0x8a>
  402b3c:	89a3      	ldrh	r3, [r4, #12]
  402b3e:	f023 0303 	bic.w	r3, r3, #3
  402b42:	f043 0301 	orr.w	r3, r3, #1
  402b46:	b21b      	sxth	r3, r3
  402b48:	e7ee      	b.n	402b28 <__smakebuf_r+0x4c>
  402b4a:	059a      	lsls	r2, r3, #22
  402b4c:	d4ee      	bmi.n	402b2c <__smakebuf_r+0x50>
  402b4e:	f023 0303 	bic.w	r3, r3, #3
  402b52:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402b56:	f043 0302 	orr.w	r3, r3, #2
  402b5a:	2101      	movs	r1, #1
  402b5c:	81a3      	strh	r3, [r4, #12]
  402b5e:	6022      	str	r2, [r4, #0]
  402b60:	6122      	str	r2, [r4, #16]
  402b62:	6161      	str	r1, [r4, #20]
  402b64:	e7e2      	b.n	402b2c <__smakebuf_r+0x50>
  402b66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b6a:	e7dd      	b.n	402b28 <__smakebuf_r+0x4c>
  402b6c:	00402251 	.word	0x00402251

00402b70 <malloc>:
  402b70:	4b02      	ldr	r3, [pc, #8]	; (402b7c <malloc+0xc>)
  402b72:	4601      	mov	r1, r0
  402b74:	6818      	ldr	r0, [r3, #0]
  402b76:	f000 b803 	b.w	402b80 <_malloc_r>
  402b7a:	bf00      	nop
  402b7c:	20000014 	.word	0x20000014

00402b80 <_malloc_r>:
  402b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402b84:	f101 060b 	add.w	r6, r1, #11
  402b88:	2e16      	cmp	r6, #22
  402b8a:	b083      	sub	sp, #12
  402b8c:	4605      	mov	r5, r0
  402b8e:	f240 809e 	bls.w	402cce <_malloc_r+0x14e>
  402b92:	f036 0607 	bics.w	r6, r6, #7
  402b96:	f100 80bd 	bmi.w	402d14 <_malloc_r+0x194>
  402b9a:	42b1      	cmp	r1, r6
  402b9c:	f200 80ba 	bhi.w	402d14 <_malloc_r+0x194>
  402ba0:	f000 fc04 	bl	4033ac <__malloc_lock>
  402ba4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  402ba8:	f0c0 8293 	bcc.w	4030d2 <_malloc_r+0x552>
  402bac:	0a73      	lsrs	r3, r6, #9
  402bae:	f000 80b8 	beq.w	402d22 <_malloc_r+0x1a2>
  402bb2:	2b04      	cmp	r3, #4
  402bb4:	f200 8179 	bhi.w	402eaa <_malloc_r+0x32a>
  402bb8:	09b3      	lsrs	r3, r6, #6
  402bba:	f103 0039 	add.w	r0, r3, #57	; 0x39
  402bbe:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402bc2:	00c3      	lsls	r3, r0, #3
  402bc4:	4fbf      	ldr	r7, [pc, #764]	; (402ec4 <_malloc_r+0x344>)
  402bc6:	443b      	add	r3, r7
  402bc8:	f1a3 0108 	sub.w	r1, r3, #8
  402bcc:	685c      	ldr	r4, [r3, #4]
  402bce:	42a1      	cmp	r1, r4
  402bd0:	d106      	bne.n	402be0 <_malloc_r+0x60>
  402bd2:	e00c      	b.n	402bee <_malloc_r+0x6e>
  402bd4:	2a00      	cmp	r2, #0
  402bd6:	f280 80aa 	bge.w	402d2e <_malloc_r+0x1ae>
  402bda:	68e4      	ldr	r4, [r4, #12]
  402bdc:	42a1      	cmp	r1, r4
  402bde:	d006      	beq.n	402bee <_malloc_r+0x6e>
  402be0:	6863      	ldr	r3, [r4, #4]
  402be2:	f023 0303 	bic.w	r3, r3, #3
  402be6:	1b9a      	subs	r2, r3, r6
  402be8:	2a0f      	cmp	r2, #15
  402bea:	ddf3      	ble.n	402bd4 <_malloc_r+0x54>
  402bec:	4670      	mov	r0, lr
  402bee:	693c      	ldr	r4, [r7, #16]
  402bf0:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 402ed8 <_malloc_r+0x358>
  402bf4:	4574      	cmp	r4, lr
  402bf6:	f000 81ab 	beq.w	402f50 <_malloc_r+0x3d0>
  402bfa:	6863      	ldr	r3, [r4, #4]
  402bfc:	f023 0303 	bic.w	r3, r3, #3
  402c00:	1b9a      	subs	r2, r3, r6
  402c02:	2a0f      	cmp	r2, #15
  402c04:	f300 8190 	bgt.w	402f28 <_malloc_r+0x3a8>
  402c08:	2a00      	cmp	r2, #0
  402c0a:	f8c7 e014 	str.w	lr, [r7, #20]
  402c0e:	f8c7 e010 	str.w	lr, [r7, #16]
  402c12:	f280 809d 	bge.w	402d50 <_malloc_r+0x1d0>
  402c16:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402c1a:	f080 8161 	bcs.w	402ee0 <_malloc_r+0x360>
  402c1e:	08db      	lsrs	r3, r3, #3
  402c20:	f103 0c01 	add.w	ip, r3, #1
  402c24:	1099      	asrs	r1, r3, #2
  402c26:	687a      	ldr	r2, [r7, #4]
  402c28:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  402c2c:	f8c4 8008 	str.w	r8, [r4, #8]
  402c30:	2301      	movs	r3, #1
  402c32:	408b      	lsls	r3, r1
  402c34:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402c38:	4313      	orrs	r3, r2
  402c3a:	3908      	subs	r1, #8
  402c3c:	60e1      	str	r1, [r4, #12]
  402c3e:	607b      	str	r3, [r7, #4]
  402c40:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  402c44:	f8c8 400c 	str.w	r4, [r8, #12]
  402c48:	1082      	asrs	r2, r0, #2
  402c4a:	2401      	movs	r4, #1
  402c4c:	4094      	lsls	r4, r2
  402c4e:	429c      	cmp	r4, r3
  402c50:	f200 808b 	bhi.w	402d6a <_malloc_r+0x1ea>
  402c54:	421c      	tst	r4, r3
  402c56:	d106      	bne.n	402c66 <_malloc_r+0xe6>
  402c58:	f020 0003 	bic.w	r0, r0, #3
  402c5c:	0064      	lsls	r4, r4, #1
  402c5e:	421c      	tst	r4, r3
  402c60:	f100 0004 	add.w	r0, r0, #4
  402c64:	d0fa      	beq.n	402c5c <_malloc_r+0xdc>
  402c66:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402c6a:	46cc      	mov	ip, r9
  402c6c:	4680      	mov	r8, r0
  402c6e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402c72:	459c      	cmp	ip, r3
  402c74:	d107      	bne.n	402c86 <_malloc_r+0x106>
  402c76:	e16d      	b.n	402f54 <_malloc_r+0x3d4>
  402c78:	2a00      	cmp	r2, #0
  402c7a:	f280 817b 	bge.w	402f74 <_malloc_r+0x3f4>
  402c7e:	68db      	ldr	r3, [r3, #12]
  402c80:	459c      	cmp	ip, r3
  402c82:	f000 8167 	beq.w	402f54 <_malloc_r+0x3d4>
  402c86:	6859      	ldr	r1, [r3, #4]
  402c88:	f021 0103 	bic.w	r1, r1, #3
  402c8c:	1b8a      	subs	r2, r1, r6
  402c8e:	2a0f      	cmp	r2, #15
  402c90:	ddf2      	ble.n	402c78 <_malloc_r+0xf8>
  402c92:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402c96:	f8d3 8008 	ldr.w	r8, [r3, #8]
  402c9a:	9300      	str	r3, [sp, #0]
  402c9c:	199c      	adds	r4, r3, r6
  402c9e:	4628      	mov	r0, r5
  402ca0:	f046 0601 	orr.w	r6, r6, #1
  402ca4:	f042 0501 	orr.w	r5, r2, #1
  402ca8:	605e      	str	r6, [r3, #4]
  402caa:	f8c8 c00c 	str.w	ip, [r8, #12]
  402cae:	f8cc 8008 	str.w	r8, [ip, #8]
  402cb2:	617c      	str	r4, [r7, #20]
  402cb4:	613c      	str	r4, [r7, #16]
  402cb6:	f8c4 e00c 	str.w	lr, [r4, #12]
  402cba:	f8c4 e008 	str.w	lr, [r4, #8]
  402cbe:	6065      	str	r5, [r4, #4]
  402cc0:	505a      	str	r2, [r3, r1]
  402cc2:	f000 fb79 	bl	4033b8 <__malloc_unlock>
  402cc6:	9b00      	ldr	r3, [sp, #0]
  402cc8:	f103 0408 	add.w	r4, r3, #8
  402ccc:	e01e      	b.n	402d0c <_malloc_r+0x18c>
  402cce:	2910      	cmp	r1, #16
  402cd0:	d820      	bhi.n	402d14 <_malloc_r+0x194>
  402cd2:	f000 fb6b 	bl	4033ac <__malloc_lock>
  402cd6:	2610      	movs	r6, #16
  402cd8:	2318      	movs	r3, #24
  402cda:	2002      	movs	r0, #2
  402cdc:	4f79      	ldr	r7, [pc, #484]	; (402ec4 <_malloc_r+0x344>)
  402cde:	443b      	add	r3, r7
  402ce0:	f1a3 0208 	sub.w	r2, r3, #8
  402ce4:	685c      	ldr	r4, [r3, #4]
  402ce6:	4294      	cmp	r4, r2
  402ce8:	f000 813d 	beq.w	402f66 <_malloc_r+0x3e6>
  402cec:	6863      	ldr	r3, [r4, #4]
  402cee:	68e1      	ldr	r1, [r4, #12]
  402cf0:	68a6      	ldr	r6, [r4, #8]
  402cf2:	f023 0303 	bic.w	r3, r3, #3
  402cf6:	4423      	add	r3, r4
  402cf8:	4628      	mov	r0, r5
  402cfa:	685a      	ldr	r2, [r3, #4]
  402cfc:	60f1      	str	r1, [r6, #12]
  402cfe:	f042 0201 	orr.w	r2, r2, #1
  402d02:	608e      	str	r6, [r1, #8]
  402d04:	605a      	str	r2, [r3, #4]
  402d06:	f000 fb57 	bl	4033b8 <__malloc_unlock>
  402d0a:	3408      	adds	r4, #8
  402d0c:	4620      	mov	r0, r4
  402d0e:	b003      	add	sp, #12
  402d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d14:	2400      	movs	r4, #0
  402d16:	230c      	movs	r3, #12
  402d18:	4620      	mov	r0, r4
  402d1a:	602b      	str	r3, [r5, #0]
  402d1c:	b003      	add	sp, #12
  402d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d22:	2040      	movs	r0, #64	; 0x40
  402d24:	f44f 7300 	mov.w	r3, #512	; 0x200
  402d28:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402d2c:	e74a      	b.n	402bc4 <_malloc_r+0x44>
  402d2e:	4423      	add	r3, r4
  402d30:	68e1      	ldr	r1, [r4, #12]
  402d32:	685a      	ldr	r2, [r3, #4]
  402d34:	68a6      	ldr	r6, [r4, #8]
  402d36:	f042 0201 	orr.w	r2, r2, #1
  402d3a:	60f1      	str	r1, [r6, #12]
  402d3c:	4628      	mov	r0, r5
  402d3e:	608e      	str	r6, [r1, #8]
  402d40:	605a      	str	r2, [r3, #4]
  402d42:	f000 fb39 	bl	4033b8 <__malloc_unlock>
  402d46:	3408      	adds	r4, #8
  402d48:	4620      	mov	r0, r4
  402d4a:	b003      	add	sp, #12
  402d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d50:	4423      	add	r3, r4
  402d52:	4628      	mov	r0, r5
  402d54:	685a      	ldr	r2, [r3, #4]
  402d56:	f042 0201 	orr.w	r2, r2, #1
  402d5a:	605a      	str	r2, [r3, #4]
  402d5c:	f000 fb2c 	bl	4033b8 <__malloc_unlock>
  402d60:	3408      	adds	r4, #8
  402d62:	4620      	mov	r0, r4
  402d64:	b003      	add	sp, #12
  402d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d6a:	68bc      	ldr	r4, [r7, #8]
  402d6c:	6863      	ldr	r3, [r4, #4]
  402d6e:	f023 0803 	bic.w	r8, r3, #3
  402d72:	45b0      	cmp	r8, r6
  402d74:	d304      	bcc.n	402d80 <_malloc_r+0x200>
  402d76:	eba8 0306 	sub.w	r3, r8, r6
  402d7a:	2b0f      	cmp	r3, #15
  402d7c:	f300 8085 	bgt.w	402e8a <_malloc_r+0x30a>
  402d80:	f8df 9158 	ldr.w	r9, [pc, #344]	; 402edc <_malloc_r+0x35c>
  402d84:	4b50      	ldr	r3, [pc, #320]	; (402ec8 <_malloc_r+0x348>)
  402d86:	f8d9 2000 	ldr.w	r2, [r9]
  402d8a:	681b      	ldr	r3, [r3, #0]
  402d8c:	3201      	adds	r2, #1
  402d8e:	4433      	add	r3, r6
  402d90:	eb04 0a08 	add.w	sl, r4, r8
  402d94:	f000 8155 	beq.w	403042 <_malloc_r+0x4c2>
  402d98:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  402d9c:	330f      	adds	r3, #15
  402d9e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  402da2:	f02b 0b0f 	bic.w	fp, fp, #15
  402da6:	4659      	mov	r1, fp
  402da8:	4628      	mov	r0, r5
  402daa:	f000 fd45 	bl	403838 <_sbrk_r>
  402dae:	1c41      	adds	r1, r0, #1
  402db0:	4602      	mov	r2, r0
  402db2:	f000 80fc 	beq.w	402fae <_malloc_r+0x42e>
  402db6:	4582      	cmp	sl, r0
  402db8:	f200 80f7 	bhi.w	402faa <_malloc_r+0x42a>
  402dbc:	4b43      	ldr	r3, [pc, #268]	; (402ecc <_malloc_r+0x34c>)
  402dbe:	6819      	ldr	r1, [r3, #0]
  402dc0:	4459      	add	r1, fp
  402dc2:	6019      	str	r1, [r3, #0]
  402dc4:	f000 814d 	beq.w	403062 <_malloc_r+0x4e2>
  402dc8:	f8d9 0000 	ldr.w	r0, [r9]
  402dcc:	3001      	adds	r0, #1
  402dce:	bf1b      	ittet	ne
  402dd0:	eba2 0a0a 	subne.w	sl, r2, sl
  402dd4:	4451      	addne	r1, sl
  402dd6:	f8c9 2000 	streq.w	r2, [r9]
  402dda:	6019      	strne	r1, [r3, #0]
  402ddc:	f012 0107 	ands.w	r1, r2, #7
  402de0:	f000 8115 	beq.w	40300e <_malloc_r+0x48e>
  402de4:	f1c1 0008 	rsb	r0, r1, #8
  402de8:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  402dec:	4402      	add	r2, r0
  402dee:	3108      	adds	r1, #8
  402df0:	eb02 090b 	add.w	r9, r2, fp
  402df4:	f3c9 090b 	ubfx	r9, r9, #0, #12
  402df8:	eba1 0909 	sub.w	r9, r1, r9
  402dfc:	4649      	mov	r1, r9
  402dfe:	4628      	mov	r0, r5
  402e00:	9301      	str	r3, [sp, #4]
  402e02:	9200      	str	r2, [sp, #0]
  402e04:	f000 fd18 	bl	403838 <_sbrk_r>
  402e08:	1c43      	adds	r3, r0, #1
  402e0a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  402e0e:	f000 8143 	beq.w	403098 <_malloc_r+0x518>
  402e12:	1a80      	subs	r0, r0, r2
  402e14:	4448      	add	r0, r9
  402e16:	f040 0001 	orr.w	r0, r0, #1
  402e1a:	6819      	ldr	r1, [r3, #0]
  402e1c:	60ba      	str	r2, [r7, #8]
  402e1e:	4449      	add	r1, r9
  402e20:	42bc      	cmp	r4, r7
  402e22:	6050      	str	r0, [r2, #4]
  402e24:	6019      	str	r1, [r3, #0]
  402e26:	d017      	beq.n	402e58 <_malloc_r+0x2d8>
  402e28:	f1b8 0f0f 	cmp.w	r8, #15
  402e2c:	f240 80fb 	bls.w	403026 <_malloc_r+0x4a6>
  402e30:	6860      	ldr	r0, [r4, #4]
  402e32:	f1a8 020c 	sub.w	r2, r8, #12
  402e36:	f022 0207 	bic.w	r2, r2, #7
  402e3a:	eb04 0e02 	add.w	lr, r4, r2
  402e3e:	f000 0001 	and.w	r0, r0, #1
  402e42:	f04f 0c05 	mov.w	ip, #5
  402e46:	4310      	orrs	r0, r2
  402e48:	2a0f      	cmp	r2, #15
  402e4a:	6060      	str	r0, [r4, #4]
  402e4c:	f8ce c004 	str.w	ip, [lr, #4]
  402e50:	f8ce c008 	str.w	ip, [lr, #8]
  402e54:	f200 8117 	bhi.w	403086 <_malloc_r+0x506>
  402e58:	4b1d      	ldr	r3, [pc, #116]	; (402ed0 <_malloc_r+0x350>)
  402e5a:	68bc      	ldr	r4, [r7, #8]
  402e5c:	681a      	ldr	r2, [r3, #0]
  402e5e:	4291      	cmp	r1, r2
  402e60:	bf88      	it	hi
  402e62:	6019      	strhi	r1, [r3, #0]
  402e64:	4b1b      	ldr	r3, [pc, #108]	; (402ed4 <_malloc_r+0x354>)
  402e66:	681a      	ldr	r2, [r3, #0]
  402e68:	4291      	cmp	r1, r2
  402e6a:	6862      	ldr	r2, [r4, #4]
  402e6c:	bf88      	it	hi
  402e6e:	6019      	strhi	r1, [r3, #0]
  402e70:	f022 0203 	bic.w	r2, r2, #3
  402e74:	4296      	cmp	r6, r2
  402e76:	eba2 0306 	sub.w	r3, r2, r6
  402e7a:	d801      	bhi.n	402e80 <_malloc_r+0x300>
  402e7c:	2b0f      	cmp	r3, #15
  402e7e:	dc04      	bgt.n	402e8a <_malloc_r+0x30a>
  402e80:	4628      	mov	r0, r5
  402e82:	f000 fa99 	bl	4033b8 <__malloc_unlock>
  402e86:	2400      	movs	r4, #0
  402e88:	e740      	b.n	402d0c <_malloc_r+0x18c>
  402e8a:	19a2      	adds	r2, r4, r6
  402e8c:	f043 0301 	orr.w	r3, r3, #1
  402e90:	f046 0601 	orr.w	r6, r6, #1
  402e94:	6066      	str	r6, [r4, #4]
  402e96:	4628      	mov	r0, r5
  402e98:	60ba      	str	r2, [r7, #8]
  402e9a:	6053      	str	r3, [r2, #4]
  402e9c:	f000 fa8c 	bl	4033b8 <__malloc_unlock>
  402ea0:	3408      	adds	r4, #8
  402ea2:	4620      	mov	r0, r4
  402ea4:	b003      	add	sp, #12
  402ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402eaa:	2b14      	cmp	r3, #20
  402eac:	d971      	bls.n	402f92 <_malloc_r+0x412>
  402eae:	2b54      	cmp	r3, #84	; 0x54
  402eb0:	f200 80a3 	bhi.w	402ffa <_malloc_r+0x47a>
  402eb4:	0b33      	lsrs	r3, r6, #12
  402eb6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  402eba:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  402ebe:	00c3      	lsls	r3, r0, #3
  402ec0:	e680      	b.n	402bc4 <_malloc_r+0x44>
  402ec2:	bf00      	nop
  402ec4:	200005b0 	.word	0x200005b0
  402ec8:	20000a84 	.word	0x20000a84
  402ecc:	20000a54 	.word	0x20000a54
  402ed0:	20000a7c 	.word	0x20000a7c
  402ed4:	20000a80 	.word	0x20000a80
  402ed8:	200005b8 	.word	0x200005b8
  402edc:	200009b8 	.word	0x200009b8
  402ee0:	0a5a      	lsrs	r2, r3, #9
  402ee2:	2a04      	cmp	r2, #4
  402ee4:	d95b      	bls.n	402f9e <_malloc_r+0x41e>
  402ee6:	2a14      	cmp	r2, #20
  402ee8:	f200 80ae 	bhi.w	403048 <_malloc_r+0x4c8>
  402eec:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  402ef0:	00c9      	lsls	r1, r1, #3
  402ef2:	325b      	adds	r2, #91	; 0x5b
  402ef4:	eb07 0c01 	add.w	ip, r7, r1
  402ef8:	5879      	ldr	r1, [r7, r1]
  402efa:	f1ac 0c08 	sub.w	ip, ip, #8
  402efe:	458c      	cmp	ip, r1
  402f00:	f000 8088 	beq.w	403014 <_malloc_r+0x494>
  402f04:	684a      	ldr	r2, [r1, #4]
  402f06:	f022 0203 	bic.w	r2, r2, #3
  402f0a:	4293      	cmp	r3, r2
  402f0c:	d273      	bcs.n	402ff6 <_malloc_r+0x476>
  402f0e:	6889      	ldr	r1, [r1, #8]
  402f10:	458c      	cmp	ip, r1
  402f12:	d1f7      	bne.n	402f04 <_malloc_r+0x384>
  402f14:	f8dc 200c 	ldr.w	r2, [ip, #12]
  402f18:	687b      	ldr	r3, [r7, #4]
  402f1a:	60e2      	str	r2, [r4, #12]
  402f1c:	f8c4 c008 	str.w	ip, [r4, #8]
  402f20:	6094      	str	r4, [r2, #8]
  402f22:	f8cc 400c 	str.w	r4, [ip, #12]
  402f26:	e68f      	b.n	402c48 <_malloc_r+0xc8>
  402f28:	19a1      	adds	r1, r4, r6
  402f2a:	f046 0c01 	orr.w	ip, r6, #1
  402f2e:	f042 0601 	orr.w	r6, r2, #1
  402f32:	f8c4 c004 	str.w	ip, [r4, #4]
  402f36:	4628      	mov	r0, r5
  402f38:	6179      	str	r1, [r7, #20]
  402f3a:	6139      	str	r1, [r7, #16]
  402f3c:	f8c1 e00c 	str.w	lr, [r1, #12]
  402f40:	f8c1 e008 	str.w	lr, [r1, #8]
  402f44:	604e      	str	r6, [r1, #4]
  402f46:	50e2      	str	r2, [r4, r3]
  402f48:	f000 fa36 	bl	4033b8 <__malloc_unlock>
  402f4c:	3408      	adds	r4, #8
  402f4e:	e6dd      	b.n	402d0c <_malloc_r+0x18c>
  402f50:	687b      	ldr	r3, [r7, #4]
  402f52:	e679      	b.n	402c48 <_malloc_r+0xc8>
  402f54:	f108 0801 	add.w	r8, r8, #1
  402f58:	f018 0f03 	tst.w	r8, #3
  402f5c:	f10c 0c08 	add.w	ip, ip, #8
  402f60:	f47f ae85 	bne.w	402c6e <_malloc_r+0xee>
  402f64:	e02d      	b.n	402fc2 <_malloc_r+0x442>
  402f66:	68dc      	ldr	r4, [r3, #12]
  402f68:	42a3      	cmp	r3, r4
  402f6a:	bf08      	it	eq
  402f6c:	3002      	addeq	r0, #2
  402f6e:	f43f ae3e 	beq.w	402bee <_malloc_r+0x6e>
  402f72:	e6bb      	b.n	402cec <_malloc_r+0x16c>
  402f74:	4419      	add	r1, r3
  402f76:	461c      	mov	r4, r3
  402f78:	684a      	ldr	r2, [r1, #4]
  402f7a:	68db      	ldr	r3, [r3, #12]
  402f7c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  402f80:	f042 0201 	orr.w	r2, r2, #1
  402f84:	604a      	str	r2, [r1, #4]
  402f86:	4628      	mov	r0, r5
  402f88:	60f3      	str	r3, [r6, #12]
  402f8a:	609e      	str	r6, [r3, #8]
  402f8c:	f000 fa14 	bl	4033b8 <__malloc_unlock>
  402f90:	e6bc      	b.n	402d0c <_malloc_r+0x18c>
  402f92:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402f96:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  402f9a:	00c3      	lsls	r3, r0, #3
  402f9c:	e612      	b.n	402bc4 <_malloc_r+0x44>
  402f9e:	099a      	lsrs	r2, r3, #6
  402fa0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  402fa4:	00c9      	lsls	r1, r1, #3
  402fa6:	3238      	adds	r2, #56	; 0x38
  402fa8:	e7a4      	b.n	402ef4 <_malloc_r+0x374>
  402faa:	42bc      	cmp	r4, r7
  402fac:	d054      	beq.n	403058 <_malloc_r+0x4d8>
  402fae:	68bc      	ldr	r4, [r7, #8]
  402fb0:	6862      	ldr	r2, [r4, #4]
  402fb2:	f022 0203 	bic.w	r2, r2, #3
  402fb6:	e75d      	b.n	402e74 <_malloc_r+0x2f4>
  402fb8:	f859 3908 	ldr.w	r3, [r9], #-8
  402fbc:	4599      	cmp	r9, r3
  402fbe:	f040 8086 	bne.w	4030ce <_malloc_r+0x54e>
  402fc2:	f010 0f03 	tst.w	r0, #3
  402fc6:	f100 30ff 	add.w	r0, r0, #4294967295
  402fca:	d1f5      	bne.n	402fb8 <_malloc_r+0x438>
  402fcc:	687b      	ldr	r3, [r7, #4]
  402fce:	ea23 0304 	bic.w	r3, r3, r4
  402fd2:	607b      	str	r3, [r7, #4]
  402fd4:	0064      	lsls	r4, r4, #1
  402fd6:	429c      	cmp	r4, r3
  402fd8:	f63f aec7 	bhi.w	402d6a <_malloc_r+0x1ea>
  402fdc:	2c00      	cmp	r4, #0
  402fde:	f43f aec4 	beq.w	402d6a <_malloc_r+0x1ea>
  402fe2:	421c      	tst	r4, r3
  402fe4:	4640      	mov	r0, r8
  402fe6:	f47f ae3e 	bne.w	402c66 <_malloc_r+0xe6>
  402fea:	0064      	lsls	r4, r4, #1
  402fec:	421c      	tst	r4, r3
  402fee:	f100 0004 	add.w	r0, r0, #4
  402ff2:	d0fa      	beq.n	402fea <_malloc_r+0x46a>
  402ff4:	e637      	b.n	402c66 <_malloc_r+0xe6>
  402ff6:	468c      	mov	ip, r1
  402ff8:	e78c      	b.n	402f14 <_malloc_r+0x394>
  402ffa:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402ffe:	d815      	bhi.n	40302c <_malloc_r+0x4ac>
  403000:	0bf3      	lsrs	r3, r6, #15
  403002:	f103 0078 	add.w	r0, r3, #120	; 0x78
  403006:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40300a:	00c3      	lsls	r3, r0, #3
  40300c:	e5da      	b.n	402bc4 <_malloc_r+0x44>
  40300e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403012:	e6ed      	b.n	402df0 <_malloc_r+0x270>
  403014:	687b      	ldr	r3, [r7, #4]
  403016:	1092      	asrs	r2, r2, #2
  403018:	2101      	movs	r1, #1
  40301a:	fa01 f202 	lsl.w	r2, r1, r2
  40301e:	4313      	orrs	r3, r2
  403020:	607b      	str	r3, [r7, #4]
  403022:	4662      	mov	r2, ip
  403024:	e779      	b.n	402f1a <_malloc_r+0x39a>
  403026:	2301      	movs	r3, #1
  403028:	6053      	str	r3, [r2, #4]
  40302a:	e729      	b.n	402e80 <_malloc_r+0x300>
  40302c:	f240 5254 	movw	r2, #1364	; 0x554
  403030:	4293      	cmp	r3, r2
  403032:	d822      	bhi.n	40307a <_malloc_r+0x4fa>
  403034:	0cb3      	lsrs	r3, r6, #18
  403036:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40303a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40303e:	00c3      	lsls	r3, r0, #3
  403040:	e5c0      	b.n	402bc4 <_malloc_r+0x44>
  403042:	f103 0b10 	add.w	fp, r3, #16
  403046:	e6ae      	b.n	402da6 <_malloc_r+0x226>
  403048:	2a54      	cmp	r2, #84	; 0x54
  40304a:	d829      	bhi.n	4030a0 <_malloc_r+0x520>
  40304c:	0b1a      	lsrs	r2, r3, #12
  40304e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403052:	00c9      	lsls	r1, r1, #3
  403054:	326e      	adds	r2, #110	; 0x6e
  403056:	e74d      	b.n	402ef4 <_malloc_r+0x374>
  403058:	4b20      	ldr	r3, [pc, #128]	; (4030dc <_malloc_r+0x55c>)
  40305a:	6819      	ldr	r1, [r3, #0]
  40305c:	4459      	add	r1, fp
  40305e:	6019      	str	r1, [r3, #0]
  403060:	e6b2      	b.n	402dc8 <_malloc_r+0x248>
  403062:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403066:	2800      	cmp	r0, #0
  403068:	f47f aeae 	bne.w	402dc8 <_malloc_r+0x248>
  40306c:	eb08 030b 	add.w	r3, r8, fp
  403070:	68ba      	ldr	r2, [r7, #8]
  403072:	f043 0301 	orr.w	r3, r3, #1
  403076:	6053      	str	r3, [r2, #4]
  403078:	e6ee      	b.n	402e58 <_malloc_r+0x2d8>
  40307a:	207f      	movs	r0, #127	; 0x7f
  40307c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  403080:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  403084:	e59e      	b.n	402bc4 <_malloc_r+0x44>
  403086:	f104 0108 	add.w	r1, r4, #8
  40308a:	4628      	mov	r0, r5
  40308c:	9300      	str	r3, [sp, #0]
  40308e:	f7ff fa33 	bl	4024f8 <_free_r>
  403092:	9b00      	ldr	r3, [sp, #0]
  403094:	6819      	ldr	r1, [r3, #0]
  403096:	e6df      	b.n	402e58 <_malloc_r+0x2d8>
  403098:	2001      	movs	r0, #1
  40309a:	f04f 0900 	mov.w	r9, #0
  40309e:	e6bc      	b.n	402e1a <_malloc_r+0x29a>
  4030a0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4030a4:	d805      	bhi.n	4030b2 <_malloc_r+0x532>
  4030a6:	0bda      	lsrs	r2, r3, #15
  4030a8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4030ac:	00c9      	lsls	r1, r1, #3
  4030ae:	3277      	adds	r2, #119	; 0x77
  4030b0:	e720      	b.n	402ef4 <_malloc_r+0x374>
  4030b2:	f240 5154 	movw	r1, #1364	; 0x554
  4030b6:	428a      	cmp	r2, r1
  4030b8:	d805      	bhi.n	4030c6 <_malloc_r+0x546>
  4030ba:	0c9a      	lsrs	r2, r3, #18
  4030bc:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4030c0:	00c9      	lsls	r1, r1, #3
  4030c2:	327c      	adds	r2, #124	; 0x7c
  4030c4:	e716      	b.n	402ef4 <_malloc_r+0x374>
  4030c6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4030ca:	227e      	movs	r2, #126	; 0x7e
  4030cc:	e712      	b.n	402ef4 <_malloc_r+0x374>
  4030ce:	687b      	ldr	r3, [r7, #4]
  4030d0:	e780      	b.n	402fd4 <_malloc_r+0x454>
  4030d2:	08f0      	lsrs	r0, r6, #3
  4030d4:	f106 0308 	add.w	r3, r6, #8
  4030d8:	e600      	b.n	402cdc <_malloc_r+0x15c>
  4030da:	bf00      	nop
  4030dc:	20000a54 	.word	0x20000a54

004030e0 <__ascii_mbtowc>:
  4030e0:	b082      	sub	sp, #8
  4030e2:	b149      	cbz	r1, 4030f8 <__ascii_mbtowc+0x18>
  4030e4:	b15a      	cbz	r2, 4030fe <__ascii_mbtowc+0x1e>
  4030e6:	b16b      	cbz	r3, 403104 <__ascii_mbtowc+0x24>
  4030e8:	7813      	ldrb	r3, [r2, #0]
  4030ea:	600b      	str	r3, [r1, #0]
  4030ec:	7812      	ldrb	r2, [r2, #0]
  4030ee:	1c10      	adds	r0, r2, #0
  4030f0:	bf18      	it	ne
  4030f2:	2001      	movne	r0, #1
  4030f4:	b002      	add	sp, #8
  4030f6:	4770      	bx	lr
  4030f8:	a901      	add	r1, sp, #4
  4030fa:	2a00      	cmp	r2, #0
  4030fc:	d1f3      	bne.n	4030e6 <__ascii_mbtowc+0x6>
  4030fe:	4610      	mov	r0, r2
  403100:	b002      	add	sp, #8
  403102:	4770      	bx	lr
  403104:	f06f 0001 	mvn.w	r0, #1
  403108:	e7f4      	b.n	4030f4 <__ascii_mbtowc+0x14>
  40310a:	bf00      	nop
  40310c:	0000      	movs	r0, r0
	...

00403110 <memchr>:
  403110:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403114:	2a10      	cmp	r2, #16
  403116:	db2b      	blt.n	403170 <memchr+0x60>
  403118:	f010 0f07 	tst.w	r0, #7
  40311c:	d008      	beq.n	403130 <memchr+0x20>
  40311e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403122:	3a01      	subs	r2, #1
  403124:	428b      	cmp	r3, r1
  403126:	d02d      	beq.n	403184 <memchr+0x74>
  403128:	f010 0f07 	tst.w	r0, #7
  40312c:	b342      	cbz	r2, 403180 <memchr+0x70>
  40312e:	d1f6      	bne.n	40311e <memchr+0xe>
  403130:	b4f0      	push	{r4, r5, r6, r7}
  403132:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403136:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40313a:	f022 0407 	bic.w	r4, r2, #7
  40313e:	f07f 0700 	mvns.w	r7, #0
  403142:	2300      	movs	r3, #0
  403144:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403148:	3c08      	subs	r4, #8
  40314a:	ea85 0501 	eor.w	r5, r5, r1
  40314e:	ea86 0601 	eor.w	r6, r6, r1
  403152:	fa85 f547 	uadd8	r5, r5, r7
  403156:	faa3 f587 	sel	r5, r3, r7
  40315a:	fa86 f647 	uadd8	r6, r6, r7
  40315e:	faa5 f687 	sel	r6, r5, r7
  403162:	b98e      	cbnz	r6, 403188 <memchr+0x78>
  403164:	d1ee      	bne.n	403144 <memchr+0x34>
  403166:	bcf0      	pop	{r4, r5, r6, r7}
  403168:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40316c:	f002 0207 	and.w	r2, r2, #7
  403170:	b132      	cbz	r2, 403180 <memchr+0x70>
  403172:	f810 3b01 	ldrb.w	r3, [r0], #1
  403176:	3a01      	subs	r2, #1
  403178:	ea83 0301 	eor.w	r3, r3, r1
  40317c:	b113      	cbz	r3, 403184 <memchr+0x74>
  40317e:	d1f8      	bne.n	403172 <memchr+0x62>
  403180:	2000      	movs	r0, #0
  403182:	4770      	bx	lr
  403184:	3801      	subs	r0, #1
  403186:	4770      	bx	lr
  403188:	2d00      	cmp	r5, #0
  40318a:	bf06      	itte	eq
  40318c:	4635      	moveq	r5, r6
  40318e:	3803      	subeq	r0, #3
  403190:	3807      	subne	r0, #7
  403192:	f015 0f01 	tst.w	r5, #1
  403196:	d107      	bne.n	4031a8 <memchr+0x98>
  403198:	3001      	adds	r0, #1
  40319a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40319e:	bf02      	ittt	eq
  4031a0:	3001      	addeq	r0, #1
  4031a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4031a6:	3001      	addeq	r0, #1
  4031a8:	bcf0      	pop	{r4, r5, r6, r7}
  4031aa:	3801      	subs	r0, #1
  4031ac:	4770      	bx	lr
  4031ae:	bf00      	nop

004031b0 <memcpy>:
  4031b0:	4684      	mov	ip, r0
  4031b2:	ea41 0300 	orr.w	r3, r1, r0
  4031b6:	f013 0303 	ands.w	r3, r3, #3
  4031ba:	d16d      	bne.n	403298 <memcpy+0xe8>
  4031bc:	3a40      	subs	r2, #64	; 0x40
  4031be:	d341      	bcc.n	403244 <memcpy+0x94>
  4031c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031c4:	f840 3b04 	str.w	r3, [r0], #4
  4031c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4031cc:	f840 3b04 	str.w	r3, [r0], #4
  4031d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031d4:	f840 3b04 	str.w	r3, [r0], #4
  4031d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4031dc:	f840 3b04 	str.w	r3, [r0], #4
  4031e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031e4:	f840 3b04 	str.w	r3, [r0], #4
  4031e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4031ec:	f840 3b04 	str.w	r3, [r0], #4
  4031f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031f4:	f840 3b04 	str.w	r3, [r0], #4
  4031f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4031fc:	f840 3b04 	str.w	r3, [r0], #4
  403200:	f851 3b04 	ldr.w	r3, [r1], #4
  403204:	f840 3b04 	str.w	r3, [r0], #4
  403208:	f851 3b04 	ldr.w	r3, [r1], #4
  40320c:	f840 3b04 	str.w	r3, [r0], #4
  403210:	f851 3b04 	ldr.w	r3, [r1], #4
  403214:	f840 3b04 	str.w	r3, [r0], #4
  403218:	f851 3b04 	ldr.w	r3, [r1], #4
  40321c:	f840 3b04 	str.w	r3, [r0], #4
  403220:	f851 3b04 	ldr.w	r3, [r1], #4
  403224:	f840 3b04 	str.w	r3, [r0], #4
  403228:	f851 3b04 	ldr.w	r3, [r1], #4
  40322c:	f840 3b04 	str.w	r3, [r0], #4
  403230:	f851 3b04 	ldr.w	r3, [r1], #4
  403234:	f840 3b04 	str.w	r3, [r0], #4
  403238:	f851 3b04 	ldr.w	r3, [r1], #4
  40323c:	f840 3b04 	str.w	r3, [r0], #4
  403240:	3a40      	subs	r2, #64	; 0x40
  403242:	d2bd      	bcs.n	4031c0 <memcpy+0x10>
  403244:	3230      	adds	r2, #48	; 0x30
  403246:	d311      	bcc.n	40326c <memcpy+0xbc>
  403248:	f851 3b04 	ldr.w	r3, [r1], #4
  40324c:	f840 3b04 	str.w	r3, [r0], #4
  403250:	f851 3b04 	ldr.w	r3, [r1], #4
  403254:	f840 3b04 	str.w	r3, [r0], #4
  403258:	f851 3b04 	ldr.w	r3, [r1], #4
  40325c:	f840 3b04 	str.w	r3, [r0], #4
  403260:	f851 3b04 	ldr.w	r3, [r1], #4
  403264:	f840 3b04 	str.w	r3, [r0], #4
  403268:	3a10      	subs	r2, #16
  40326a:	d2ed      	bcs.n	403248 <memcpy+0x98>
  40326c:	320c      	adds	r2, #12
  40326e:	d305      	bcc.n	40327c <memcpy+0xcc>
  403270:	f851 3b04 	ldr.w	r3, [r1], #4
  403274:	f840 3b04 	str.w	r3, [r0], #4
  403278:	3a04      	subs	r2, #4
  40327a:	d2f9      	bcs.n	403270 <memcpy+0xc0>
  40327c:	3204      	adds	r2, #4
  40327e:	d008      	beq.n	403292 <memcpy+0xe2>
  403280:	07d2      	lsls	r2, r2, #31
  403282:	bf1c      	itt	ne
  403284:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403288:	f800 3b01 	strbne.w	r3, [r0], #1
  40328c:	d301      	bcc.n	403292 <memcpy+0xe2>
  40328e:	880b      	ldrh	r3, [r1, #0]
  403290:	8003      	strh	r3, [r0, #0]
  403292:	4660      	mov	r0, ip
  403294:	4770      	bx	lr
  403296:	bf00      	nop
  403298:	2a08      	cmp	r2, #8
  40329a:	d313      	bcc.n	4032c4 <memcpy+0x114>
  40329c:	078b      	lsls	r3, r1, #30
  40329e:	d08d      	beq.n	4031bc <memcpy+0xc>
  4032a0:	f010 0303 	ands.w	r3, r0, #3
  4032a4:	d08a      	beq.n	4031bc <memcpy+0xc>
  4032a6:	f1c3 0304 	rsb	r3, r3, #4
  4032aa:	1ad2      	subs	r2, r2, r3
  4032ac:	07db      	lsls	r3, r3, #31
  4032ae:	bf1c      	itt	ne
  4032b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4032b4:	f800 3b01 	strbne.w	r3, [r0], #1
  4032b8:	d380      	bcc.n	4031bc <memcpy+0xc>
  4032ba:	f831 3b02 	ldrh.w	r3, [r1], #2
  4032be:	f820 3b02 	strh.w	r3, [r0], #2
  4032c2:	e77b      	b.n	4031bc <memcpy+0xc>
  4032c4:	3a04      	subs	r2, #4
  4032c6:	d3d9      	bcc.n	40327c <memcpy+0xcc>
  4032c8:	3a01      	subs	r2, #1
  4032ca:	f811 3b01 	ldrb.w	r3, [r1], #1
  4032ce:	f800 3b01 	strb.w	r3, [r0], #1
  4032d2:	d2f9      	bcs.n	4032c8 <memcpy+0x118>
  4032d4:	780b      	ldrb	r3, [r1, #0]
  4032d6:	7003      	strb	r3, [r0, #0]
  4032d8:	784b      	ldrb	r3, [r1, #1]
  4032da:	7043      	strb	r3, [r0, #1]
  4032dc:	788b      	ldrb	r3, [r1, #2]
  4032de:	7083      	strb	r3, [r0, #2]
  4032e0:	4660      	mov	r0, ip
  4032e2:	4770      	bx	lr

004032e4 <memmove>:
  4032e4:	4288      	cmp	r0, r1
  4032e6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4032e8:	d90d      	bls.n	403306 <memmove+0x22>
  4032ea:	188b      	adds	r3, r1, r2
  4032ec:	4298      	cmp	r0, r3
  4032ee:	d20a      	bcs.n	403306 <memmove+0x22>
  4032f0:	1884      	adds	r4, r0, r2
  4032f2:	2a00      	cmp	r2, #0
  4032f4:	d051      	beq.n	40339a <memmove+0xb6>
  4032f6:	4622      	mov	r2, r4
  4032f8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4032fc:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403300:	4299      	cmp	r1, r3
  403302:	d1f9      	bne.n	4032f8 <memmove+0x14>
  403304:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403306:	2a0f      	cmp	r2, #15
  403308:	d948      	bls.n	40339c <memmove+0xb8>
  40330a:	ea41 0300 	orr.w	r3, r1, r0
  40330e:	079b      	lsls	r3, r3, #30
  403310:	d146      	bne.n	4033a0 <memmove+0xbc>
  403312:	f100 0410 	add.w	r4, r0, #16
  403316:	f101 0310 	add.w	r3, r1, #16
  40331a:	4615      	mov	r5, r2
  40331c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403320:	f844 6c10 	str.w	r6, [r4, #-16]
  403324:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403328:	f844 6c0c 	str.w	r6, [r4, #-12]
  40332c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403330:	f844 6c08 	str.w	r6, [r4, #-8]
  403334:	3d10      	subs	r5, #16
  403336:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40333a:	f844 6c04 	str.w	r6, [r4, #-4]
  40333e:	2d0f      	cmp	r5, #15
  403340:	f103 0310 	add.w	r3, r3, #16
  403344:	f104 0410 	add.w	r4, r4, #16
  403348:	d8e8      	bhi.n	40331c <memmove+0x38>
  40334a:	f1a2 0310 	sub.w	r3, r2, #16
  40334e:	f023 030f 	bic.w	r3, r3, #15
  403352:	f002 0e0f 	and.w	lr, r2, #15
  403356:	3310      	adds	r3, #16
  403358:	f1be 0f03 	cmp.w	lr, #3
  40335c:	4419      	add	r1, r3
  40335e:	4403      	add	r3, r0
  403360:	d921      	bls.n	4033a6 <memmove+0xc2>
  403362:	1f1e      	subs	r6, r3, #4
  403364:	460d      	mov	r5, r1
  403366:	4674      	mov	r4, lr
  403368:	3c04      	subs	r4, #4
  40336a:	f855 7b04 	ldr.w	r7, [r5], #4
  40336e:	f846 7f04 	str.w	r7, [r6, #4]!
  403372:	2c03      	cmp	r4, #3
  403374:	d8f8      	bhi.n	403368 <memmove+0x84>
  403376:	f1ae 0404 	sub.w	r4, lr, #4
  40337a:	f024 0403 	bic.w	r4, r4, #3
  40337e:	3404      	adds	r4, #4
  403380:	4421      	add	r1, r4
  403382:	4423      	add	r3, r4
  403384:	f002 0203 	and.w	r2, r2, #3
  403388:	b162      	cbz	r2, 4033a4 <memmove+0xc0>
  40338a:	3b01      	subs	r3, #1
  40338c:	440a      	add	r2, r1
  40338e:	f811 4b01 	ldrb.w	r4, [r1], #1
  403392:	f803 4f01 	strb.w	r4, [r3, #1]!
  403396:	428a      	cmp	r2, r1
  403398:	d1f9      	bne.n	40338e <memmove+0xaa>
  40339a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40339c:	4603      	mov	r3, r0
  40339e:	e7f3      	b.n	403388 <memmove+0xa4>
  4033a0:	4603      	mov	r3, r0
  4033a2:	e7f2      	b.n	40338a <memmove+0xa6>
  4033a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4033a6:	4672      	mov	r2, lr
  4033a8:	e7ee      	b.n	403388 <memmove+0xa4>
  4033aa:	bf00      	nop

004033ac <__malloc_lock>:
  4033ac:	4801      	ldr	r0, [pc, #4]	; (4033b4 <__malloc_lock+0x8>)
  4033ae:	f7ff bb63 	b.w	402a78 <__retarget_lock_acquire_recursive>
  4033b2:	bf00      	nop
  4033b4:	20000aa8 	.word	0x20000aa8

004033b8 <__malloc_unlock>:
  4033b8:	4801      	ldr	r0, [pc, #4]	; (4033c0 <__malloc_unlock+0x8>)
  4033ba:	f7ff bb5f 	b.w	402a7c <__retarget_lock_release_recursive>
  4033be:	bf00      	nop
  4033c0:	20000aa8 	.word	0x20000aa8

004033c4 <_realloc_r>:
  4033c4:	2900      	cmp	r1, #0
  4033c6:	f000 8095 	beq.w	4034f4 <_realloc_r+0x130>
  4033ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4033ce:	460d      	mov	r5, r1
  4033d0:	4616      	mov	r6, r2
  4033d2:	b083      	sub	sp, #12
  4033d4:	4680      	mov	r8, r0
  4033d6:	f106 070b 	add.w	r7, r6, #11
  4033da:	f7ff ffe7 	bl	4033ac <__malloc_lock>
  4033de:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4033e2:	2f16      	cmp	r7, #22
  4033e4:	f02e 0403 	bic.w	r4, lr, #3
  4033e8:	f1a5 0908 	sub.w	r9, r5, #8
  4033ec:	d83c      	bhi.n	403468 <_realloc_r+0xa4>
  4033ee:	2210      	movs	r2, #16
  4033f0:	4617      	mov	r7, r2
  4033f2:	42be      	cmp	r6, r7
  4033f4:	d83d      	bhi.n	403472 <_realloc_r+0xae>
  4033f6:	4294      	cmp	r4, r2
  4033f8:	da43      	bge.n	403482 <_realloc_r+0xbe>
  4033fa:	4bc4      	ldr	r3, [pc, #784]	; (40370c <_realloc_r+0x348>)
  4033fc:	6899      	ldr	r1, [r3, #8]
  4033fe:	eb09 0004 	add.w	r0, r9, r4
  403402:	4288      	cmp	r0, r1
  403404:	f000 80b4 	beq.w	403570 <_realloc_r+0x1ac>
  403408:	6843      	ldr	r3, [r0, #4]
  40340a:	f023 0101 	bic.w	r1, r3, #1
  40340e:	4401      	add	r1, r0
  403410:	6849      	ldr	r1, [r1, #4]
  403412:	07c9      	lsls	r1, r1, #31
  403414:	d54c      	bpl.n	4034b0 <_realloc_r+0xec>
  403416:	f01e 0f01 	tst.w	lr, #1
  40341a:	f000 809b 	beq.w	403554 <_realloc_r+0x190>
  40341e:	4631      	mov	r1, r6
  403420:	4640      	mov	r0, r8
  403422:	f7ff fbad 	bl	402b80 <_malloc_r>
  403426:	4606      	mov	r6, r0
  403428:	2800      	cmp	r0, #0
  40342a:	d03a      	beq.n	4034a2 <_realloc_r+0xde>
  40342c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403430:	f023 0301 	bic.w	r3, r3, #1
  403434:	444b      	add	r3, r9
  403436:	f1a0 0208 	sub.w	r2, r0, #8
  40343a:	429a      	cmp	r2, r3
  40343c:	f000 8121 	beq.w	403682 <_realloc_r+0x2be>
  403440:	1f22      	subs	r2, r4, #4
  403442:	2a24      	cmp	r2, #36	; 0x24
  403444:	f200 8107 	bhi.w	403656 <_realloc_r+0x292>
  403448:	2a13      	cmp	r2, #19
  40344a:	f200 80db 	bhi.w	403604 <_realloc_r+0x240>
  40344e:	4603      	mov	r3, r0
  403450:	462a      	mov	r2, r5
  403452:	6811      	ldr	r1, [r2, #0]
  403454:	6019      	str	r1, [r3, #0]
  403456:	6851      	ldr	r1, [r2, #4]
  403458:	6059      	str	r1, [r3, #4]
  40345a:	6892      	ldr	r2, [r2, #8]
  40345c:	609a      	str	r2, [r3, #8]
  40345e:	4629      	mov	r1, r5
  403460:	4640      	mov	r0, r8
  403462:	f7ff f849 	bl	4024f8 <_free_r>
  403466:	e01c      	b.n	4034a2 <_realloc_r+0xde>
  403468:	f027 0707 	bic.w	r7, r7, #7
  40346c:	2f00      	cmp	r7, #0
  40346e:	463a      	mov	r2, r7
  403470:	dabf      	bge.n	4033f2 <_realloc_r+0x2e>
  403472:	2600      	movs	r6, #0
  403474:	230c      	movs	r3, #12
  403476:	4630      	mov	r0, r6
  403478:	f8c8 3000 	str.w	r3, [r8]
  40347c:	b003      	add	sp, #12
  40347e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403482:	462e      	mov	r6, r5
  403484:	1be3      	subs	r3, r4, r7
  403486:	2b0f      	cmp	r3, #15
  403488:	d81e      	bhi.n	4034c8 <_realloc_r+0x104>
  40348a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40348e:	f003 0301 	and.w	r3, r3, #1
  403492:	4323      	orrs	r3, r4
  403494:	444c      	add	r4, r9
  403496:	f8c9 3004 	str.w	r3, [r9, #4]
  40349a:	6863      	ldr	r3, [r4, #4]
  40349c:	f043 0301 	orr.w	r3, r3, #1
  4034a0:	6063      	str	r3, [r4, #4]
  4034a2:	4640      	mov	r0, r8
  4034a4:	f7ff ff88 	bl	4033b8 <__malloc_unlock>
  4034a8:	4630      	mov	r0, r6
  4034aa:	b003      	add	sp, #12
  4034ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034b0:	f023 0303 	bic.w	r3, r3, #3
  4034b4:	18e1      	adds	r1, r4, r3
  4034b6:	4291      	cmp	r1, r2
  4034b8:	db1f      	blt.n	4034fa <_realloc_r+0x136>
  4034ba:	68c3      	ldr	r3, [r0, #12]
  4034bc:	6882      	ldr	r2, [r0, #8]
  4034be:	462e      	mov	r6, r5
  4034c0:	60d3      	str	r3, [r2, #12]
  4034c2:	460c      	mov	r4, r1
  4034c4:	609a      	str	r2, [r3, #8]
  4034c6:	e7dd      	b.n	403484 <_realloc_r+0xc0>
  4034c8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4034cc:	eb09 0107 	add.w	r1, r9, r7
  4034d0:	f002 0201 	and.w	r2, r2, #1
  4034d4:	444c      	add	r4, r9
  4034d6:	f043 0301 	orr.w	r3, r3, #1
  4034da:	4317      	orrs	r7, r2
  4034dc:	f8c9 7004 	str.w	r7, [r9, #4]
  4034e0:	604b      	str	r3, [r1, #4]
  4034e2:	6863      	ldr	r3, [r4, #4]
  4034e4:	f043 0301 	orr.w	r3, r3, #1
  4034e8:	3108      	adds	r1, #8
  4034ea:	6063      	str	r3, [r4, #4]
  4034ec:	4640      	mov	r0, r8
  4034ee:	f7ff f803 	bl	4024f8 <_free_r>
  4034f2:	e7d6      	b.n	4034a2 <_realloc_r+0xde>
  4034f4:	4611      	mov	r1, r2
  4034f6:	f7ff bb43 	b.w	402b80 <_malloc_r>
  4034fa:	f01e 0f01 	tst.w	lr, #1
  4034fe:	d18e      	bne.n	40341e <_realloc_r+0x5a>
  403500:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403504:	eba9 0a01 	sub.w	sl, r9, r1
  403508:	f8da 1004 	ldr.w	r1, [sl, #4]
  40350c:	f021 0103 	bic.w	r1, r1, #3
  403510:	440b      	add	r3, r1
  403512:	4423      	add	r3, r4
  403514:	4293      	cmp	r3, r2
  403516:	db25      	blt.n	403564 <_realloc_r+0x1a0>
  403518:	68c2      	ldr	r2, [r0, #12]
  40351a:	6881      	ldr	r1, [r0, #8]
  40351c:	4656      	mov	r6, sl
  40351e:	60ca      	str	r2, [r1, #12]
  403520:	6091      	str	r1, [r2, #8]
  403522:	f8da 100c 	ldr.w	r1, [sl, #12]
  403526:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40352a:	1f22      	subs	r2, r4, #4
  40352c:	2a24      	cmp	r2, #36	; 0x24
  40352e:	60c1      	str	r1, [r0, #12]
  403530:	6088      	str	r0, [r1, #8]
  403532:	f200 8094 	bhi.w	40365e <_realloc_r+0x29a>
  403536:	2a13      	cmp	r2, #19
  403538:	d96f      	bls.n	40361a <_realloc_r+0x256>
  40353a:	6829      	ldr	r1, [r5, #0]
  40353c:	f8ca 1008 	str.w	r1, [sl, #8]
  403540:	6869      	ldr	r1, [r5, #4]
  403542:	f8ca 100c 	str.w	r1, [sl, #12]
  403546:	2a1b      	cmp	r2, #27
  403548:	f200 80a2 	bhi.w	403690 <_realloc_r+0x2cc>
  40354c:	3508      	adds	r5, #8
  40354e:	f10a 0210 	add.w	r2, sl, #16
  403552:	e063      	b.n	40361c <_realloc_r+0x258>
  403554:	f855 3c08 	ldr.w	r3, [r5, #-8]
  403558:	eba9 0a03 	sub.w	sl, r9, r3
  40355c:	f8da 1004 	ldr.w	r1, [sl, #4]
  403560:	f021 0103 	bic.w	r1, r1, #3
  403564:	1863      	adds	r3, r4, r1
  403566:	4293      	cmp	r3, r2
  403568:	f6ff af59 	blt.w	40341e <_realloc_r+0x5a>
  40356c:	4656      	mov	r6, sl
  40356e:	e7d8      	b.n	403522 <_realloc_r+0x15e>
  403570:	6841      	ldr	r1, [r0, #4]
  403572:	f021 0b03 	bic.w	fp, r1, #3
  403576:	44a3      	add	fp, r4
  403578:	f107 0010 	add.w	r0, r7, #16
  40357c:	4583      	cmp	fp, r0
  40357e:	da56      	bge.n	40362e <_realloc_r+0x26a>
  403580:	f01e 0f01 	tst.w	lr, #1
  403584:	f47f af4b 	bne.w	40341e <_realloc_r+0x5a>
  403588:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40358c:	eba9 0a01 	sub.w	sl, r9, r1
  403590:	f8da 1004 	ldr.w	r1, [sl, #4]
  403594:	f021 0103 	bic.w	r1, r1, #3
  403598:	448b      	add	fp, r1
  40359a:	4558      	cmp	r0, fp
  40359c:	dce2      	bgt.n	403564 <_realloc_r+0x1a0>
  40359e:	4656      	mov	r6, sl
  4035a0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4035a4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4035a8:	1f22      	subs	r2, r4, #4
  4035aa:	2a24      	cmp	r2, #36	; 0x24
  4035ac:	60c1      	str	r1, [r0, #12]
  4035ae:	6088      	str	r0, [r1, #8]
  4035b0:	f200 808f 	bhi.w	4036d2 <_realloc_r+0x30e>
  4035b4:	2a13      	cmp	r2, #19
  4035b6:	f240 808a 	bls.w	4036ce <_realloc_r+0x30a>
  4035ba:	6829      	ldr	r1, [r5, #0]
  4035bc:	f8ca 1008 	str.w	r1, [sl, #8]
  4035c0:	6869      	ldr	r1, [r5, #4]
  4035c2:	f8ca 100c 	str.w	r1, [sl, #12]
  4035c6:	2a1b      	cmp	r2, #27
  4035c8:	f200 808a 	bhi.w	4036e0 <_realloc_r+0x31c>
  4035cc:	3508      	adds	r5, #8
  4035ce:	f10a 0210 	add.w	r2, sl, #16
  4035d2:	6829      	ldr	r1, [r5, #0]
  4035d4:	6011      	str	r1, [r2, #0]
  4035d6:	6869      	ldr	r1, [r5, #4]
  4035d8:	6051      	str	r1, [r2, #4]
  4035da:	68a9      	ldr	r1, [r5, #8]
  4035dc:	6091      	str	r1, [r2, #8]
  4035de:	eb0a 0107 	add.w	r1, sl, r7
  4035e2:	ebab 0207 	sub.w	r2, fp, r7
  4035e6:	f042 0201 	orr.w	r2, r2, #1
  4035ea:	6099      	str	r1, [r3, #8]
  4035ec:	604a      	str	r2, [r1, #4]
  4035ee:	f8da 3004 	ldr.w	r3, [sl, #4]
  4035f2:	f003 0301 	and.w	r3, r3, #1
  4035f6:	431f      	orrs	r7, r3
  4035f8:	4640      	mov	r0, r8
  4035fa:	f8ca 7004 	str.w	r7, [sl, #4]
  4035fe:	f7ff fedb 	bl	4033b8 <__malloc_unlock>
  403602:	e751      	b.n	4034a8 <_realloc_r+0xe4>
  403604:	682b      	ldr	r3, [r5, #0]
  403606:	6003      	str	r3, [r0, #0]
  403608:	686b      	ldr	r3, [r5, #4]
  40360a:	6043      	str	r3, [r0, #4]
  40360c:	2a1b      	cmp	r2, #27
  40360e:	d82d      	bhi.n	40366c <_realloc_r+0x2a8>
  403610:	f100 0308 	add.w	r3, r0, #8
  403614:	f105 0208 	add.w	r2, r5, #8
  403618:	e71b      	b.n	403452 <_realloc_r+0x8e>
  40361a:	4632      	mov	r2, r6
  40361c:	6829      	ldr	r1, [r5, #0]
  40361e:	6011      	str	r1, [r2, #0]
  403620:	6869      	ldr	r1, [r5, #4]
  403622:	6051      	str	r1, [r2, #4]
  403624:	68a9      	ldr	r1, [r5, #8]
  403626:	6091      	str	r1, [r2, #8]
  403628:	461c      	mov	r4, r3
  40362a:	46d1      	mov	r9, sl
  40362c:	e72a      	b.n	403484 <_realloc_r+0xc0>
  40362e:	eb09 0107 	add.w	r1, r9, r7
  403632:	ebab 0b07 	sub.w	fp, fp, r7
  403636:	f04b 0201 	orr.w	r2, fp, #1
  40363a:	6099      	str	r1, [r3, #8]
  40363c:	604a      	str	r2, [r1, #4]
  40363e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403642:	f003 0301 	and.w	r3, r3, #1
  403646:	431f      	orrs	r7, r3
  403648:	4640      	mov	r0, r8
  40364a:	f845 7c04 	str.w	r7, [r5, #-4]
  40364e:	f7ff feb3 	bl	4033b8 <__malloc_unlock>
  403652:	462e      	mov	r6, r5
  403654:	e728      	b.n	4034a8 <_realloc_r+0xe4>
  403656:	4629      	mov	r1, r5
  403658:	f7ff fe44 	bl	4032e4 <memmove>
  40365c:	e6ff      	b.n	40345e <_realloc_r+0x9a>
  40365e:	4629      	mov	r1, r5
  403660:	4630      	mov	r0, r6
  403662:	461c      	mov	r4, r3
  403664:	46d1      	mov	r9, sl
  403666:	f7ff fe3d 	bl	4032e4 <memmove>
  40366a:	e70b      	b.n	403484 <_realloc_r+0xc0>
  40366c:	68ab      	ldr	r3, [r5, #8]
  40366e:	6083      	str	r3, [r0, #8]
  403670:	68eb      	ldr	r3, [r5, #12]
  403672:	60c3      	str	r3, [r0, #12]
  403674:	2a24      	cmp	r2, #36	; 0x24
  403676:	d017      	beq.n	4036a8 <_realloc_r+0x2e4>
  403678:	f100 0310 	add.w	r3, r0, #16
  40367c:	f105 0210 	add.w	r2, r5, #16
  403680:	e6e7      	b.n	403452 <_realloc_r+0x8e>
  403682:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403686:	f023 0303 	bic.w	r3, r3, #3
  40368a:	441c      	add	r4, r3
  40368c:	462e      	mov	r6, r5
  40368e:	e6f9      	b.n	403484 <_realloc_r+0xc0>
  403690:	68a9      	ldr	r1, [r5, #8]
  403692:	f8ca 1010 	str.w	r1, [sl, #16]
  403696:	68e9      	ldr	r1, [r5, #12]
  403698:	f8ca 1014 	str.w	r1, [sl, #20]
  40369c:	2a24      	cmp	r2, #36	; 0x24
  40369e:	d00c      	beq.n	4036ba <_realloc_r+0x2f6>
  4036a0:	3510      	adds	r5, #16
  4036a2:	f10a 0218 	add.w	r2, sl, #24
  4036a6:	e7b9      	b.n	40361c <_realloc_r+0x258>
  4036a8:	692b      	ldr	r3, [r5, #16]
  4036aa:	6103      	str	r3, [r0, #16]
  4036ac:	696b      	ldr	r3, [r5, #20]
  4036ae:	6143      	str	r3, [r0, #20]
  4036b0:	f105 0218 	add.w	r2, r5, #24
  4036b4:	f100 0318 	add.w	r3, r0, #24
  4036b8:	e6cb      	b.n	403452 <_realloc_r+0x8e>
  4036ba:	692a      	ldr	r2, [r5, #16]
  4036bc:	f8ca 2018 	str.w	r2, [sl, #24]
  4036c0:	696a      	ldr	r2, [r5, #20]
  4036c2:	f8ca 201c 	str.w	r2, [sl, #28]
  4036c6:	3518      	adds	r5, #24
  4036c8:	f10a 0220 	add.w	r2, sl, #32
  4036cc:	e7a6      	b.n	40361c <_realloc_r+0x258>
  4036ce:	4632      	mov	r2, r6
  4036d0:	e77f      	b.n	4035d2 <_realloc_r+0x20e>
  4036d2:	4629      	mov	r1, r5
  4036d4:	4630      	mov	r0, r6
  4036d6:	9301      	str	r3, [sp, #4]
  4036d8:	f7ff fe04 	bl	4032e4 <memmove>
  4036dc:	9b01      	ldr	r3, [sp, #4]
  4036de:	e77e      	b.n	4035de <_realloc_r+0x21a>
  4036e0:	68a9      	ldr	r1, [r5, #8]
  4036e2:	f8ca 1010 	str.w	r1, [sl, #16]
  4036e6:	68e9      	ldr	r1, [r5, #12]
  4036e8:	f8ca 1014 	str.w	r1, [sl, #20]
  4036ec:	2a24      	cmp	r2, #36	; 0x24
  4036ee:	d003      	beq.n	4036f8 <_realloc_r+0x334>
  4036f0:	3510      	adds	r5, #16
  4036f2:	f10a 0218 	add.w	r2, sl, #24
  4036f6:	e76c      	b.n	4035d2 <_realloc_r+0x20e>
  4036f8:	692a      	ldr	r2, [r5, #16]
  4036fa:	f8ca 2018 	str.w	r2, [sl, #24]
  4036fe:	696a      	ldr	r2, [r5, #20]
  403700:	f8ca 201c 	str.w	r2, [sl, #28]
  403704:	3518      	adds	r5, #24
  403706:	f10a 0220 	add.w	r2, sl, #32
  40370a:	e762      	b.n	4035d2 <_realloc_r+0x20e>
  40370c:	200005b0 	.word	0x200005b0

00403710 <lflush>:
  403710:	8983      	ldrh	r3, [r0, #12]
  403712:	f003 0309 	and.w	r3, r3, #9
  403716:	2b09      	cmp	r3, #9
  403718:	d001      	beq.n	40371e <lflush+0xe>
  40371a:	2000      	movs	r0, #0
  40371c:	4770      	bx	lr
  40371e:	f7fe bd85 	b.w	40222c <fflush>
  403722:	bf00      	nop

00403724 <__srefill_r>:
  403724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403726:	460c      	mov	r4, r1
  403728:	4605      	mov	r5, r0
  40372a:	b110      	cbz	r0, 403732 <__srefill_r+0xe>
  40372c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40372e:	2b00      	cmp	r3, #0
  403730:	d045      	beq.n	4037be <__srefill_r+0x9a>
  403732:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403736:	b29a      	uxth	r2, r3
  403738:	0497      	lsls	r7, r2, #18
  40373a:	d407      	bmi.n	40374c <__srefill_r+0x28>
  40373c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40373e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  403742:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  403746:	6662      	str	r2, [r4, #100]	; 0x64
  403748:	81a3      	strh	r3, [r4, #12]
  40374a:	b29a      	uxth	r2, r3
  40374c:	2100      	movs	r1, #0
  40374e:	0696      	lsls	r6, r2, #26
  403750:	6061      	str	r1, [r4, #4]
  403752:	d431      	bmi.n	4037b8 <__srefill_r+0x94>
  403754:	0750      	lsls	r0, r2, #29
  403756:	d522      	bpl.n	40379e <__srefill_r+0x7a>
  403758:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40375a:	b161      	cbz	r1, 403776 <__srefill_r+0x52>
  40375c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403760:	4299      	cmp	r1, r3
  403762:	d002      	beq.n	40376a <__srefill_r+0x46>
  403764:	4628      	mov	r0, r5
  403766:	f7fe fec7 	bl	4024f8 <_free_r>
  40376a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  40376c:	6063      	str	r3, [r4, #4]
  40376e:	2000      	movs	r0, #0
  403770:	6320      	str	r0, [r4, #48]	; 0x30
  403772:	2b00      	cmp	r3, #0
  403774:	d13f      	bne.n	4037f6 <__srefill_r+0xd2>
  403776:	6923      	ldr	r3, [r4, #16]
  403778:	2b00      	cmp	r3, #0
  40377a:	d04c      	beq.n	403816 <__srefill_r+0xf2>
  40377c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  403780:	b2be      	uxth	r6, r7
  403782:	07b3      	lsls	r3, r6, #30
  403784:	d11e      	bne.n	4037c4 <__srefill_r+0xa0>
  403786:	6922      	ldr	r2, [r4, #16]
  403788:	6022      	str	r2, [r4, #0]
  40378a:	4628      	mov	r0, r5
  40378c:	6963      	ldr	r3, [r4, #20]
  40378e:	6a25      	ldr	r5, [r4, #32]
  403790:	69e1      	ldr	r1, [r4, #28]
  403792:	47a8      	blx	r5
  403794:	2800      	cmp	r0, #0
  403796:	6060      	str	r0, [r4, #4]
  403798:	dd09      	ble.n	4037ae <__srefill_r+0x8a>
  40379a:	2000      	movs	r0, #0
  40379c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40379e:	06d1      	lsls	r1, r2, #27
  4037a0:	d53e      	bpl.n	403820 <__srefill_r+0xfc>
  4037a2:	0712      	lsls	r2, r2, #28
  4037a4:	d42a      	bmi.n	4037fc <__srefill_r+0xd8>
  4037a6:	f043 0304 	orr.w	r3, r3, #4
  4037aa:	81a3      	strh	r3, [r4, #12]
  4037ac:	e7e3      	b.n	403776 <__srefill_r+0x52>
  4037ae:	89a3      	ldrh	r3, [r4, #12]
  4037b0:	d119      	bne.n	4037e6 <__srefill_r+0xc2>
  4037b2:	f043 0320 	orr.w	r3, r3, #32
  4037b6:	81a3      	strh	r3, [r4, #12]
  4037b8:	f04f 30ff 	mov.w	r0, #4294967295
  4037bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4037be:	f7fe fd75 	bl	4022ac <__sinit>
  4037c2:	e7b6      	b.n	403732 <__srefill_r+0xe>
  4037c4:	4b1a      	ldr	r3, [pc, #104]	; (403830 <__srefill_r+0x10c>)
  4037c6:	491b      	ldr	r1, [pc, #108]	; (403834 <__srefill_r+0x110>)
  4037c8:	6818      	ldr	r0, [r3, #0]
  4037ca:	2301      	movs	r3, #1
  4037cc:	81a3      	strh	r3, [r4, #12]
  4037ce:	f006 0609 	and.w	r6, r6, #9
  4037d2:	f7ff f8ef 	bl	4029b4 <_fwalk>
  4037d6:	2e09      	cmp	r6, #9
  4037d8:	81a7      	strh	r7, [r4, #12]
  4037da:	d1d4      	bne.n	403786 <__srefill_r+0x62>
  4037dc:	4621      	mov	r1, r4
  4037de:	4628      	mov	r0, r5
  4037e0:	f7fe fc5a 	bl	402098 <__sflush_r>
  4037e4:	e7cf      	b.n	403786 <__srefill_r+0x62>
  4037e6:	2200      	movs	r2, #0
  4037e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4037ec:	81a3      	strh	r3, [r4, #12]
  4037ee:	6062      	str	r2, [r4, #4]
  4037f0:	f04f 30ff 	mov.w	r0, #4294967295
  4037f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4037f6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4037f8:	6023      	str	r3, [r4, #0]
  4037fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4037fc:	4621      	mov	r1, r4
  4037fe:	4628      	mov	r0, r5
  403800:	f7fe fcea 	bl	4021d8 <_fflush_r>
  403804:	2800      	cmp	r0, #0
  403806:	d1d7      	bne.n	4037b8 <__srefill_r+0x94>
  403808:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40380c:	60a0      	str	r0, [r4, #8]
  40380e:	61a0      	str	r0, [r4, #24]
  403810:	f023 0308 	bic.w	r3, r3, #8
  403814:	e7c7      	b.n	4037a6 <__srefill_r+0x82>
  403816:	4621      	mov	r1, r4
  403818:	4628      	mov	r0, r5
  40381a:	f7ff f95f 	bl	402adc <__smakebuf_r>
  40381e:	e7ad      	b.n	40377c <__srefill_r+0x58>
  403820:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403824:	2209      	movs	r2, #9
  403826:	602a      	str	r2, [r5, #0]
  403828:	f04f 30ff 	mov.w	r0, #4294967295
  40382c:	81a3      	strh	r3, [r4, #12]
  40382e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403830:	00403fe0 	.word	0x00403fe0
  403834:	00403711 	.word	0x00403711

00403838 <_sbrk_r>:
  403838:	b538      	push	{r3, r4, r5, lr}
  40383a:	4c07      	ldr	r4, [pc, #28]	; (403858 <_sbrk_r+0x20>)
  40383c:	2300      	movs	r3, #0
  40383e:	4605      	mov	r5, r0
  403840:	4608      	mov	r0, r1
  403842:	6023      	str	r3, [r4, #0]
  403844:	f7fd f970 	bl	400b28 <_sbrk>
  403848:	1c43      	adds	r3, r0, #1
  40384a:	d000      	beq.n	40384e <_sbrk_r+0x16>
  40384c:	bd38      	pop	{r3, r4, r5, pc}
  40384e:	6823      	ldr	r3, [r4, #0]
  403850:	2b00      	cmp	r3, #0
  403852:	d0fb      	beq.n	40384c <_sbrk_r+0x14>
  403854:	602b      	str	r3, [r5, #0]
  403856:	bd38      	pop	{r3, r4, r5, pc}
  403858:	20000abc 	.word	0x20000abc

0040385c <__sread>:
  40385c:	b510      	push	{r4, lr}
  40385e:	460c      	mov	r4, r1
  403860:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403864:	f000 f9f6 	bl	403c54 <_read_r>
  403868:	2800      	cmp	r0, #0
  40386a:	db03      	blt.n	403874 <__sread+0x18>
  40386c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40386e:	4403      	add	r3, r0
  403870:	6523      	str	r3, [r4, #80]	; 0x50
  403872:	bd10      	pop	{r4, pc}
  403874:	89a3      	ldrh	r3, [r4, #12]
  403876:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40387a:	81a3      	strh	r3, [r4, #12]
  40387c:	bd10      	pop	{r4, pc}
  40387e:	bf00      	nop

00403880 <__swrite>:
  403880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403884:	4616      	mov	r6, r2
  403886:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40388a:	461f      	mov	r7, r3
  40388c:	05d3      	lsls	r3, r2, #23
  40388e:	460c      	mov	r4, r1
  403890:	4605      	mov	r5, r0
  403892:	d507      	bpl.n	4038a4 <__swrite+0x24>
  403894:	2200      	movs	r2, #0
  403896:	2302      	movs	r3, #2
  403898:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40389c:	f000 f9c4 	bl	403c28 <_lseek_r>
  4038a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4038a4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4038a8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4038ac:	81a2      	strh	r2, [r4, #12]
  4038ae:	463b      	mov	r3, r7
  4038b0:	4632      	mov	r2, r6
  4038b2:	4628      	mov	r0, r5
  4038b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4038b8:	f000 b8a4 	b.w	403a04 <_write_r>

004038bc <__sseek>:
  4038bc:	b510      	push	{r4, lr}
  4038be:	460c      	mov	r4, r1
  4038c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4038c4:	f000 f9b0 	bl	403c28 <_lseek_r>
  4038c8:	89a3      	ldrh	r3, [r4, #12]
  4038ca:	1c42      	adds	r2, r0, #1
  4038cc:	bf0e      	itee	eq
  4038ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4038d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4038d6:	6520      	strne	r0, [r4, #80]	; 0x50
  4038d8:	81a3      	strh	r3, [r4, #12]
  4038da:	bd10      	pop	{r4, pc}

004038dc <__sclose>:
  4038dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4038e0:	f000 b908 	b.w	403af4 <_close_r>

004038e4 <__swbuf_r>:
  4038e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4038e6:	460d      	mov	r5, r1
  4038e8:	4614      	mov	r4, r2
  4038ea:	4606      	mov	r6, r0
  4038ec:	b110      	cbz	r0, 4038f4 <__swbuf_r+0x10>
  4038ee:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4038f0:	2b00      	cmp	r3, #0
  4038f2:	d04b      	beq.n	40398c <__swbuf_r+0xa8>
  4038f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4038f8:	69a3      	ldr	r3, [r4, #24]
  4038fa:	60a3      	str	r3, [r4, #8]
  4038fc:	b291      	uxth	r1, r2
  4038fe:	0708      	lsls	r0, r1, #28
  403900:	d539      	bpl.n	403976 <__swbuf_r+0x92>
  403902:	6923      	ldr	r3, [r4, #16]
  403904:	2b00      	cmp	r3, #0
  403906:	d036      	beq.n	403976 <__swbuf_r+0x92>
  403908:	b2ed      	uxtb	r5, r5
  40390a:	0489      	lsls	r1, r1, #18
  40390c:	462f      	mov	r7, r5
  40390e:	d515      	bpl.n	40393c <__swbuf_r+0x58>
  403910:	6822      	ldr	r2, [r4, #0]
  403912:	6961      	ldr	r1, [r4, #20]
  403914:	1ad3      	subs	r3, r2, r3
  403916:	428b      	cmp	r3, r1
  403918:	da1c      	bge.n	403954 <__swbuf_r+0x70>
  40391a:	3301      	adds	r3, #1
  40391c:	68a1      	ldr	r1, [r4, #8]
  40391e:	1c50      	adds	r0, r2, #1
  403920:	3901      	subs	r1, #1
  403922:	60a1      	str	r1, [r4, #8]
  403924:	6020      	str	r0, [r4, #0]
  403926:	7015      	strb	r5, [r2, #0]
  403928:	6962      	ldr	r2, [r4, #20]
  40392a:	429a      	cmp	r2, r3
  40392c:	d01a      	beq.n	403964 <__swbuf_r+0x80>
  40392e:	89a3      	ldrh	r3, [r4, #12]
  403930:	07db      	lsls	r3, r3, #31
  403932:	d501      	bpl.n	403938 <__swbuf_r+0x54>
  403934:	2d0a      	cmp	r5, #10
  403936:	d015      	beq.n	403964 <__swbuf_r+0x80>
  403938:	4638      	mov	r0, r7
  40393a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40393c:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40393e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403942:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403946:	81a2      	strh	r2, [r4, #12]
  403948:	6822      	ldr	r2, [r4, #0]
  40394a:	6661      	str	r1, [r4, #100]	; 0x64
  40394c:	6961      	ldr	r1, [r4, #20]
  40394e:	1ad3      	subs	r3, r2, r3
  403950:	428b      	cmp	r3, r1
  403952:	dbe2      	blt.n	40391a <__swbuf_r+0x36>
  403954:	4621      	mov	r1, r4
  403956:	4630      	mov	r0, r6
  403958:	f7fe fc3e 	bl	4021d8 <_fflush_r>
  40395c:	b940      	cbnz	r0, 403970 <__swbuf_r+0x8c>
  40395e:	6822      	ldr	r2, [r4, #0]
  403960:	2301      	movs	r3, #1
  403962:	e7db      	b.n	40391c <__swbuf_r+0x38>
  403964:	4621      	mov	r1, r4
  403966:	4630      	mov	r0, r6
  403968:	f7fe fc36 	bl	4021d8 <_fflush_r>
  40396c:	2800      	cmp	r0, #0
  40396e:	d0e3      	beq.n	403938 <__swbuf_r+0x54>
  403970:	f04f 37ff 	mov.w	r7, #4294967295
  403974:	e7e0      	b.n	403938 <__swbuf_r+0x54>
  403976:	4621      	mov	r1, r4
  403978:	4630      	mov	r0, r6
  40397a:	f7fe fb19 	bl	401fb0 <__swsetup_r>
  40397e:	2800      	cmp	r0, #0
  403980:	d1f6      	bne.n	403970 <__swbuf_r+0x8c>
  403982:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403986:	6923      	ldr	r3, [r4, #16]
  403988:	b291      	uxth	r1, r2
  40398a:	e7bd      	b.n	403908 <__swbuf_r+0x24>
  40398c:	f7fe fc8e 	bl	4022ac <__sinit>
  403990:	e7b0      	b.n	4038f4 <__swbuf_r+0x10>
  403992:	bf00      	nop

00403994 <_wcrtomb_r>:
  403994:	b5f0      	push	{r4, r5, r6, r7, lr}
  403996:	4606      	mov	r6, r0
  403998:	b085      	sub	sp, #20
  40399a:	461f      	mov	r7, r3
  40399c:	b189      	cbz	r1, 4039c2 <_wcrtomb_r+0x2e>
  40399e:	4c10      	ldr	r4, [pc, #64]	; (4039e0 <_wcrtomb_r+0x4c>)
  4039a0:	4d10      	ldr	r5, [pc, #64]	; (4039e4 <_wcrtomb_r+0x50>)
  4039a2:	6824      	ldr	r4, [r4, #0]
  4039a4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4039a6:	2c00      	cmp	r4, #0
  4039a8:	bf08      	it	eq
  4039aa:	462c      	moveq	r4, r5
  4039ac:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  4039b0:	47a0      	blx	r4
  4039b2:	1c43      	adds	r3, r0, #1
  4039b4:	d103      	bne.n	4039be <_wcrtomb_r+0x2a>
  4039b6:	2200      	movs	r2, #0
  4039b8:	238a      	movs	r3, #138	; 0x8a
  4039ba:	603a      	str	r2, [r7, #0]
  4039bc:	6033      	str	r3, [r6, #0]
  4039be:	b005      	add	sp, #20
  4039c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4039c2:	460c      	mov	r4, r1
  4039c4:	4906      	ldr	r1, [pc, #24]	; (4039e0 <_wcrtomb_r+0x4c>)
  4039c6:	4a07      	ldr	r2, [pc, #28]	; (4039e4 <_wcrtomb_r+0x50>)
  4039c8:	6809      	ldr	r1, [r1, #0]
  4039ca:	6b49      	ldr	r1, [r1, #52]	; 0x34
  4039cc:	2900      	cmp	r1, #0
  4039ce:	bf08      	it	eq
  4039d0:	4611      	moveq	r1, r2
  4039d2:	4622      	mov	r2, r4
  4039d4:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  4039d8:	a901      	add	r1, sp, #4
  4039da:	47a0      	blx	r4
  4039dc:	e7e9      	b.n	4039b2 <_wcrtomb_r+0x1e>
  4039de:	bf00      	nop
  4039e0:	20000014 	.word	0x20000014
  4039e4:	20000444 	.word	0x20000444

004039e8 <__ascii_wctomb>:
  4039e8:	b121      	cbz	r1, 4039f4 <__ascii_wctomb+0xc>
  4039ea:	2aff      	cmp	r2, #255	; 0xff
  4039ec:	d804      	bhi.n	4039f8 <__ascii_wctomb+0x10>
  4039ee:	700a      	strb	r2, [r1, #0]
  4039f0:	2001      	movs	r0, #1
  4039f2:	4770      	bx	lr
  4039f4:	4608      	mov	r0, r1
  4039f6:	4770      	bx	lr
  4039f8:	238a      	movs	r3, #138	; 0x8a
  4039fa:	6003      	str	r3, [r0, #0]
  4039fc:	f04f 30ff 	mov.w	r0, #4294967295
  403a00:	4770      	bx	lr
  403a02:	bf00      	nop

00403a04 <_write_r>:
  403a04:	b570      	push	{r4, r5, r6, lr}
  403a06:	460d      	mov	r5, r1
  403a08:	4c08      	ldr	r4, [pc, #32]	; (403a2c <_write_r+0x28>)
  403a0a:	4611      	mov	r1, r2
  403a0c:	4606      	mov	r6, r0
  403a0e:	461a      	mov	r2, r3
  403a10:	4628      	mov	r0, r5
  403a12:	2300      	movs	r3, #0
  403a14:	6023      	str	r3, [r4, #0]
  403a16:	f7fc fbc3 	bl	4001a0 <_write>
  403a1a:	1c43      	adds	r3, r0, #1
  403a1c:	d000      	beq.n	403a20 <_write_r+0x1c>
  403a1e:	bd70      	pop	{r4, r5, r6, pc}
  403a20:	6823      	ldr	r3, [r4, #0]
  403a22:	2b00      	cmp	r3, #0
  403a24:	d0fb      	beq.n	403a1e <_write_r+0x1a>
  403a26:	6033      	str	r3, [r6, #0]
  403a28:	bd70      	pop	{r4, r5, r6, pc}
  403a2a:	bf00      	nop
  403a2c:	20000abc 	.word	0x20000abc

00403a30 <__register_exitproc>:
  403a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403a34:	4d2c      	ldr	r5, [pc, #176]	; (403ae8 <__register_exitproc+0xb8>)
  403a36:	4606      	mov	r6, r0
  403a38:	6828      	ldr	r0, [r5, #0]
  403a3a:	4698      	mov	r8, r3
  403a3c:	460f      	mov	r7, r1
  403a3e:	4691      	mov	r9, r2
  403a40:	f7ff f81a 	bl	402a78 <__retarget_lock_acquire_recursive>
  403a44:	4b29      	ldr	r3, [pc, #164]	; (403aec <__register_exitproc+0xbc>)
  403a46:	681c      	ldr	r4, [r3, #0]
  403a48:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403a4c:	2b00      	cmp	r3, #0
  403a4e:	d03e      	beq.n	403ace <__register_exitproc+0x9e>
  403a50:	685a      	ldr	r2, [r3, #4]
  403a52:	2a1f      	cmp	r2, #31
  403a54:	dc1c      	bgt.n	403a90 <__register_exitproc+0x60>
  403a56:	f102 0e01 	add.w	lr, r2, #1
  403a5a:	b176      	cbz	r6, 403a7a <__register_exitproc+0x4a>
  403a5c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403a60:	2401      	movs	r4, #1
  403a62:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  403a66:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  403a6a:	4094      	lsls	r4, r2
  403a6c:	4320      	orrs	r0, r4
  403a6e:	2e02      	cmp	r6, #2
  403a70:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  403a74:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  403a78:	d023      	beq.n	403ac2 <__register_exitproc+0x92>
  403a7a:	3202      	adds	r2, #2
  403a7c:	f8c3 e004 	str.w	lr, [r3, #4]
  403a80:	6828      	ldr	r0, [r5, #0]
  403a82:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  403a86:	f7fe fff9 	bl	402a7c <__retarget_lock_release_recursive>
  403a8a:	2000      	movs	r0, #0
  403a8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403a90:	4b17      	ldr	r3, [pc, #92]	; (403af0 <__register_exitproc+0xc0>)
  403a92:	b30b      	cbz	r3, 403ad8 <__register_exitproc+0xa8>
  403a94:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403a98:	f7ff f86a 	bl	402b70 <malloc>
  403a9c:	4603      	mov	r3, r0
  403a9e:	b1d8      	cbz	r0, 403ad8 <__register_exitproc+0xa8>
  403aa0:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  403aa4:	6002      	str	r2, [r0, #0]
  403aa6:	2100      	movs	r1, #0
  403aa8:	6041      	str	r1, [r0, #4]
  403aaa:	460a      	mov	r2, r1
  403aac:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  403ab0:	f04f 0e01 	mov.w	lr, #1
  403ab4:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  403ab8:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  403abc:	2e00      	cmp	r6, #0
  403abe:	d0dc      	beq.n	403a7a <__register_exitproc+0x4a>
  403ac0:	e7cc      	b.n	403a5c <__register_exitproc+0x2c>
  403ac2:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  403ac6:	430c      	orrs	r4, r1
  403ac8:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  403acc:	e7d5      	b.n	403a7a <__register_exitproc+0x4a>
  403ace:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  403ad2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  403ad6:	e7bb      	b.n	403a50 <__register_exitproc+0x20>
  403ad8:	6828      	ldr	r0, [r5, #0]
  403ada:	f7fe ffcf 	bl	402a7c <__retarget_lock_release_recursive>
  403ade:	f04f 30ff 	mov.w	r0, #4294967295
  403ae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403ae6:	bf00      	nop
  403ae8:	20000440 	.word	0x20000440
  403aec:	00403fe0 	.word	0x00403fe0
  403af0:	00402b71 	.word	0x00402b71

00403af4 <_close_r>:
  403af4:	b538      	push	{r3, r4, r5, lr}
  403af6:	4c07      	ldr	r4, [pc, #28]	; (403b14 <_close_r+0x20>)
  403af8:	2300      	movs	r3, #0
  403afa:	4605      	mov	r5, r0
  403afc:	4608      	mov	r0, r1
  403afe:	6023      	str	r3, [r4, #0]
  403b00:	f7fd f82e 	bl	400b60 <_close>
  403b04:	1c43      	adds	r3, r0, #1
  403b06:	d000      	beq.n	403b0a <_close_r+0x16>
  403b08:	bd38      	pop	{r3, r4, r5, pc}
  403b0a:	6823      	ldr	r3, [r4, #0]
  403b0c:	2b00      	cmp	r3, #0
  403b0e:	d0fb      	beq.n	403b08 <_close_r+0x14>
  403b10:	602b      	str	r3, [r5, #0]
  403b12:	bd38      	pop	{r3, r4, r5, pc}
  403b14:	20000abc 	.word	0x20000abc

00403b18 <_fclose_r>:
  403b18:	b570      	push	{r4, r5, r6, lr}
  403b1a:	b159      	cbz	r1, 403b34 <_fclose_r+0x1c>
  403b1c:	4605      	mov	r5, r0
  403b1e:	460c      	mov	r4, r1
  403b20:	b110      	cbz	r0, 403b28 <_fclose_r+0x10>
  403b22:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403b24:	2b00      	cmp	r3, #0
  403b26:	d03c      	beq.n	403ba2 <_fclose_r+0x8a>
  403b28:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403b2a:	07d8      	lsls	r0, r3, #31
  403b2c:	d505      	bpl.n	403b3a <_fclose_r+0x22>
  403b2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b32:	b92b      	cbnz	r3, 403b40 <_fclose_r+0x28>
  403b34:	2600      	movs	r6, #0
  403b36:	4630      	mov	r0, r6
  403b38:	bd70      	pop	{r4, r5, r6, pc}
  403b3a:	89a3      	ldrh	r3, [r4, #12]
  403b3c:	0599      	lsls	r1, r3, #22
  403b3e:	d53c      	bpl.n	403bba <_fclose_r+0xa2>
  403b40:	4621      	mov	r1, r4
  403b42:	4628      	mov	r0, r5
  403b44:	f7fe faa8 	bl	402098 <__sflush_r>
  403b48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403b4a:	4606      	mov	r6, r0
  403b4c:	b133      	cbz	r3, 403b5c <_fclose_r+0x44>
  403b4e:	69e1      	ldr	r1, [r4, #28]
  403b50:	4628      	mov	r0, r5
  403b52:	4798      	blx	r3
  403b54:	2800      	cmp	r0, #0
  403b56:	bfb8      	it	lt
  403b58:	f04f 36ff 	movlt.w	r6, #4294967295
  403b5c:	89a3      	ldrh	r3, [r4, #12]
  403b5e:	061a      	lsls	r2, r3, #24
  403b60:	d422      	bmi.n	403ba8 <_fclose_r+0x90>
  403b62:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403b64:	b141      	cbz	r1, 403b78 <_fclose_r+0x60>
  403b66:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403b6a:	4299      	cmp	r1, r3
  403b6c:	d002      	beq.n	403b74 <_fclose_r+0x5c>
  403b6e:	4628      	mov	r0, r5
  403b70:	f7fe fcc2 	bl	4024f8 <_free_r>
  403b74:	2300      	movs	r3, #0
  403b76:	6323      	str	r3, [r4, #48]	; 0x30
  403b78:	6c61      	ldr	r1, [r4, #68]	; 0x44
  403b7a:	b121      	cbz	r1, 403b86 <_fclose_r+0x6e>
  403b7c:	4628      	mov	r0, r5
  403b7e:	f7fe fcbb 	bl	4024f8 <_free_r>
  403b82:	2300      	movs	r3, #0
  403b84:	6463      	str	r3, [r4, #68]	; 0x44
  403b86:	f7fe fbbd 	bl	402304 <__sfp_lock_acquire>
  403b8a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403b8c:	2200      	movs	r2, #0
  403b8e:	07db      	lsls	r3, r3, #31
  403b90:	81a2      	strh	r2, [r4, #12]
  403b92:	d50e      	bpl.n	403bb2 <_fclose_r+0x9a>
  403b94:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403b96:	f7fe ff6d 	bl	402a74 <__retarget_lock_close_recursive>
  403b9a:	f7fe fbb9 	bl	402310 <__sfp_lock_release>
  403b9e:	4630      	mov	r0, r6
  403ba0:	bd70      	pop	{r4, r5, r6, pc}
  403ba2:	f7fe fb83 	bl	4022ac <__sinit>
  403ba6:	e7bf      	b.n	403b28 <_fclose_r+0x10>
  403ba8:	6921      	ldr	r1, [r4, #16]
  403baa:	4628      	mov	r0, r5
  403bac:	f7fe fca4 	bl	4024f8 <_free_r>
  403bb0:	e7d7      	b.n	403b62 <_fclose_r+0x4a>
  403bb2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403bb4:	f7fe ff62 	bl	402a7c <__retarget_lock_release_recursive>
  403bb8:	e7ec      	b.n	403b94 <_fclose_r+0x7c>
  403bba:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403bbc:	f7fe ff5c 	bl	402a78 <__retarget_lock_acquire_recursive>
  403bc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403bc4:	2b00      	cmp	r3, #0
  403bc6:	d1bb      	bne.n	403b40 <_fclose_r+0x28>
  403bc8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403bca:	f016 0601 	ands.w	r6, r6, #1
  403bce:	d1b1      	bne.n	403b34 <_fclose_r+0x1c>
  403bd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403bd2:	f7fe ff53 	bl	402a7c <__retarget_lock_release_recursive>
  403bd6:	4630      	mov	r0, r6
  403bd8:	bd70      	pop	{r4, r5, r6, pc}
  403bda:	bf00      	nop

00403bdc <_fstat_r>:
  403bdc:	b538      	push	{r3, r4, r5, lr}
  403bde:	460b      	mov	r3, r1
  403be0:	4c07      	ldr	r4, [pc, #28]	; (403c00 <_fstat_r+0x24>)
  403be2:	4605      	mov	r5, r0
  403be4:	4611      	mov	r1, r2
  403be6:	4618      	mov	r0, r3
  403be8:	2300      	movs	r3, #0
  403bea:	6023      	str	r3, [r4, #0]
  403bec:	f7fc ffbb 	bl	400b66 <_fstat>
  403bf0:	1c43      	adds	r3, r0, #1
  403bf2:	d000      	beq.n	403bf6 <_fstat_r+0x1a>
  403bf4:	bd38      	pop	{r3, r4, r5, pc}
  403bf6:	6823      	ldr	r3, [r4, #0]
  403bf8:	2b00      	cmp	r3, #0
  403bfa:	d0fb      	beq.n	403bf4 <_fstat_r+0x18>
  403bfc:	602b      	str	r3, [r5, #0]
  403bfe:	bd38      	pop	{r3, r4, r5, pc}
  403c00:	20000abc 	.word	0x20000abc

00403c04 <_isatty_r>:
  403c04:	b538      	push	{r3, r4, r5, lr}
  403c06:	4c07      	ldr	r4, [pc, #28]	; (403c24 <_isatty_r+0x20>)
  403c08:	2300      	movs	r3, #0
  403c0a:	4605      	mov	r5, r0
  403c0c:	4608      	mov	r0, r1
  403c0e:	6023      	str	r3, [r4, #0]
  403c10:	f7fc ffae 	bl	400b70 <_isatty>
  403c14:	1c43      	adds	r3, r0, #1
  403c16:	d000      	beq.n	403c1a <_isatty_r+0x16>
  403c18:	bd38      	pop	{r3, r4, r5, pc}
  403c1a:	6823      	ldr	r3, [r4, #0]
  403c1c:	2b00      	cmp	r3, #0
  403c1e:	d0fb      	beq.n	403c18 <_isatty_r+0x14>
  403c20:	602b      	str	r3, [r5, #0]
  403c22:	bd38      	pop	{r3, r4, r5, pc}
  403c24:	20000abc 	.word	0x20000abc

00403c28 <_lseek_r>:
  403c28:	b570      	push	{r4, r5, r6, lr}
  403c2a:	460d      	mov	r5, r1
  403c2c:	4c08      	ldr	r4, [pc, #32]	; (403c50 <_lseek_r+0x28>)
  403c2e:	4611      	mov	r1, r2
  403c30:	4606      	mov	r6, r0
  403c32:	461a      	mov	r2, r3
  403c34:	4628      	mov	r0, r5
  403c36:	2300      	movs	r3, #0
  403c38:	6023      	str	r3, [r4, #0]
  403c3a:	f7fc ff9b 	bl	400b74 <_lseek>
  403c3e:	1c43      	adds	r3, r0, #1
  403c40:	d000      	beq.n	403c44 <_lseek_r+0x1c>
  403c42:	bd70      	pop	{r4, r5, r6, pc}
  403c44:	6823      	ldr	r3, [r4, #0]
  403c46:	2b00      	cmp	r3, #0
  403c48:	d0fb      	beq.n	403c42 <_lseek_r+0x1a>
  403c4a:	6033      	str	r3, [r6, #0]
  403c4c:	bd70      	pop	{r4, r5, r6, pc}
  403c4e:	bf00      	nop
  403c50:	20000abc 	.word	0x20000abc

00403c54 <_read_r>:
  403c54:	b570      	push	{r4, r5, r6, lr}
  403c56:	460d      	mov	r5, r1
  403c58:	4c08      	ldr	r4, [pc, #32]	; (403c7c <_read_r+0x28>)
  403c5a:	4611      	mov	r1, r2
  403c5c:	4606      	mov	r6, r0
  403c5e:	461a      	mov	r2, r3
  403c60:	4628      	mov	r0, r5
  403c62:	2300      	movs	r3, #0
  403c64:	6023      	str	r3, [r4, #0]
  403c66:	f7fc fa67 	bl	400138 <_read>
  403c6a:	1c43      	adds	r3, r0, #1
  403c6c:	d000      	beq.n	403c70 <_read_r+0x1c>
  403c6e:	bd70      	pop	{r4, r5, r6, pc}
  403c70:	6823      	ldr	r3, [r4, #0]
  403c72:	2b00      	cmp	r3, #0
  403c74:	d0fb      	beq.n	403c6e <_read_r+0x1a>
  403c76:	6033      	str	r3, [r6, #0]
  403c78:	bd70      	pop	{r4, r5, r6, pc}
  403c7a:	bf00      	nop
  403c7c:	20000abc 	.word	0x20000abc

00403c80 <__aeabi_uldivmod>:
  403c80:	b953      	cbnz	r3, 403c98 <__aeabi_uldivmod+0x18>
  403c82:	b94a      	cbnz	r2, 403c98 <__aeabi_uldivmod+0x18>
  403c84:	2900      	cmp	r1, #0
  403c86:	bf08      	it	eq
  403c88:	2800      	cmpeq	r0, #0
  403c8a:	bf1c      	itt	ne
  403c8c:	f04f 31ff 	movne.w	r1, #4294967295
  403c90:	f04f 30ff 	movne.w	r0, #4294967295
  403c94:	f000 b97a 	b.w	403f8c <__aeabi_idiv0>
  403c98:	f1ad 0c08 	sub.w	ip, sp, #8
  403c9c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  403ca0:	f000 f806 	bl	403cb0 <__udivmoddi4>
  403ca4:	f8dd e004 	ldr.w	lr, [sp, #4]
  403ca8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403cac:	b004      	add	sp, #16
  403cae:	4770      	bx	lr

00403cb0 <__udivmoddi4>:
  403cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403cb4:	468c      	mov	ip, r1
  403cb6:	460d      	mov	r5, r1
  403cb8:	4604      	mov	r4, r0
  403cba:	9e08      	ldr	r6, [sp, #32]
  403cbc:	2b00      	cmp	r3, #0
  403cbe:	d151      	bne.n	403d64 <__udivmoddi4+0xb4>
  403cc0:	428a      	cmp	r2, r1
  403cc2:	4617      	mov	r7, r2
  403cc4:	d96d      	bls.n	403da2 <__udivmoddi4+0xf2>
  403cc6:	fab2 fe82 	clz	lr, r2
  403cca:	f1be 0f00 	cmp.w	lr, #0
  403cce:	d00b      	beq.n	403ce8 <__udivmoddi4+0x38>
  403cd0:	f1ce 0c20 	rsb	ip, lr, #32
  403cd4:	fa01 f50e 	lsl.w	r5, r1, lr
  403cd8:	fa20 fc0c 	lsr.w	ip, r0, ip
  403cdc:	fa02 f70e 	lsl.w	r7, r2, lr
  403ce0:	ea4c 0c05 	orr.w	ip, ip, r5
  403ce4:	fa00 f40e 	lsl.w	r4, r0, lr
  403ce8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  403cec:	0c25      	lsrs	r5, r4, #16
  403cee:	fbbc f8fa 	udiv	r8, ip, sl
  403cf2:	fa1f f987 	uxth.w	r9, r7
  403cf6:	fb0a cc18 	mls	ip, sl, r8, ip
  403cfa:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  403cfe:	fb08 f309 	mul.w	r3, r8, r9
  403d02:	42ab      	cmp	r3, r5
  403d04:	d90a      	bls.n	403d1c <__udivmoddi4+0x6c>
  403d06:	19ed      	adds	r5, r5, r7
  403d08:	f108 32ff 	add.w	r2, r8, #4294967295
  403d0c:	f080 8123 	bcs.w	403f56 <__udivmoddi4+0x2a6>
  403d10:	42ab      	cmp	r3, r5
  403d12:	f240 8120 	bls.w	403f56 <__udivmoddi4+0x2a6>
  403d16:	f1a8 0802 	sub.w	r8, r8, #2
  403d1a:	443d      	add	r5, r7
  403d1c:	1aed      	subs	r5, r5, r3
  403d1e:	b2a4      	uxth	r4, r4
  403d20:	fbb5 f0fa 	udiv	r0, r5, sl
  403d24:	fb0a 5510 	mls	r5, sl, r0, r5
  403d28:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  403d2c:	fb00 f909 	mul.w	r9, r0, r9
  403d30:	45a1      	cmp	r9, r4
  403d32:	d909      	bls.n	403d48 <__udivmoddi4+0x98>
  403d34:	19e4      	adds	r4, r4, r7
  403d36:	f100 33ff 	add.w	r3, r0, #4294967295
  403d3a:	f080 810a 	bcs.w	403f52 <__udivmoddi4+0x2a2>
  403d3e:	45a1      	cmp	r9, r4
  403d40:	f240 8107 	bls.w	403f52 <__udivmoddi4+0x2a2>
  403d44:	3802      	subs	r0, #2
  403d46:	443c      	add	r4, r7
  403d48:	eba4 0409 	sub.w	r4, r4, r9
  403d4c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403d50:	2100      	movs	r1, #0
  403d52:	2e00      	cmp	r6, #0
  403d54:	d061      	beq.n	403e1a <__udivmoddi4+0x16a>
  403d56:	fa24 f40e 	lsr.w	r4, r4, lr
  403d5a:	2300      	movs	r3, #0
  403d5c:	6034      	str	r4, [r6, #0]
  403d5e:	6073      	str	r3, [r6, #4]
  403d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d64:	428b      	cmp	r3, r1
  403d66:	d907      	bls.n	403d78 <__udivmoddi4+0xc8>
  403d68:	2e00      	cmp	r6, #0
  403d6a:	d054      	beq.n	403e16 <__udivmoddi4+0x166>
  403d6c:	2100      	movs	r1, #0
  403d6e:	e886 0021 	stmia.w	r6, {r0, r5}
  403d72:	4608      	mov	r0, r1
  403d74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d78:	fab3 f183 	clz	r1, r3
  403d7c:	2900      	cmp	r1, #0
  403d7e:	f040 808e 	bne.w	403e9e <__udivmoddi4+0x1ee>
  403d82:	42ab      	cmp	r3, r5
  403d84:	d302      	bcc.n	403d8c <__udivmoddi4+0xdc>
  403d86:	4282      	cmp	r2, r0
  403d88:	f200 80fa 	bhi.w	403f80 <__udivmoddi4+0x2d0>
  403d8c:	1a84      	subs	r4, r0, r2
  403d8e:	eb65 0503 	sbc.w	r5, r5, r3
  403d92:	2001      	movs	r0, #1
  403d94:	46ac      	mov	ip, r5
  403d96:	2e00      	cmp	r6, #0
  403d98:	d03f      	beq.n	403e1a <__udivmoddi4+0x16a>
  403d9a:	e886 1010 	stmia.w	r6, {r4, ip}
  403d9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403da2:	b912      	cbnz	r2, 403daa <__udivmoddi4+0xfa>
  403da4:	2701      	movs	r7, #1
  403da6:	fbb7 f7f2 	udiv	r7, r7, r2
  403daa:	fab7 fe87 	clz	lr, r7
  403dae:	f1be 0f00 	cmp.w	lr, #0
  403db2:	d134      	bne.n	403e1e <__udivmoddi4+0x16e>
  403db4:	1beb      	subs	r3, r5, r7
  403db6:	0c3a      	lsrs	r2, r7, #16
  403db8:	fa1f fc87 	uxth.w	ip, r7
  403dbc:	2101      	movs	r1, #1
  403dbe:	fbb3 f8f2 	udiv	r8, r3, r2
  403dc2:	0c25      	lsrs	r5, r4, #16
  403dc4:	fb02 3318 	mls	r3, r2, r8, r3
  403dc8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403dcc:	fb0c f308 	mul.w	r3, ip, r8
  403dd0:	42ab      	cmp	r3, r5
  403dd2:	d907      	bls.n	403de4 <__udivmoddi4+0x134>
  403dd4:	19ed      	adds	r5, r5, r7
  403dd6:	f108 30ff 	add.w	r0, r8, #4294967295
  403dda:	d202      	bcs.n	403de2 <__udivmoddi4+0x132>
  403ddc:	42ab      	cmp	r3, r5
  403dde:	f200 80d1 	bhi.w	403f84 <__udivmoddi4+0x2d4>
  403de2:	4680      	mov	r8, r0
  403de4:	1aed      	subs	r5, r5, r3
  403de6:	b2a3      	uxth	r3, r4
  403de8:	fbb5 f0f2 	udiv	r0, r5, r2
  403dec:	fb02 5510 	mls	r5, r2, r0, r5
  403df0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  403df4:	fb0c fc00 	mul.w	ip, ip, r0
  403df8:	45a4      	cmp	ip, r4
  403dfa:	d907      	bls.n	403e0c <__udivmoddi4+0x15c>
  403dfc:	19e4      	adds	r4, r4, r7
  403dfe:	f100 33ff 	add.w	r3, r0, #4294967295
  403e02:	d202      	bcs.n	403e0a <__udivmoddi4+0x15a>
  403e04:	45a4      	cmp	ip, r4
  403e06:	f200 80b8 	bhi.w	403f7a <__udivmoddi4+0x2ca>
  403e0a:	4618      	mov	r0, r3
  403e0c:	eba4 040c 	sub.w	r4, r4, ip
  403e10:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403e14:	e79d      	b.n	403d52 <__udivmoddi4+0xa2>
  403e16:	4631      	mov	r1, r6
  403e18:	4630      	mov	r0, r6
  403e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403e1e:	f1ce 0420 	rsb	r4, lr, #32
  403e22:	fa05 f30e 	lsl.w	r3, r5, lr
  403e26:	fa07 f70e 	lsl.w	r7, r7, lr
  403e2a:	fa20 f804 	lsr.w	r8, r0, r4
  403e2e:	0c3a      	lsrs	r2, r7, #16
  403e30:	fa25 f404 	lsr.w	r4, r5, r4
  403e34:	ea48 0803 	orr.w	r8, r8, r3
  403e38:	fbb4 f1f2 	udiv	r1, r4, r2
  403e3c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  403e40:	fb02 4411 	mls	r4, r2, r1, r4
  403e44:	fa1f fc87 	uxth.w	ip, r7
  403e48:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  403e4c:	fb01 f30c 	mul.w	r3, r1, ip
  403e50:	42ab      	cmp	r3, r5
  403e52:	fa00 f40e 	lsl.w	r4, r0, lr
  403e56:	d909      	bls.n	403e6c <__udivmoddi4+0x1bc>
  403e58:	19ed      	adds	r5, r5, r7
  403e5a:	f101 30ff 	add.w	r0, r1, #4294967295
  403e5e:	f080 808a 	bcs.w	403f76 <__udivmoddi4+0x2c6>
  403e62:	42ab      	cmp	r3, r5
  403e64:	f240 8087 	bls.w	403f76 <__udivmoddi4+0x2c6>
  403e68:	3902      	subs	r1, #2
  403e6a:	443d      	add	r5, r7
  403e6c:	1aeb      	subs	r3, r5, r3
  403e6e:	fa1f f588 	uxth.w	r5, r8
  403e72:	fbb3 f0f2 	udiv	r0, r3, r2
  403e76:	fb02 3310 	mls	r3, r2, r0, r3
  403e7a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403e7e:	fb00 f30c 	mul.w	r3, r0, ip
  403e82:	42ab      	cmp	r3, r5
  403e84:	d907      	bls.n	403e96 <__udivmoddi4+0x1e6>
  403e86:	19ed      	adds	r5, r5, r7
  403e88:	f100 38ff 	add.w	r8, r0, #4294967295
  403e8c:	d26f      	bcs.n	403f6e <__udivmoddi4+0x2be>
  403e8e:	42ab      	cmp	r3, r5
  403e90:	d96d      	bls.n	403f6e <__udivmoddi4+0x2be>
  403e92:	3802      	subs	r0, #2
  403e94:	443d      	add	r5, r7
  403e96:	1aeb      	subs	r3, r5, r3
  403e98:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  403e9c:	e78f      	b.n	403dbe <__udivmoddi4+0x10e>
  403e9e:	f1c1 0720 	rsb	r7, r1, #32
  403ea2:	fa22 f807 	lsr.w	r8, r2, r7
  403ea6:	408b      	lsls	r3, r1
  403ea8:	fa05 f401 	lsl.w	r4, r5, r1
  403eac:	ea48 0303 	orr.w	r3, r8, r3
  403eb0:	fa20 fe07 	lsr.w	lr, r0, r7
  403eb4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403eb8:	40fd      	lsrs	r5, r7
  403eba:	ea4e 0e04 	orr.w	lr, lr, r4
  403ebe:	fbb5 f9fc 	udiv	r9, r5, ip
  403ec2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403ec6:	fb0c 5519 	mls	r5, ip, r9, r5
  403eca:	fa1f f883 	uxth.w	r8, r3
  403ece:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  403ed2:	fb09 f408 	mul.w	r4, r9, r8
  403ed6:	42ac      	cmp	r4, r5
  403ed8:	fa02 f201 	lsl.w	r2, r2, r1
  403edc:	fa00 fa01 	lsl.w	sl, r0, r1
  403ee0:	d908      	bls.n	403ef4 <__udivmoddi4+0x244>
  403ee2:	18ed      	adds	r5, r5, r3
  403ee4:	f109 30ff 	add.w	r0, r9, #4294967295
  403ee8:	d243      	bcs.n	403f72 <__udivmoddi4+0x2c2>
  403eea:	42ac      	cmp	r4, r5
  403eec:	d941      	bls.n	403f72 <__udivmoddi4+0x2c2>
  403eee:	f1a9 0902 	sub.w	r9, r9, #2
  403ef2:	441d      	add	r5, r3
  403ef4:	1b2d      	subs	r5, r5, r4
  403ef6:	fa1f fe8e 	uxth.w	lr, lr
  403efa:	fbb5 f0fc 	udiv	r0, r5, ip
  403efe:	fb0c 5510 	mls	r5, ip, r0, r5
  403f02:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  403f06:	fb00 f808 	mul.w	r8, r0, r8
  403f0a:	45a0      	cmp	r8, r4
  403f0c:	d907      	bls.n	403f1e <__udivmoddi4+0x26e>
  403f0e:	18e4      	adds	r4, r4, r3
  403f10:	f100 35ff 	add.w	r5, r0, #4294967295
  403f14:	d229      	bcs.n	403f6a <__udivmoddi4+0x2ba>
  403f16:	45a0      	cmp	r8, r4
  403f18:	d927      	bls.n	403f6a <__udivmoddi4+0x2ba>
  403f1a:	3802      	subs	r0, #2
  403f1c:	441c      	add	r4, r3
  403f1e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  403f22:	eba4 0408 	sub.w	r4, r4, r8
  403f26:	fba0 8902 	umull	r8, r9, r0, r2
  403f2a:	454c      	cmp	r4, r9
  403f2c:	46c6      	mov	lr, r8
  403f2e:	464d      	mov	r5, r9
  403f30:	d315      	bcc.n	403f5e <__udivmoddi4+0x2ae>
  403f32:	d012      	beq.n	403f5a <__udivmoddi4+0x2aa>
  403f34:	b156      	cbz	r6, 403f4c <__udivmoddi4+0x29c>
  403f36:	ebba 030e 	subs.w	r3, sl, lr
  403f3a:	eb64 0405 	sbc.w	r4, r4, r5
  403f3e:	fa04 f707 	lsl.w	r7, r4, r7
  403f42:	40cb      	lsrs	r3, r1
  403f44:	431f      	orrs	r7, r3
  403f46:	40cc      	lsrs	r4, r1
  403f48:	6037      	str	r7, [r6, #0]
  403f4a:	6074      	str	r4, [r6, #4]
  403f4c:	2100      	movs	r1, #0
  403f4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403f52:	4618      	mov	r0, r3
  403f54:	e6f8      	b.n	403d48 <__udivmoddi4+0x98>
  403f56:	4690      	mov	r8, r2
  403f58:	e6e0      	b.n	403d1c <__udivmoddi4+0x6c>
  403f5a:	45c2      	cmp	sl, r8
  403f5c:	d2ea      	bcs.n	403f34 <__udivmoddi4+0x284>
  403f5e:	ebb8 0e02 	subs.w	lr, r8, r2
  403f62:	eb69 0503 	sbc.w	r5, r9, r3
  403f66:	3801      	subs	r0, #1
  403f68:	e7e4      	b.n	403f34 <__udivmoddi4+0x284>
  403f6a:	4628      	mov	r0, r5
  403f6c:	e7d7      	b.n	403f1e <__udivmoddi4+0x26e>
  403f6e:	4640      	mov	r0, r8
  403f70:	e791      	b.n	403e96 <__udivmoddi4+0x1e6>
  403f72:	4681      	mov	r9, r0
  403f74:	e7be      	b.n	403ef4 <__udivmoddi4+0x244>
  403f76:	4601      	mov	r1, r0
  403f78:	e778      	b.n	403e6c <__udivmoddi4+0x1bc>
  403f7a:	3802      	subs	r0, #2
  403f7c:	443c      	add	r4, r7
  403f7e:	e745      	b.n	403e0c <__udivmoddi4+0x15c>
  403f80:	4608      	mov	r0, r1
  403f82:	e708      	b.n	403d96 <__udivmoddi4+0xe6>
  403f84:	f1a8 0802 	sub.w	r8, r8, #2
  403f88:	443d      	add	r5, r7
  403f8a:	e72b      	b.n	403de4 <__udivmoddi4+0x134>

00403f8c <__aeabi_idiv0>:
  403f8c:	4770      	bx	lr
  403f8e:	bf00      	nop
  403f90:	20616c4f 	.word	0x20616c4f
  403f94:	69726573 	.word	0x69726573
  403f98:	000d6c61 	.word	0x000d6c61
  403f9c:	73657250 	.word	0x73657250
  403fa0:	6e6f6973 	.word	0x6e6f6973
  403fa4:	203a756f 	.word	0x203a756f
  403fa8:	202c6425 	.word	0x202c6425
  403fac:	0d0a6325 	.word	0x0d0a6325
  403fb0:	00000000 	.word	0x00000000
  403fb4:	6f6c6156 	.word	0x6f6c6156
  403fb8:	4b4f2072 	.word	0x4b4f2072
  403fbc:	00000d0a 	.word	0x00000d0a
  403fc0:	73657250 	.word	0x73657250
  403fc4:	6e6f6973 	.word	0x6e6f6973
  403fc8:	203a756f 	.word	0x203a756f
  403fcc:	000d0a32 	.word	0x000d0a32
  403fd0:	6163706f 	.word	0x6163706f
  403fd4:	7265206f 	.word	0x7265206f
  403fd8:	61646172 	.word	0x61646172
  403fdc:	000d0a21 	.word	0x000d0a21

00403fe0 <_global_impure_ptr>:
  403fe0:	20000018 0000000a 33323130 37363534     ... ....01234567
  403ff0:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  404000:	37363534 62613938 66656463 00000000     456789abcdef....
  404010:	6c756e28 0000296c                       (null)..

00404018 <blanks.7217>:
  404018:	20202020 20202020 20202020 20202020                     

00404028 <zeroes.7218>:
  404028:	30303030 30303030 30303030 30303030     0000000000000000
  404038:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00404048 <_ctype_>:
  404048:	20202000 20202020 28282020 20282828     .         ((((( 
  404058:	20202020 20202020 20202020 20202020                     
  404068:	10108820 10101010 10101010 10101010      ...............
  404078:	04040410 04040404 10040404 10101010     ................
  404088:	41411010 41414141 01010101 01010101     ..AAAAAA........
  404098:	01010101 01010101 01010101 10101010     ................
  4040a8:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4040b8:	02020202 02020202 02020202 10101010     ................
  4040c8:	00000020 00000000 00000000 00000000      ...............
	...

0040414c <_init>:
  40414c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40414e:	bf00      	nop
  404150:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404152:	bc08      	pop	{r3}
  404154:	469e      	mov	lr, r3
  404156:	4770      	bx	lr

00404158 <__init_array_start>:
  404158:	00402079 	.word	0x00402079

0040415c <__frame_dummy_init_array_entry>:
  40415c:	004000f1                                ..@.

00404160 <_fini>:
  404160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404162:	bf00      	nop
  404164:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404166:	bc08      	pop	{r3}
  404168:	469e      	mov	lr, r3
  40416a:	4770      	bx	lr

0040416c <__fini_array_start>:
  40416c:	004000cd 	.word	0x004000cd
